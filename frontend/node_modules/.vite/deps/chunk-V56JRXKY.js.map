{
  "version": 3,
  "sources": ["../../@thatopen/fragments/dist/index.mjs"],
  "sourcesContent": ["var Ke = Object.defineProperty;\nvar je = (a, t, s) => t in a ? Ke(a, t, { enumerable: !0, configurable: !0, writable: !0, value: s }) : a[t] = s;\nvar S = (a, t, s) => (je(a, typeof t != \"symbol\" ? t + \"\" : t, s), s);\nimport * as L from \"three\";\nimport { BufferAttribute as Me, Vector3 as T, Vector2 as Xt, Plane as Se, Line3 as dt, Triangle as is, Sphere as $e, Matrix4 as vt, Box3 as rt, BackSide as He, DoubleSide as Xe, FrontSide as re, Mesh as Be, Ray as Ye, BufferGeometry as ce } from \"three\";\nclass ae extends L.InstancedMesh {\n  /**\n   * Constructs a new FragmentMesh.\n   *\n   * @param geometry - The geometry for the mesh. Must be indexed.\n   * @param material - The material(s) for the mesh. If a single material is provided, it will be wrapped in an array.\n   * @param count - The number of instances to create.\n   * @param fragment - The fragment associated with this mesh.\n   */\n  constructor(s, e, i, n) {\n    super(s, e, i);\n    /**\n     * The fragment associated with this mesh.\n     */\n    S(this, \"fragment\");\n    /**\n     * The materials used by this mesh.\n     * If a single material is provided, it will be wrapped in an array.\n     */\n    S(this, \"material\");\n    /**\n     * The geometry used by this mesh.\n     * It must be an IndexedGeometry.\n     */\n    S(this, \"geometry\");\n    if (Array.isArray(e) || (e = [e]), this.material = e, !s.index)\n      throw new Error(\"The geometry for fragments must be indexed!\");\n    this.geometry = s, this.fragment = n;\n    const o = s.index.count;\n    s.groups.length || s.groups.push({\n      start: 0,\n      count: o,\n      materialIndex: 0\n    });\n  }\n  /**\n   * Exports the data of the fragment mesh to a serializable format.\n   *\n   * @returns An object containing the position, normal, index, groups, materials, matrices, and colors of the fragment mesh.\n   */\n  exportData() {\n    const s = this.geometry.attributes.position.array, e = this.geometry.attributes.normal.array, i = Array.from(this.geometry.index.array), n = [];\n    for (const f of this.geometry.groups) {\n      const l = f.materialIndex || 0, { start: b, count: h } = f;\n      n.push(b, h, l);\n    }\n    const o = [];\n    if (Array.isArray(this.material))\n      for (const f of this.material) {\n        const l = f.opacity, b = f.transparent ? 1 : 0, h = new L.Color(f.color).toArray();\n        o.push(l, b, ...h);\n      }\n    const r = Array.from(this.instanceMatrix.array);\n    let c;\n    return this.instanceColor !== null ? c = Array.from(this.instanceColor.array) : c = [], {\n      position: s,\n      normal: e,\n      index: i,\n      groups: n,\n      materials: o,\n      matrices: r,\n      colors: c\n    };\n  }\n}\nconst Te = 0, Ze = 1, Je = 2, fe = 2, Ts = 1.25, le = 1, vs = 6 * 4 + 4 + 4, Ms = 65535, We = Math.pow(2, -24), Os = Symbol(\"SKIP_GENERATION\");\nfunction Qe(a) {\n  return a.index ? a.index.count : a.attributes.position.count;\n}\nfunction Yt(a) {\n  return Qe(a) / 3;\n}\nfunction ti(a, t = ArrayBuffer) {\n  return a > 65535 ? new Uint32Array(new t(4 * a)) : new Uint16Array(new t(2 * a));\n}\nfunction si(a, t) {\n  if (!a.index) {\n    const s = a.attributes.position.count, e = t.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer, i = ti(s, e);\n    a.setIndex(new Me(i, 1));\n    for (let n = 0; n < s; n++)\n      i[n] = n;\n  }\n}\nfunction Oe(a) {\n  const t = Yt(a), s = a.drawRange, e = s.start / 3, i = (s.start + s.count) / 3, n = Math.max(0, e), o = Math.min(t, i) - n;\n  return [{\n    offset: Math.floor(n),\n    count: Math.floor(o)\n  }];\n}\nfunction Le(a) {\n  if (!a.groups || !a.groups.length)\n    return Oe(a);\n  const t = [], s = /* @__PURE__ */ new Set(), e = a.drawRange, i = e.start / 3, n = (e.start + e.count) / 3;\n  for (const r of a.groups) {\n    const c = r.start / 3, f = (r.start + r.count) / 3;\n    s.add(Math.max(i, c)), s.add(Math.min(n, f));\n  }\n  const o = Array.from(s.values()).sort((r, c) => r - c);\n  for (let r = 0; r < o.length - 1; r++) {\n    const c = o[r], f = o[r + 1];\n    t.push({\n      offset: Math.floor(c),\n      count: Math.floor(f - c)\n    });\n  }\n  return t;\n}\nfunction ei(a) {\n  if (a.groups.length === 0)\n    return !1;\n  const t = Yt(a), s = Le(a).sort((n, o) => n.offset - o.offset), e = s[s.length - 1];\n  e.count = Math.min(t - e.offset, e.count);\n  let i = 0;\n  return s.forEach(({ count: n }) => i += n), t !== i;\n}\nfunction R(a, t, s) {\n  return s.min.x = t[a], s.min.y = t[a + 1], s.min.z = t[a + 2], s.max.x = t[a + 3], s.max.y = t[a + 4], s.max.z = t[a + 5], s;\n}\nfunction ii(a) {\n  a[0] = a[1] = a[2] = 1 / 0, a[3] = a[4] = a[5] = -1 / 0;\n}\nfunction he(a) {\n  let t = -1, s = -1 / 0;\n  for (let e = 0; e < 3; e++) {\n    const i = a[e + 3] - a[e];\n    i > s && (s = i, t = e);\n  }\n  return t;\n}\nfunction be(a, t) {\n  t.set(a);\n}\nfunction ue(a, t, s) {\n  let e, i;\n  for (let n = 0; n < 3; n++) {\n    const o = n + 3;\n    e = a[n], i = t[n], s[n] = e < i ? e : i, e = a[o], i = t[o], s[o] = e > i ? e : i;\n  }\n}\nfunction as(a, t, s) {\n  for (let e = 0; e < 3; e++) {\n    const i = t[a + 2 * e], n = t[a + 2 * e + 1], o = i - n, r = i + n;\n    o < s[e] && (s[e] = o), r > s[e + 3] && (s[e + 3] = r);\n  }\n}\nfunction Jt(a) {\n  const t = a[3] - a[0], s = a[4] - a[1], e = a[5] - a[2];\n  return 2 * (t * s + s * e + e * t);\n}\nfunction Ls(a, t, s, e, i = null) {\n  let n = 1 / 0, o = 1 / 0, r = 1 / 0, c = -1 / 0, f = -1 / 0, l = -1 / 0, b = 1 / 0, h = 1 / 0, u = 1 / 0, _ = -1 / 0, w = -1 / 0, y = -1 / 0;\n  const d = i !== null;\n  for (let p = t * 6, I = (t + s) * 6; p < I; p += 6) {\n    const m = a[p + 0], g = a[p + 1], A = m - g, F = m + g;\n    A < n && (n = A), F > c && (c = F), d && m < b && (b = m), d && m > _ && (_ = m);\n    const x = a[p + 2], C = a[p + 3], v = x - C, M = x + C;\n    v < o && (o = v), M > f && (f = M), d && x < h && (h = x), d && x > w && (w = x);\n    const V = a[p + 4], P = a[p + 5], B = V - P, O = V + P;\n    B < r && (r = B), O > l && (l = O), d && V < u && (u = V), d && V > y && (y = V);\n  }\n  e[0] = n, e[1] = o, e[2] = r, e[3] = c, e[4] = f, e[5] = l, d && (i[0] = b, i[1] = h, i[2] = u, i[3] = _, i[4] = w, i[5] = y);\n}\nfunction ni(a, t, s, e) {\n  let i = 1 / 0, n = 1 / 0, o = 1 / 0, r = -1 / 0, c = -1 / 0, f = -1 / 0;\n  for (let l = t * 6, b = (t + s) * 6; l < b; l += 6) {\n    const h = a[l + 0];\n    h < i && (i = h), h > r && (r = h);\n    const u = a[l + 2];\n    u < n && (n = u), u > c && (c = u);\n    const _ = a[l + 4];\n    _ < o && (o = _), _ > f && (f = _);\n  }\n  e[0] = i, e[1] = n, e[2] = o, e[3] = r, e[4] = c, e[5] = f;\n}\nfunction oi(a, t) {\n  ii(t);\n  const s = a.attributes.position, e = a.index ? a.index.array : null, i = Yt(a), n = new Float32Array(i * 6), o = s.normalized, r = s.array, c = s.offset || 0;\n  let f = 3;\n  s.isInterleavedBufferAttribute && (f = s.data.stride);\n  const l = [\"getX\", \"getY\", \"getZ\"];\n  for (let b = 0; b < i; b++) {\n    const h = b * 3, u = b * 6;\n    let _ = h + 0, w = h + 1, y = h + 2;\n    e && (_ = e[_], w = e[w], y = e[y]), o || (_ = _ * f + c, w = w * f + c, y = y * f + c);\n    for (let d = 0; d < 3; d++) {\n      let p, I, m;\n      o ? (p = s[l[d]](_), I = s[l[d]](w), m = s[l[d]](y)) : (p = r[_ + d], I = r[w + d], m = r[y + d]);\n      let g = p;\n      I < g && (g = I), m < g && (g = m);\n      let A = p;\n      I > A && (A = I), m > A && (A = m);\n      const F = (A - g) / 2, x = d * 2;\n      n[u + x + 0] = g + F, n[u + x + 1] = F + (Math.abs(g) + F) * We, g < t[d] && (t[d] = g), A > t[d + 3] && (t[d + 3] = A);\n    }\n  }\n  return n;\n}\nconst ft = 32, ri = (a, t) => a.candidate - t.candidate, gt = new Array(ft).fill().map(() => ({\n  count: 0,\n  bounds: new Float32Array(6),\n  rightCacheBounds: new Float32Array(6),\n  leftCacheBounds: new Float32Array(6),\n  candidate: 0\n})), fs = new Float32Array(6);\nfunction ci(a, t, s, e, i, n) {\n  let o = -1, r = 0;\n  if (n === Te)\n    o = he(t), o !== -1 && (r = (t[o] + t[o + 3]) / 2);\n  else if (n === Ze)\n    o = he(a), o !== -1 && (r = ai(s, e, i, o));\n  else if (n === Je) {\n    const c = Jt(a);\n    let f = Ts * i;\n    const l = e * 6, b = (e + i) * 6;\n    for (let h = 0; h < 3; h++) {\n      const u = t[h], y = (t[h + 3] - u) / ft;\n      if (i < ft / 4) {\n        const d = [...gt];\n        d.length = i;\n        let p = 0;\n        for (let m = l; m < b; m += 6, p++) {\n          const g = d[p];\n          g.candidate = s[m + 2 * h], g.count = 0;\n          const {\n            bounds: A,\n            leftCacheBounds: F,\n            rightCacheBounds: x\n          } = g;\n          for (let C = 0; C < 3; C++)\n            x[C] = 1 / 0, x[C + 3] = -1 / 0, F[C] = 1 / 0, F[C + 3] = -1 / 0, A[C] = 1 / 0, A[C + 3] = -1 / 0;\n          as(m, s, A);\n        }\n        d.sort(ri);\n        let I = i;\n        for (let m = 0; m < I; m++) {\n          const g = d[m];\n          for (; m + 1 < I && d[m + 1].candidate === g.candidate; )\n            d.splice(m + 1, 1), I--;\n        }\n        for (let m = l; m < b; m += 6) {\n          const g = s[m + 2 * h];\n          for (let A = 0; A < I; A++) {\n            const F = d[A];\n            g >= F.candidate ? as(m, s, F.rightCacheBounds) : (as(m, s, F.leftCacheBounds), F.count++);\n          }\n        }\n        for (let m = 0; m < I; m++) {\n          const g = d[m], A = g.count, F = i - g.count, x = g.leftCacheBounds, C = g.rightCacheBounds;\n          let v = 0;\n          A !== 0 && (v = Jt(x) / c);\n          let M = 0;\n          F !== 0 && (M = Jt(C) / c);\n          const V = le + Ts * (v * A + M * F);\n          V < f && (o = h, f = V, r = g.candidate);\n        }\n      } else {\n        for (let I = 0; I < ft; I++) {\n          const m = gt[I];\n          m.count = 0, m.candidate = u + y + I * y;\n          const g = m.bounds;\n          for (let A = 0; A < 3; A++)\n            g[A] = 1 / 0, g[A + 3] = -1 / 0;\n        }\n        for (let I = l; I < b; I += 6) {\n          let A = ~~((s[I + 2 * h] - u) / y);\n          A >= ft && (A = ft - 1);\n          const F = gt[A];\n          F.count++, as(I, s, F.bounds);\n        }\n        const d = gt[ft - 1];\n        be(d.bounds, d.rightCacheBounds);\n        for (let I = ft - 2; I >= 0; I--) {\n          const m = gt[I], g = gt[I + 1];\n          ue(m.bounds, g.rightCacheBounds, m.rightCacheBounds);\n        }\n        let p = 0;\n        for (let I = 0; I < ft - 1; I++) {\n          const m = gt[I], g = m.count, A = m.bounds, x = gt[I + 1].rightCacheBounds;\n          g !== 0 && (p === 0 ? be(A, fs) : ue(A, fs, fs)), p += g;\n          let C = 0, v = 0;\n          p !== 0 && (C = Jt(fs) / c);\n          const M = i - p;\n          M !== 0 && (v = Jt(x) / c);\n          const V = le + Ts * (C * p + v * M);\n          V < f && (o = h, f = V, r = m.candidate);\n        }\n      }\n    }\n  } else\n    console.warn(`MeshBVH: Invalid build strategy value ${n} used.`);\n  return { axis: o, pos: r };\n}\nfunction ai(a, t, s, e) {\n  let i = 0;\n  for (let n = t, o = t + s; n < o; n++)\n    i += a[n * 6 + e * 2];\n  return i / s;\n}\nclass ls {\n  constructor() {\n  }\n}\nfunction fi(a, t, s, e, i, n) {\n  let o = e, r = e + i - 1;\n  const c = n.pos, f = n.axis * 2;\n  for (; ; ) {\n    for (; o <= r && s[o * 6 + f] < c; )\n      o++;\n    for (; o <= r && s[r * 6 + f] >= c; )\n      r--;\n    if (o < r) {\n      for (let l = 0; l < 3; l++) {\n        let b = t[o * 3 + l];\n        t[o * 3 + l] = t[r * 3 + l], t[r * 3 + l] = b;\n      }\n      for (let l = 0; l < 6; l++) {\n        let b = s[o * 6 + l];\n        s[o * 6 + l] = s[r * 6 + l], s[r * 6 + l] = b;\n      }\n      o++, r--;\n    } else\n      return o;\n  }\n}\nfunction li(a, t, s, e, i, n) {\n  let o = e, r = e + i - 1;\n  const c = n.pos, f = n.axis * 2;\n  for (; ; ) {\n    for (; o <= r && s[o * 6 + f] < c; )\n      o++;\n    for (; o <= r && s[r * 6 + f] >= c; )\n      r--;\n    if (o < r) {\n      let l = a[o];\n      a[o] = a[r], a[r] = l;\n      for (let b = 0; b < 6; b++) {\n        let h = s[o * 6 + b];\n        s[o * 6 + b] = s[r * 6 + b], s[r * 6 + b] = h;\n      }\n      o++, r--;\n    } else\n      return o;\n  }\n}\nfunction hi(a, t) {\n  const s = (a.index ? a.index.count : a.attributes.position.count) / 3, e = s > 2 ** 16, i = e ? 4 : 2, n = t ? new SharedArrayBuffer(s * i) : new ArrayBuffer(s * i), o = e ? new Uint32Array(n) : new Uint16Array(n);\n  for (let r = 0, c = o.length; r < c; r++)\n    o[r] = r;\n  return o;\n}\nfunction bi(a, t) {\n  const s = a.geometry, e = s.index ? s.index.array : null, i = t.maxDepth, n = t.verbose, o = t.maxLeafTris, r = t.strategy, c = t.onProgress, f = Yt(s), l = a._indirectBuffer;\n  let b = !1;\n  const h = new Float32Array(6), u = new Float32Array(6), _ = oi(s, h), w = t.indirect ? li : fi, y = [], d = t.indirect ? Oe(s) : Le(s);\n  if (d.length === 1) {\n    const m = d[0], g = new ls();\n    g.boundingData = h, ni(_, m.offset, m.count, u), I(g, m.offset, m.count, u), y.push(g);\n  } else\n    for (let m of d) {\n      const g = new ls();\n      g.boundingData = new Float32Array(6), Ls(_, m.offset, m.count, g.boundingData, u), I(g, m.offset, m.count, u), y.push(g);\n    }\n  return y;\n  function p(m) {\n    c && c(m / f);\n  }\n  function I(m, g, A, F = null, x = 0) {\n    if (!b && x >= i && (b = !0, n && (console.warn(`MeshBVH: Max depth of ${i} reached when generating BVH. Consider increasing maxDepth.`), console.warn(s))), A <= o || x >= i)\n      return p(g + A), m.offset = g, m.count = A, m;\n    const C = ci(m.boundingData, F, _, g, A, r);\n    if (C.axis === -1)\n      return p(g + A), m.offset = g, m.count = A, m;\n    const v = w(l, e, _, g, A, C);\n    if (v === g || v === g + A)\n      p(g + A), m.offset = g, m.count = A;\n    else {\n      m.splitAxis = C.axis;\n      const M = new ls(), V = g, P = v - g;\n      m.left = M, M.boundingData = new Float32Array(6), Ls(_, V, P, M.boundingData, u), I(M, V, P, u, x + 1);\n      const B = new ls(), O = v, D = A - P;\n      m.right = B, B.boundingData = new Float32Array(6), Ls(_, O, D, B.boundingData, u), I(B, O, D, u, x + 1);\n    }\n    return m;\n  }\n}\nfunction ui(a, t) {\n  const s = a.geometry;\n  t.indirect && (a._indirectBuffer = hi(s, t.useSharedArrayBuffer), ei(s) && !t.verbose && console.warn(\n    'MeshBVH: Provided geometry contains groups that do not fully span the vertex contents while using the \"indirect\" option. BVH may incorrectly report intersections on unrendered portions of the geometry.'\n  )), a._indirectBuffer || si(s, t);\n  const e = bi(a, t);\n  let i, n, o;\n  const r = [], c = t.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\n  for (let b = 0; b < e.length; b++) {\n    const h = e[b];\n    let u = f(h);\n    const _ = new c(vs * u);\n    i = new Float32Array(_), n = new Uint32Array(_), o = new Uint16Array(_), l(0, h), r.push(_);\n  }\n  a._roots = r;\n  return;\n  function f(b) {\n    return b.count ? 1 : 1 + f(b.left) + f(b.right);\n  }\n  function l(b, h) {\n    const u = b / 4, _ = b / 2, w = !!h.count, y = h.boundingData;\n    for (let d = 0; d < 6; d++)\n      i[u + d] = y[d];\n    if (w) {\n      const d = h.offset, p = h.count;\n      return n[u + 6] = d, o[_ + 14] = p, o[_ + 15] = Ms, b + vs;\n    } else {\n      const d = h.left, p = h.right, I = h.splitAxis;\n      let m;\n      if (m = l(b + vs, d), m / 4 > Math.pow(2, 32))\n        throw new Error(\"MeshBVH: Cannot store child pointer greater than 32 bits.\");\n      return n[u + 6] = m / 4, m = l(m, p), n[u + 7] = I, m;\n    }\n  }\n}\nclass _t {\n  constructor() {\n    this.min = 1 / 0, this.max = -1 / 0;\n  }\n  setFromPointsField(t, s) {\n    let e = 1 / 0, i = -1 / 0;\n    for (let n = 0, o = t.length; n < o; n++) {\n      const c = t[n][s];\n      e = c < e ? c : e, i = c > i ? c : i;\n    }\n    this.min = e, this.max = i;\n  }\n  setFromPoints(t, s) {\n    let e = 1 / 0, i = -1 / 0;\n    for (let n = 0, o = s.length; n < o; n++) {\n      const r = s[n], c = t.dot(r);\n      e = c < e ? c : e, i = c > i ? c : i;\n    }\n    this.min = e, this.max = i;\n  }\n  isSeparated(t) {\n    return this.min > t.max || t.min > this.max;\n  }\n}\n_t.prototype.setFromBox = function() {\n  const a = new T();\n  return function(s, e) {\n    const i = e.min, n = e.max;\n    let o = 1 / 0, r = -1 / 0;\n    for (let c = 0; c <= 1; c++)\n      for (let f = 0; f <= 1; f++)\n        for (let l = 0; l <= 1; l++) {\n          a.x = i.x * c + n.x * (1 - c), a.y = i.y * f + n.y * (1 - f), a.z = i.z * l + n.z * (1 - l);\n          const b = s.dot(a);\n          o = Math.min(b, o), r = Math.max(b, r);\n        }\n    this.min = o, this.max = r;\n  };\n}();\nconst di = function() {\n  const a = new T(), t = new T(), s = new T();\n  return function(i, n, o) {\n    const r = i.start, c = a, f = n.start, l = t;\n    s.subVectors(r, f), a.subVectors(i.end, i.start), t.subVectors(n.end, n.start);\n    const b = s.dot(l), h = l.dot(c), u = l.dot(l), _ = s.dot(c), y = c.dot(c) * u - h * h;\n    let d, p;\n    y !== 0 ? d = (b * h - _ * u) / y : d = 0, p = (b + d * h) / u, o.x = d, o.y = p;\n  };\n}(), ie = function() {\n  const a = new Xt(), t = new T(), s = new T();\n  return function(i, n, o, r) {\n    di(i, n, a);\n    let c = a.x, f = a.y;\n    if (c >= 0 && c <= 1 && f >= 0 && f <= 1) {\n      i.at(c, o), n.at(f, r);\n      return;\n    } else if (c >= 0 && c <= 1) {\n      f < 0 ? n.at(0, r) : n.at(1, r), i.closestPointToPoint(r, !0, o);\n      return;\n    } else if (f >= 0 && f <= 1) {\n      c < 0 ? i.at(0, o) : i.at(1, o), n.closestPointToPoint(o, !0, r);\n      return;\n    } else {\n      let l;\n      c < 0 ? l = i.start : l = i.end;\n      let b;\n      f < 0 ? b = n.start : b = n.end;\n      const h = t, u = s;\n      if (i.closestPointToPoint(b, !0, t), n.closestPointToPoint(l, !0, s), h.distanceToSquared(b) <= u.distanceToSquared(l)) {\n        o.copy(h), r.copy(b);\n        return;\n      } else {\n        o.copy(l), r.copy(u);\n        return;\n      }\n    }\n  };\n}(), _i = function() {\n  const a = new T(), t = new T(), s = new Se(), e = new dt();\n  return function(n, o) {\n    const { radius: r, center: c } = n, { a: f, b: l, c: b } = o;\n    if (e.start = f, e.end = l, e.closestPointToPoint(c, !0, a).distanceTo(c) <= r || (e.start = f, e.end = b, e.closestPointToPoint(c, !0, a).distanceTo(c) <= r) || (e.start = l, e.end = b, e.closestPointToPoint(c, !0, a).distanceTo(c) <= r))\n      return !0;\n    const w = o.getPlane(s);\n    if (Math.abs(w.distanceToPoint(c)) <= r) {\n      const d = w.projectPoint(c, t);\n      if (o.containsPoint(d))\n        return !0;\n    }\n    return !1;\n  };\n}(), pi = 1e-15;\nfunction Ds(a) {\n  return Math.abs(a) < pi;\n}\nclass ot extends is {\n  constructor(...t) {\n    super(...t), this.isExtendedTriangle = !0, this.satAxes = new Array(4).fill().map(() => new T()), this.satBounds = new Array(4).fill().map(() => new _t()), this.points = [this.a, this.b, this.c], this.sphere = new $e(), this.plane = new Se(), this.needsUpdate = !0;\n  }\n  intersectsSphere(t) {\n    return _i(t, this);\n  }\n  update() {\n    const t = this.a, s = this.b, e = this.c, i = this.points, n = this.satAxes, o = this.satBounds, r = n[0], c = o[0];\n    this.getNormal(r), c.setFromPoints(r, i);\n    const f = n[1], l = o[1];\n    f.subVectors(t, s), l.setFromPoints(f, i);\n    const b = n[2], h = o[2];\n    b.subVectors(s, e), h.setFromPoints(b, i);\n    const u = n[3], _ = o[3];\n    u.subVectors(e, t), _.setFromPoints(u, i), this.sphere.setFromPoints(this.points), this.plane.setFromNormalAndCoplanarPoint(r, t), this.needsUpdate = !1;\n  }\n}\not.prototype.closestPointToSegment = function() {\n  const a = new T(), t = new T(), s = new dt();\n  return function(i, n = null, o = null) {\n    const { start: r, end: c } = i, f = this.points;\n    let l, b = 1 / 0;\n    for (let h = 0; h < 3; h++) {\n      const u = (h + 1) % 3;\n      s.start.copy(f[h]), s.end.copy(f[u]), ie(s, i, a, t), l = a.distanceToSquared(t), l < b && (b = l, n && n.copy(a), o && o.copy(t));\n    }\n    return this.closestPointToPoint(r, a), l = r.distanceToSquared(a), l < b && (b = l, n && n.copy(a), o && o.copy(r)), this.closestPointToPoint(c, a), l = c.distanceToSquared(a), l < b && (b = l, n && n.copy(a), o && o.copy(c)), Math.sqrt(b);\n  };\n}();\not.prototype.intersectsTriangle = function() {\n  const a = new ot(), t = new Array(3), s = new Array(3), e = new _t(), i = new _t(), n = new T(), o = new T(), r = new T(), c = new T(), f = new T(), l = new dt(), b = new dt(), h = new dt(), u = new T();\n  function _(w, y, d) {\n    const p = w.points;\n    let I = 0, m = -1;\n    for (let g = 0; g < 3; g++) {\n      const { start: A, end: F } = l;\n      A.copy(p[g]), F.copy(p[(g + 1) % 3]), l.delta(o);\n      const x = Ds(y.distanceToPoint(A));\n      if (Ds(y.normal.dot(o)) && x) {\n        d.copy(l), I = 2;\n        break;\n      }\n      const C = y.intersectLine(l, u);\n      if (!C && x && u.copy(A), (C || x) && !Ds(u.distanceTo(F))) {\n        if (I <= 1)\n          (I === 1 ? d.start : d.end).copy(u), x && (m = I);\n        else if (I >= 2) {\n          (m === 1 ? d.start : d.end).copy(u), I = 2;\n          break;\n        }\n        if (I++, I === 2 && m === -1)\n          break;\n      }\n    }\n    return I;\n  }\n  return function(y, d = null, p = !1) {\n    this.needsUpdate && this.update(), y.isExtendedTriangle ? y.needsUpdate && y.update() : (a.copy(y), a.update(), y = a);\n    const I = this.plane, m = y.plane;\n    if (Math.abs(I.normal.dot(m.normal)) > 1 - 1e-10) {\n      const g = this.satBounds, A = this.satAxes;\n      s[0] = y.a, s[1] = y.b, s[2] = y.c;\n      for (let C = 0; C < 4; C++) {\n        const v = g[C], M = A[C];\n        if (e.setFromPoints(M, s), v.isSeparated(e))\n          return !1;\n      }\n      const F = y.satBounds, x = y.satAxes;\n      t[0] = this.a, t[1] = this.b, t[2] = this.c;\n      for (let C = 0; C < 4; C++) {\n        const v = F[C], M = x[C];\n        if (e.setFromPoints(M, t), v.isSeparated(e))\n          return !1;\n      }\n      for (let C = 0; C < 4; C++) {\n        const v = A[C];\n        for (let M = 0; M < 4; M++) {\n          const V = x[M];\n          if (n.crossVectors(v, V), e.setFromPoints(n, t), i.setFromPoints(n, s), e.isSeparated(i))\n            return !1;\n        }\n      }\n      return d && (p || console.warn(\"ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0.\"), d.start.set(0, 0, 0), d.end.set(0, 0, 0)), !0;\n    } else {\n      const g = _(this, m, b);\n      if (g === 1 && y.containsPoint(b.end))\n        return d && (d.start.copy(b.end), d.end.copy(b.end)), !0;\n      if (g !== 2)\n        return !1;\n      const A = _(y, I, h);\n      if (A === 1 && this.containsPoint(h.end))\n        return d && (d.start.copy(h.end), d.end.copy(h.end)), !0;\n      if (A !== 2)\n        return !1;\n      if (b.delta(r), h.delta(c), r.dot(c) < 0) {\n        let P = h.start;\n        h.start = h.end, h.end = P;\n      }\n      const F = b.start.dot(r), x = b.end.dot(r), C = h.start.dot(r), v = h.end.dot(r), M = x < C, V = F < v;\n      return F !== v && C !== x && M === V ? !1 : (d && (f.subVectors(b.start, h.start), f.dot(r) > 0 ? d.start.copy(b.start) : d.start.copy(h.start), f.subVectors(b.end, h.end), f.dot(r) < 0 ? d.end.copy(b.end) : d.end.copy(h.end)), !0);\n    }\n  };\n}();\not.prototype.distanceToPoint = function() {\n  const a = new T();\n  return function(s) {\n    return this.closestPointToPoint(s, a), s.distanceTo(a);\n  };\n}();\not.prototype.distanceToTriangle = function() {\n  const a = new T(), t = new T(), s = [\"a\", \"b\", \"c\"], e = new dt(), i = new dt();\n  return function(o, r = null, c = null) {\n    const f = r || c ? e : null;\n    if (this.intersectsTriangle(o, f))\n      return (r || c) && (r && f.getCenter(r), c && f.getCenter(c)), 0;\n    let l = 1 / 0;\n    for (let b = 0; b < 3; b++) {\n      let h;\n      const u = s[b], _ = o[u];\n      this.closestPointToPoint(_, a), h = _.distanceToSquared(a), h < l && (l = h, r && r.copy(a), c && c.copy(_));\n      const w = this[u];\n      o.closestPointToPoint(w, a), h = w.distanceToSquared(a), h < l && (l = h, r && r.copy(w), c && c.copy(a));\n    }\n    for (let b = 0; b < 3; b++) {\n      const h = s[b], u = s[(b + 1) % 3];\n      e.set(this[h], this[u]);\n      for (let _ = 0; _ < 3; _++) {\n        const w = s[_], y = s[(_ + 1) % 3];\n        i.set(o[w], o[y]), ie(e, i, a, t);\n        const d = a.distanceToSquared(t);\n        d < l && (l = d, r && r.copy(a), c && c.copy(t));\n      }\n    }\n    return Math.sqrt(l);\n  };\n}();\nclass H {\n  constructor(t, s, e) {\n    this.isOrientedBox = !0, this.min = new T(), this.max = new T(), this.matrix = new vt(), this.invMatrix = new vt(), this.points = new Array(8).fill().map(() => new T()), this.satAxes = new Array(3).fill().map(() => new T()), this.satBounds = new Array(3).fill().map(() => new _t()), this.alignedSatBounds = new Array(3).fill().map(() => new _t()), this.needsUpdate = !1, t && this.min.copy(t), s && this.max.copy(s), e && this.matrix.copy(e);\n  }\n  set(t, s, e) {\n    this.min.copy(t), this.max.copy(s), this.matrix.copy(e), this.needsUpdate = !0;\n  }\n  copy(t) {\n    this.min.copy(t.min), this.max.copy(t.max), this.matrix.copy(t.matrix), this.needsUpdate = !0;\n  }\n}\nH.prototype.update = /* @__PURE__ */ function() {\n  return function() {\n    const t = this.matrix, s = this.min, e = this.max, i = this.points;\n    for (let f = 0; f <= 1; f++)\n      for (let l = 0; l <= 1; l++)\n        for (let b = 0; b <= 1; b++) {\n          const h = 1 * f | 2 * l | 4 * b, u = i[h];\n          u.x = f ? e.x : s.x, u.y = l ? e.y : s.y, u.z = b ? e.z : s.z, u.applyMatrix4(t);\n        }\n    const n = this.satBounds, o = this.satAxes, r = i[0];\n    for (let f = 0; f < 3; f++) {\n      const l = o[f], b = n[f], h = 1 << f, u = i[h];\n      l.subVectors(r, u), b.setFromPoints(l, i);\n    }\n    const c = this.alignedSatBounds;\n    c[0].setFromPointsField(i, \"x\"), c[1].setFromPointsField(i, \"y\"), c[2].setFromPointsField(i, \"z\"), this.invMatrix.copy(this.matrix).invert(), this.needsUpdate = !1;\n  };\n}();\nH.prototype.intersectsBox = function() {\n  const a = new _t();\n  return function(s) {\n    this.needsUpdate && this.update();\n    const e = s.min, i = s.max, n = this.satBounds, o = this.satAxes, r = this.alignedSatBounds;\n    if (a.min = e.x, a.max = i.x, r[0].isSeparated(a) || (a.min = e.y, a.max = i.y, r[1].isSeparated(a)) || (a.min = e.z, a.max = i.z, r[2].isSeparated(a)))\n      return !1;\n    for (let c = 0; c < 3; c++) {\n      const f = o[c], l = n[c];\n      if (a.setFromBox(f, s), l.isSeparated(a))\n        return !1;\n    }\n    return !0;\n  };\n}();\nH.prototype.intersectsTriangle = function() {\n  const a = new ot(), t = new Array(3), s = new _t(), e = new _t(), i = new T();\n  return function(o) {\n    this.needsUpdate && this.update(), o.isExtendedTriangle ? o.needsUpdate && o.update() : (a.copy(o), a.update(), o = a);\n    const r = this.satBounds, c = this.satAxes;\n    t[0] = o.a, t[1] = o.b, t[2] = o.c;\n    for (let h = 0; h < 3; h++) {\n      const u = r[h], _ = c[h];\n      if (s.setFromPoints(_, t), u.isSeparated(s))\n        return !1;\n    }\n    const f = o.satBounds, l = o.satAxes, b = this.points;\n    for (let h = 0; h < 3; h++) {\n      const u = f[h], _ = l[h];\n      if (s.setFromPoints(_, b), u.isSeparated(s))\n        return !1;\n    }\n    for (let h = 0; h < 3; h++) {\n      const u = c[h];\n      for (let _ = 0; _ < 4; _++) {\n        const w = l[_];\n        if (i.crossVectors(u, w), s.setFromPoints(i, t), e.setFromPoints(i, b), s.isSeparated(e))\n          return !1;\n      }\n    }\n    return !0;\n  };\n}();\nH.prototype.closestPointToPoint = /* @__PURE__ */ function() {\n  return function(t, s) {\n    return this.needsUpdate && this.update(), s.copy(t).applyMatrix4(this.invMatrix).clamp(this.min, this.max).applyMatrix4(this.matrix), s;\n  };\n}();\nH.prototype.distanceToPoint = function() {\n  const a = new T();\n  return function(s) {\n    return this.closestPointToPoint(s, a), s.distanceTo(a);\n  };\n}();\nH.prototype.distanceToBox = function() {\n  const a = [\"x\", \"y\", \"z\"], t = new Array(12).fill().map(() => new dt()), s = new Array(12).fill().map(() => new dt()), e = new T(), i = new T();\n  return function(o, r = 0, c = null, f = null) {\n    if (this.needsUpdate && this.update(), this.intersectsBox(o))\n      return (c || f) && (o.getCenter(i), this.closestPointToPoint(i, e), o.closestPointToPoint(e, i), c && c.copy(e), f && f.copy(i)), 0;\n    const l = r * r, b = o.min, h = o.max, u = this.points;\n    let _ = 1 / 0;\n    for (let y = 0; y < 8; y++) {\n      const d = u[y];\n      i.copy(d).clamp(b, h);\n      const p = d.distanceToSquared(i);\n      if (p < _ && (_ = p, c && c.copy(d), f && f.copy(i), p < l))\n        return Math.sqrt(p);\n    }\n    let w = 0;\n    for (let y = 0; y < 3; y++)\n      for (let d = 0; d <= 1; d++)\n        for (let p = 0; p <= 1; p++) {\n          const I = (y + 1) % 3, m = (y + 2) % 3, g = d << I | p << m, A = 1 << y | d << I | p << m, F = u[g], x = u[A];\n          t[w].set(F, x);\n          const v = a[y], M = a[I], V = a[m], P = s[w], B = P.start, O = P.end;\n          B[v] = b[v], B[M] = d ? b[M] : h[M], B[V] = p ? b[V] : h[M], O[v] = h[v], O[M] = d ? b[M] : h[M], O[V] = p ? b[V] : h[M], w++;\n        }\n    for (let y = 0; y <= 1; y++)\n      for (let d = 0; d <= 1; d++)\n        for (let p = 0; p <= 1; p++) {\n          i.x = y ? h.x : b.x, i.y = d ? h.y : b.y, i.z = p ? h.z : b.z, this.closestPointToPoint(i, e);\n          const I = i.distanceToSquared(e);\n          if (I < _ && (_ = I, c && c.copy(e), f && f.copy(i), I < l))\n            return Math.sqrt(I);\n        }\n    for (let y = 0; y < 12; y++) {\n      const d = t[y];\n      for (let p = 0; p < 12; p++) {\n        const I = s[p];\n        ie(d, I, e, i);\n        const m = e.distanceToSquared(i);\n        if (m < _ && (_ = m, c && c.copy(e), f && f.copy(i), m < l))\n          return Math.sqrt(m);\n      }\n    }\n    return Math.sqrt(_);\n  };\n}();\nclass ne {\n  constructor(t) {\n    this._getNewPrimitive = t, this._primitives = [];\n  }\n  getPrimitive() {\n    const t = this._primitives;\n    return t.length === 0 ? this._getNewPrimitive() : t.pop();\n  }\n  releasePrimitive(t) {\n    this._primitives.push(t);\n  }\n}\nclass mi extends ne {\n  constructor() {\n    super(() => new ot());\n  }\n}\nconst Q = /* @__PURE__ */ new mi();\nfunction Z(a, t) {\n  return t[a + 15] === 65535;\n}\nfunction J(a, t) {\n  return t[a + 6];\n}\nfunction tt(a, t) {\n  return t[a + 14];\n}\nfunction st(a) {\n  return a + 8;\n}\nfunction et(a, t) {\n  return t[a + 6];\n}\nfunction De(a, t) {\n  return t[a + 7];\n}\nclass yi {\n  constructor() {\n    this.float32Array = null, this.uint16Array = null, this.uint32Array = null;\n    const t = [];\n    let s = null;\n    this.setBuffer = (e) => {\n      s && t.push(s), s = e, this.float32Array = new Float32Array(e), this.uint16Array = new Uint16Array(e), this.uint32Array = new Uint32Array(e);\n    }, this.clearBuffer = () => {\n      s = null, this.float32Array = null, this.uint16Array = null, this.uint32Array = null, t.length !== 0 && this.setBuffer(t.pop());\n    };\n  }\n}\nconst G = new yi();\nlet At, Ht;\nconst zt = [], hs = /* @__PURE__ */ new ne(() => new rt());\nfunction gi(a, t, s, e, i, n) {\n  At = hs.getPrimitive(), Ht = hs.getPrimitive(), zt.push(At, Ht), G.setBuffer(a._roots[t]);\n  const o = $s(0, a.geometry, s, e, i, n);\n  G.clearBuffer(), hs.releasePrimitive(At), hs.releasePrimitive(Ht), zt.pop(), zt.pop();\n  const r = zt.length;\n  return r > 0 && (Ht = zt[r - 1], At = zt[r - 2]), o;\n}\nfunction $s(a, t, s, e, i = null, n = 0, o = 0) {\n  const { float32Array: r, uint16Array: c, uint32Array: f } = G;\n  let l = a * 2;\n  if (Z(l, c)) {\n    const h = J(a, f), u = tt(l, c);\n    return R(a, r, At), e(h, u, !1, o, n + a, At);\n  } else {\n    let v = function(V) {\n      const { uint16Array: P, uint32Array: B } = G;\n      let O = V * 2;\n      for (; !Z(O, P); )\n        V = st(V), O = V * 2;\n      return J(V, B);\n    }, M = function(V) {\n      const { uint16Array: P, uint32Array: B } = G;\n      let O = V * 2;\n      for (; !Z(O, P); )\n        V = et(V, B), O = V * 2;\n      return J(V, B) + tt(O, P);\n    };\n    const h = st(a), u = et(a, f);\n    let _ = h, w = u, y, d, p, I;\n    if (i && (p = At, I = Ht, R(_, r, p), R(w, r, I), y = i(p), d = i(I), d < y)) {\n      _ = u, w = h;\n      const V = y;\n      y = d, d = V, p = I;\n    }\n    p || (p = At, R(_, r, p));\n    const m = Z(_ * 2, c), g = s(p, m, y, o + 1, n + _);\n    let A;\n    if (g === fe) {\n      const V = v(_), B = M(_) - V;\n      A = e(V, B, !0, o + 1, n + _, p);\n    } else\n      A = g && $s(\n        _,\n        t,\n        s,\n        e,\n        i,\n        n,\n        o + 1\n      );\n    if (A)\n      return !0;\n    I = Ht, R(w, r, I);\n    const F = Z(w * 2, c), x = s(I, F, d, o + 1, n + w);\n    let C;\n    if (x === fe) {\n      const V = v(w), B = M(w) - V;\n      C = e(V, B, !0, o + 1, n + w, I);\n    } else\n      C = x && $s(\n        w,\n        t,\n        s,\n        e,\n        i,\n        n,\n        o + 1\n      );\n    return !!C;\n  }\n}\nconst Wt = /* @__PURE__ */ new T(), Us = /* @__PURE__ */ new T();\nfunction Ii(a, t, s = {}, e = 0, i = 1 / 0) {\n  const n = e * e, o = i * i;\n  let r = 1 / 0, c = null;\n  if (a.shapecast(\n    {\n      boundsTraverseOrder: (l) => (Wt.copy(t).clamp(l.min, l.max), Wt.distanceToSquared(t)),\n      intersectsBounds: (l, b, h) => h < r && h < o,\n      intersectsTriangle: (l, b) => {\n        l.closestPointToPoint(t, Wt);\n        const h = t.distanceToSquared(Wt);\n        return h < r && (Us.copy(Wt), r = h, c = b), h < n;\n      }\n    }\n  ), r === 1 / 0)\n    return null;\n  const f = Math.sqrt(r);\n  return s.point ? s.point.copy(Us) : s.point = Us.clone(), s.distance = f, s.faceIndex = c, s;\n}\nconst Et = /* @__PURE__ */ new T(), Gt = /* @__PURE__ */ new T(), Rt = /* @__PURE__ */ new T(), bs = /* @__PURE__ */ new Xt(), us = /* @__PURE__ */ new Xt(), ds = /* @__PURE__ */ new Xt(), de = /* @__PURE__ */ new T(), _e = /* @__PURE__ */ new T(), pe = /* @__PURE__ */ new T(), _s = /* @__PURE__ */ new T();\nfunction wi(a, t, s, e, i, n) {\n  let o;\n  return n === He ? o = a.intersectTriangle(e, s, t, !0, i) : o = a.intersectTriangle(t, s, e, n !== Xe, i), o === null ? null : {\n    distance: a.origin.distanceTo(i),\n    point: i.clone()\n  };\n}\nfunction xi(a, t, s, e, i, n, o, r, c) {\n  Et.fromBufferAttribute(t, n), Gt.fromBufferAttribute(t, o), Rt.fromBufferAttribute(t, r);\n  const f = wi(a, Et, Gt, Rt, _s, c);\n  if (f) {\n    e && (bs.fromBufferAttribute(e, n), us.fromBufferAttribute(e, o), ds.fromBufferAttribute(e, r), f.uv = is.getInterpolation(_s, Et, Gt, Rt, bs, us, ds, new Xt())), i && (bs.fromBufferAttribute(i, n), us.fromBufferAttribute(i, o), ds.fromBufferAttribute(i, r), f.uv1 = is.getInterpolation(_s, Et, Gt, Rt, bs, us, ds, new Xt())), s && (de.fromBufferAttribute(s, n), _e.fromBufferAttribute(s, o), pe.fromBufferAttribute(s, r), f.normal = is.getInterpolation(_s, Et, Gt, Rt, de, _e, pe, new T()), f.normal.dot(a.direction) > 0 && f.normal.multiplyScalar(-1));\n    const l = {\n      a: n,\n      b: o,\n      c: r,\n      normal: new T(),\n      materialIndex: 0\n    };\n    is.getNormal(Et, Gt, Rt, l.normal), f.face = l, f.faceIndex = n;\n  }\n  return f;\n}\nfunction Ss(a, t, s, e, i) {\n  const n = e * 3;\n  let o = n + 0, r = n + 1, c = n + 2;\n  const f = a.index;\n  a.index && (o = f.getX(o), r = f.getX(r), c = f.getX(c));\n  const { position: l, normal: b, uv: h, uv1: u } = a.attributes, _ = xi(s, l, b, h, u, o, r, c, t);\n  return _ ? (_.faceIndex = e, i && i.push(_), _) : null;\n}\nfunction k(a, t, s, e) {\n  const i = a.a, n = a.b, o = a.c;\n  let r = t, c = t + 1, f = t + 2;\n  s && (r = s.getX(r), c = s.getX(c), f = s.getX(f)), i.x = e.getX(r), i.y = e.getY(r), i.z = e.getZ(r), n.x = e.getX(c), n.y = e.getY(c), n.z = e.getZ(c), o.x = e.getX(f), o.y = e.getY(f), o.z = e.getZ(f);\n}\nfunction Ai(a, t, s, e, i, n) {\n  const { geometry: o, _indirectBuffer: r } = a;\n  for (let c = e, f = e + i; c < f; c++)\n    Ss(o, t, s, c, n);\n}\nfunction vi(a, t, s, e, i) {\n  const { geometry: n, _indirectBuffer: o } = a;\n  let r = 1 / 0, c = null;\n  for (let f = e, l = e + i; f < l; f++) {\n    let b;\n    b = Ss(n, t, s, f), b && b.distance < r && (c = b, r = b.distance);\n  }\n  return c;\n}\nfunction Vi(a, t, s, e, i, n, o) {\n  const { geometry: r } = s, { index: c } = r, f = r.attributes.position;\n  for (let l = a, b = t + a; l < b; l++) {\n    let h;\n    if (h = l, k(o, h * 3, c, f), o.needsUpdate = !0, e(o, h, i, n))\n      return !0;\n  }\n  return !1;\n}\nfunction Fi(a, t = null) {\n  t && Array.isArray(t) && (t = new Set(t));\n  const s = a.geometry, e = s.index ? s.index.array : null, i = s.attributes.position;\n  let n, o, r, c, f = 0;\n  const l = a._roots;\n  for (let h = 0, u = l.length; h < u; h++)\n    n = l[h], o = new Uint32Array(n), r = new Uint16Array(n), c = new Float32Array(n), b(0, f), f += n.byteLength;\n  function b(h, u, _ = !1) {\n    const w = h * 2;\n    if (r[w + 15] === Ms) {\n      const d = o[h + 6], p = r[w + 14];\n      let I = 1 / 0, m = 1 / 0, g = 1 / 0, A = -1 / 0, F = -1 / 0, x = -1 / 0;\n      for (let C = 3 * d, v = 3 * (d + p); C < v; C++) {\n        let M = e[C];\n        const V = i.getX(M), P = i.getY(M), B = i.getZ(M);\n        V < I && (I = V), V > A && (A = V), P < m && (m = P), P > F && (F = P), B < g && (g = B), B > x && (x = B);\n      }\n      return c[h + 0] !== I || c[h + 1] !== m || c[h + 2] !== g || c[h + 3] !== A || c[h + 4] !== F || c[h + 5] !== x ? (c[h + 0] = I, c[h + 1] = m, c[h + 2] = g, c[h + 3] = A, c[h + 4] = F, c[h + 5] = x, !0) : !1;\n    } else {\n      const d = h + 8, p = o[h + 6], I = d + u, m = p + u;\n      let g = _, A = !1, F = !1;\n      t ? g || (A = t.has(I), F = t.has(m), g = !A && !F) : (A = !0, F = !0);\n      const x = g || A, C = g || F;\n      let v = !1;\n      x && (v = b(d, u, g));\n      let M = !1;\n      C && (M = b(p, u, g));\n      const V = v || M;\n      if (V)\n        for (let P = 0; P < 3; P++) {\n          const B = d + P, O = p + P, D = c[B], $ = c[B + 3], X = c[O], Y = c[O + 3];\n          c[h + P] = D < X ? D : X, c[h + P + 3] = $ > Y ? $ : Y;\n        }\n      return V;\n    }\n  }\n}\nconst me = /* @__PURE__ */ new rt();\nfunction Vt(a, t, s, e) {\n  return R(a, t, me), s.intersectBox(me, e);\n}\nfunction Ci(a, t, s, e, i, n) {\n  const { geometry: o, _indirectBuffer: r } = a;\n  for (let c = e, f = e + i; c < f; c++) {\n    let l = r ? r[c] : c;\n    Ss(o, t, s, l, n);\n  }\n}\nfunction Pi(a, t, s, e, i) {\n  const { geometry: n, _indirectBuffer: o } = a;\n  let r = 1 / 0, c = null;\n  for (let f = e, l = e + i; f < l; f++) {\n    let b;\n    b = Ss(n, t, s, o ? o[f] : f), b && b.distance < r && (c = b, r = b.distance);\n  }\n  return c;\n}\nfunction Mi(a, t, s, e, i, n, o) {\n  const { geometry: r } = s, { index: c } = r, f = r.attributes.position;\n  for (let l = a, b = t + a; l < b; l++) {\n    let h;\n    if (h = s.resolveTriangleIndex(l), k(o, h * 3, c, f), o.needsUpdate = !0, e(o, h, i, n))\n      return !0;\n  }\n  return !1;\n}\nconst ye = /* @__PURE__ */ new T();\nfunction Si(a, t, s, e, i) {\n  G.setBuffer(a._roots[t]), Hs(0, a, s, e, i), G.clearBuffer();\n}\nfunction Hs(a, t, s, e, i) {\n  const { float32Array: n, uint16Array: o, uint32Array: r } = G, c = a * 2;\n  if (Z(c, o)) {\n    const l = J(a, r), b = tt(c, o);\n    Ai(t, s, e, l, b, i);\n  } else {\n    const l = st(a);\n    Vt(l, n, e, ye) && Hs(l, t, s, e, i);\n    const b = et(a, r);\n    Vt(b, n, e, ye) && Hs(b, t, s, e, i);\n  }\n}\nconst ge = /* @__PURE__ */ new T(), Bi = [\"x\", \"y\", \"z\"];\nfunction Ti(a, t, s, e) {\n  G.setBuffer(a._roots[t]);\n  const i = Xs(0, a, s, e);\n  return G.clearBuffer(), i;\n}\nfunction Xs(a, t, s, e) {\n  const { float32Array: i, uint16Array: n, uint32Array: o } = G;\n  let r = a * 2;\n  if (Z(r, n)) {\n    const f = J(a, o), l = tt(r, n);\n    return vi(t, s, e, f, l);\n  } else {\n    const f = De(a, o), l = Bi[f], h = e.direction[l] >= 0;\n    let u, _;\n    h ? (u = st(a), _ = et(a, o)) : (u = et(a, o), _ = st(a));\n    const y = Vt(u, i, e, ge) ? Xs(u, t, s, e) : null;\n    if (y) {\n      const I = y.point[l];\n      if (h ? I <= i[_ + f] : (\n        // min bounding data\n        I >= i[_ + f + 3]\n      ))\n        return y;\n    }\n    const p = Vt(_, i, e, ge) ? Xs(_, t, s, e) : null;\n    return y && p ? y.distance <= p.distance ? y : p : y || p || null;\n  }\n}\nconst ps = /* @__PURE__ */ new rt(), Nt = /* @__PURE__ */ new ot(), kt = /* @__PURE__ */ new ot(), Qt = /* @__PURE__ */ new vt(), Ie = /* @__PURE__ */ new H(), ms = /* @__PURE__ */ new H();\nfunction Oi(a, t, s, e) {\n  G.setBuffer(a._roots[t]);\n  const i = Ys(0, a, s, e);\n  return G.clearBuffer(), i;\n}\nfunction Ys(a, t, s, e, i = null) {\n  const { float32Array: n, uint16Array: o, uint32Array: r } = G;\n  let c = a * 2;\n  if (i === null && (s.boundingBox || s.computeBoundingBox(), Ie.set(s.boundingBox.min, s.boundingBox.max, e), i = Ie), Z(c, o)) {\n    const l = t.geometry, b = l.index, h = l.attributes.position, u = s.index, _ = s.attributes.position, w = J(a, r), y = tt(c, o);\n    if (Qt.copy(e).invert(), s.boundsTree)\n      return R(a, n, ms), ms.matrix.copy(Qt), ms.needsUpdate = !0, s.boundsTree.shapecast({\n        intersectsBounds: (p) => ms.intersectsBox(p),\n        intersectsTriangle: (p) => {\n          p.a.applyMatrix4(e), p.b.applyMatrix4(e), p.c.applyMatrix4(e), p.needsUpdate = !0;\n          for (let I = w * 3, m = (y + w) * 3; I < m; I += 3)\n            if (k(kt, I, b, h), kt.needsUpdate = !0, p.intersectsTriangle(kt))\n              return !0;\n          return !1;\n        }\n      });\n    for (let d = w * 3, p = (y + w) * 3; d < p; d += 3) {\n      k(Nt, d, b, h), Nt.a.applyMatrix4(Qt), Nt.b.applyMatrix4(Qt), Nt.c.applyMatrix4(Qt), Nt.needsUpdate = !0;\n      for (let I = 0, m = u.count; I < m; I += 3)\n        if (k(kt, I, u, _), kt.needsUpdate = !0, Nt.intersectsTriangle(kt))\n          return !0;\n    }\n  } else {\n    const l = a + 8, b = r[a + 6];\n    return R(l, n, ps), !!(i.intersectsBox(ps) && Ys(l, t, s, e, i) || (R(b, n, ps), i.intersectsBox(ps) && Ys(b, t, s, e, i)));\n  }\n}\nconst ys = /* @__PURE__ */ new vt(), zs = /* @__PURE__ */ new H(), ts = /* @__PURE__ */ new H(), Li = /* @__PURE__ */ new T(), Di = /* @__PURE__ */ new T(), Ui = /* @__PURE__ */ new T(), zi = /* @__PURE__ */ new T();\nfunction Ei(a, t, s, e = {}, i = {}, n = 0, o = 1 / 0) {\n  t.boundingBox || t.computeBoundingBox(), zs.set(t.boundingBox.min, t.boundingBox.max, s), zs.needsUpdate = !0;\n  const r = a.geometry, c = r.attributes.position, f = r.index, l = t.attributes.position, b = t.index, h = Q.getPrimitive(), u = Q.getPrimitive();\n  let _ = Li, w = Di, y = null, d = null;\n  i && (y = Ui, d = zi);\n  let p = 1 / 0, I = null, m = null;\n  return ys.copy(s).invert(), ts.matrix.copy(ys), a.shapecast(\n    {\n      boundsTraverseOrder: (g) => zs.distanceToBox(g),\n      intersectsBounds: (g, A, F) => F < p && F < o ? (A && (ts.min.copy(g.min), ts.max.copy(g.max), ts.needsUpdate = !0), !0) : !1,\n      intersectsRange: (g, A) => {\n        if (t.boundsTree)\n          return t.boundsTree.shapecast({\n            boundsTraverseOrder: (x) => ts.distanceToBox(x),\n            intersectsBounds: (x, C, v) => v < p && v < o,\n            intersectsRange: (x, C) => {\n              for (let v = x, M = x + C; v < M; v++) {\n                k(u, 3 * v, b, l), u.a.applyMatrix4(s), u.b.applyMatrix4(s), u.c.applyMatrix4(s), u.needsUpdate = !0;\n                for (let V = g, P = g + A; V < P; V++) {\n                  k(h, 3 * V, f, c), h.needsUpdate = !0;\n                  const B = h.distanceToTriangle(u, _, y);\n                  if (B < p && (w.copy(_), d && d.copy(y), p = B, I = V, m = v), B < n)\n                    return !0;\n                }\n              }\n            }\n          });\n        {\n          const F = Yt(t);\n          for (let x = 0, C = F; x < C; x++) {\n            k(u, 3 * x, b, l), u.a.applyMatrix4(s), u.b.applyMatrix4(s), u.c.applyMatrix4(s), u.needsUpdate = !0;\n            for (let v = g, M = g + A; v < M; v++) {\n              k(h, 3 * v, f, c), h.needsUpdate = !0;\n              const V = h.distanceToTriangle(u, _, y);\n              if (V < p && (w.copy(_), d && d.copy(y), p = V, I = v, m = x), V < n)\n                return !0;\n            }\n          }\n        }\n      }\n    }\n  ), Q.releasePrimitive(h), Q.releasePrimitive(u), p === 1 / 0 ? null : (e.point ? e.point.copy(w) : e.point = w.clone(), e.distance = p, e.faceIndex = I, i && (i.point ? i.point.copy(d) : i.point = d.clone(), i.point.applyMatrix4(ys), w.applyMatrix4(ys), i.distance = w.sub(i.point).length(), i.faceIndex = m), e);\n}\nfunction Gi(a, t = null) {\n  t && Array.isArray(t) && (t = new Set(t));\n  const s = a.geometry, e = s.index ? s.index.array : null, i = s.attributes.position;\n  let n, o, r, c, f = 0;\n  const l = a._roots;\n  for (let h = 0, u = l.length; h < u; h++)\n    n = l[h], o = new Uint32Array(n), r = new Uint16Array(n), c = new Float32Array(n), b(0, f), f += n.byteLength;\n  function b(h, u, _ = !1) {\n    const w = h * 2;\n    if (r[w + 15] === Ms) {\n      const d = o[h + 6], p = r[w + 14];\n      let I = 1 / 0, m = 1 / 0, g = 1 / 0, A = -1 / 0, F = -1 / 0, x = -1 / 0;\n      for (let C = d, v = d + p; C < v; C++) {\n        const M = 3 * a.resolveTriangleIndex(C);\n        for (let V = 0; V < 3; V++) {\n          let P = M + V;\n          P = e ? e[P] : P;\n          const B = i.getX(P), O = i.getY(P), D = i.getZ(P);\n          B < I && (I = B), B > A && (A = B), O < m && (m = O), O > F && (F = O), D < g && (g = D), D > x && (x = D);\n        }\n      }\n      return c[h + 0] !== I || c[h + 1] !== m || c[h + 2] !== g || c[h + 3] !== A || c[h + 4] !== F || c[h + 5] !== x ? (c[h + 0] = I, c[h + 1] = m, c[h + 2] = g, c[h + 3] = A, c[h + 4] = F, c[h + 5] = x, !0) : !1;\n    } else {\n      const d = h + 8, p = o[h + 6], I = d + u, m = p + u;\n      let g = _, A = !1, F = !1;\n      t ? g || (A = t.has(I), F = t.has(m), g = !A && !F) : (A = !0, F = !0);\n      const x = g || A, C = g || F;\n      let v = !1;\n      x && (v = b(d, u, g));\n      let M = !1;\n      C && (M = b(p, u, g));\n      const V = v || M;\n      if (V)\n        for (let P = 0; P < 3; P++) {\n          const B = d + P, O = p + P, D = c[B], $ = c[B + 3], X = c[O], Y = c[O + 3];\n          c[h + P] = D < X ? D : X, c[h + P + 3] = $ > Y ? $ : Y;\n        }\n      return V;\n    }\n  }\n}\nconst we = /* @__PURE__ */ new T();\nfunction Ri(a, t, s, e, i) {\n  G.setBuffer(a._roots[t]), Zs(0, a, s, e, i), G.clearBuffer();\n}\nfunction Zs(a, t, s, e, i) {\n  const { float32Array: n, uint16Array: o, uint32Array: r } = G, c = a * 2;\n  if (Z(c, o)) {\n    const l = J(a, r), b = tt(c, o);\n    Ci(t, s, e, l, b, i);\n  } else {\n    const l = st(a);\n    Vt(l, n, e, we) && Zs(l, t, s, e, i);\n    const b = et(a, r);\n    Vt(b, n, e, we) && Zs(b, t, s, e, i);\n  }\n}\nconst xe = /* @__PURE__ */ new T(), Ni = [\"x\", \"y\", \"z\"];\nfunction ki(a, t, s, e) {\n  G.setBuffer(a._roots[t]);\n  const i = Js(0, a, s, e);\n  return G.clearBuffer(), i;\n}\nfunction Js(a, t, s, e) {\n  const { float32Array: i, uint16Array: n, uint32Array: o } = G;\n  let r = a * 2;\n  if (Z(r, n)) {\n    const f = J(a, o), l = tt(r, n);\n    return Pi(t, s, e, f, l);\n  } else {\n    const f = De(a, o), l = Ni[f], h = e.direction[l] >= 0;\n    let u, _;\n    h ? (u = st(a), _ = et(a, o)) : (u = et(a, o), _ = st(a));\n    const y = Vt(u, i, e, xe) ? Js(u, t, s, e) : null;\n    if (y) {\n      const I = y.point[l];\n      if (h ? I <= i[_ + f] : (\n        // min bounding data\n        I >= i[_ + f + 3]\n      ))\n        return y;\n    }\n    const p = Vt(_, i, e, xe) ? Js(_, t, s, e) : null;\n    return y && p ? y.distance <= p.distance ? y : p : y || p || null;\n  }\n}\nconst gs = /* @__PURE__ */ new rt(), qt = /* @__PURE__ */ new ot(), Kt = /* @__PURE__ */ new ot(), ss = /* @__PURE__ */ new vt(), Ae = /* @__PURE__ */ new H(), Is = /* @__PURE__ */ new H();\nfunction qi(a, t, s, e) {\n  G.setBuffer(a._roots[t]);\n  const i = Ws(0, a, s, e);\n  return G.clearBuffer(), i;\n}\nfunction Ws(a, t, s, e, i = null) {\n  const { float32Array: n, uint16Array: o, uint32Array: r } = G;\n  let c = a * 2;\n  if (i === null && (s.boundingBox || s.computeBoundingBox(), Ae.set(s.boundingBox.min, s.boundingBox.max, e), i = Ae), Z(c, o)) {\n    const l = t.geometry, b = l.index, h = l.attributes.position, u = s.index, _ = s.attributes.position, w = J(a, r), y = tt(c, o);\n    if (ss.copy(e).invert(), s.boundsTree)\n      return R(a, n, Is), Is.matrix.copy(ss), Is.needsUpdate = !0, s.boundsTree.shapecast({\n        intersectsBounds: (p) => Is.intersectsBox(p),\n        intersectsTriangle: (p) => {\n          p.a.applyMatrix4(e), p.b.applyMatrix4(e), p.c.applyMatrix4(e), p.needsUpdate = !0;\n          for (let I = w, m = y + w; I < m; I++)\n            if (k(Kt, 3 * t.resolveTriangleIndex(I), b, h), Kt.needsUpdate = !0, p.intersectsTriangle(Kt))\n              return !0;\n          return !1;\n        }\n      });\n    for (let d = w, p = y + w; d < p; d++) {\n      const I = t.resolveTriangleIndex(d);\n      k(qt, 3 * I, b, h), qt.a.applyMatrix4(ss), qt.b.applyMatrix4(ss), qt.c.applyMatrix4(ss), qt.needsUpdate = !0;\n      for (let m = 0, g = u.count; m < g; m += 3)\n        if (k(Kt, m, u, _), Kt.needsUpdate = !0, qt.intersectsTriangle(Kt))\n          return !0;\n    }\n  } else {\n    const l = a + 8, b = r[a + 6];\n    return R(l, n, gs), !!(i.intersectsBox(gs) && Ws(l, t, s, e, i) || (R(b, n, gs), i.intersectsBox(gs) && Ws(b, t, s, e, i)));\n  }\n}\nconst ws = /* @__PURE__ */ new vt(), Es = /* @__PURE__ */ new H(), es = /* @__PURE__ */ new H(), Ki = /* @__PURE__ */ new T(), ji = /* @__PURE__ */ new T(), $i = /* @__PURE__ */ new T(), Hi = /* @__PURE__ */ new T();\nfunction Xi(a, t, s, e = {}, i = {}, n = 0, o = 1 / 0) {\n  t.boundingBox || t.computeBoundingBox(), Es.set(t.boundingBox.min, t.boundingBox.max, s), Es.needsUpdate = !0;\n  const r = a.geometry, c = r.attributes.position, f = r.index, l = t.attributes.position, b = t.index, h = Q.getPrimitive(), u = Q.getPrimitive();\n  let _ = Ki, w = ji, y = null, d = null;\n  i && (y = $i, d = Hi);\n  let p = 1 / 0, I = null, m = null;\n  return ws.copy(s).invert(), es.matrix.copy(ws), a.shapecast(\n    {\n      boundsTraverseOrder: (g) => Es.distanceToBox(g),\n      intersectsBounds: (g, A, F) => F < p && F < o ? (A && (es.min.copy(g.min), es.max.copy(g.max), es.needsUpdate = !0), !0) : !1,\n      intersectsRange: (g, A) => {\n        if (t.boundsTree) {\n          const F = t.boundsTree;\n          return F.shapecast({\n            boundsTraverseOrder: (x) => es.distanceToBox(x),\n            intersectsBounds: (x, C, v) => v < p && v < o,\n            intersectsRange: (x, C) => {\n              for (let v = x, M = x + C; v < M; v++) {\n                const V = F.resolveTriangleIndex(v);\n                k(u, 3 * V, b, l), u.a.applyMatrix4(s), u.b.applyMatrix4(s), u.c.applyMatrix4(s), u.needsUpdate = !0;\n                for (let P = g, B = g + A; P < B; P++) {\n                  const O = a.resolveTriangleIndex(P);\n                  k(h, 3 * O, f, c), h.needsUpdate = !0;\n                  const D = h.distanceToTriangle(u, _, y);\n                  if (D < p && (w.copy(_), d && d.copy(y), p = D, I = P, m = v), D < n)\n                    return !0;\n                }\n              }\n            }\n          });\n        } else {\n          const F = Yt(t);\n          for (let x = 0, C = F; x < C; x++) {\n            k(u, 3 * x, b, l), u.a.applyMatrix4(s), u.b.applyMatrix4(s), u.c.applyMatrix4(s), u.needsUpdate = !0;\n            for (let v = g, M = g + A; v < M; v++) {\n              const V = a.resolveTriangleIndex(v);\n              k(h, 3 * V, f, c), h.needsUpdate = !0;\n              const P = h.distanceToTriangle(u, _, y);\n              if (P < p && (w.copy(_), d && d.copy(y), p = P, I = v, m = x), P < n)\n                return !0;\n            }\n          }\n        }\n      }\n    }\n  ), Q.releasePrimitive(h), Q.releasePrimitive(u), p === 1 / 0 ? null : (e.point ? e.point.copy(w) : e.point = w.clone(), e.distance = p, e.faceIndex = I, i && (i.point ? i.point.copy(d) : i.point = d.clone(), i.point.applyMatrix4(ws), w.applyMatrix4(ws), i.distance = w.sub(i.point).length(), i.faceIndex = m), e);\n}\nfunction Yi() {\n  return typeof SharedArrayBuffer < \"u\";\n}\nconst ns = new G.constructor(), Cs = new G.constructor(), It = new ne(() => new rt()), jt = new rt(), $t = new rt(), Gs = new rt(), Rs = new rt();\nlet Ns = !1;\nfunction Zi(a, t, s, e) {\n  if (Ns)\n    throw new Error(\"MeshBVH: Recursive calls to bvhcast not supported.\");\n  Ns = !0;\n  const i = a._roots, n = t._roots;\n  let o, r = 0, c = 0;\n  const f = new vt().copy(s).invert();\n  for (let l = 0, b = i.length; l < b; l++) {\n    ns.setBuffer(i[l]), c = 0;\n    const h = It.getPrimitive();\n    R(0, ns.float32Array, h), h.applyMatrix4(f);\n    for (let u = 0, _ = n.length; u < _ && (Cs.setBuffer(n[l]), o = it(\n      0,\n      0,\n      s,\n      f,\n      e,\n      r,\n      c,\n      0,\n      0,\n      h\n    ), Cs.clearBuffer(), c += n[u].length, !o); u++)\n      ;\n    if (It.releasePrimitive(h), ns.clearBuffer(), r += i[l].length, o)\n      break;\n  }\n  return Ns = !1, o;\n}\nfunction it(a, t, s, e, i, n = 0, o = 0, r = 0, c = 0, f = null, l = !1) {\n  let b, h;\n  l ? (b = Cs, h = ns) : (b = ns, h = Cs);\n  const u = b.float32Array, _ = b.uint32Array, w = b.uint16Array, y = h.float32Array, d = h.uint32Array, p = h.uint16Array, I = a * 2, m = t * 2, g = Z(I, w), A = Z(m, p);\n  let F = !1;\n  if (A && g)\n    l ? F = i(\n      J(t, d),\n      tt(t * 2, p),\n      J(a, _),\n      tt(a * 2, w),\n      c,\n      o + t,\n      r,\n      n + a\n    ) : F = i(\n      J(a, _),\n      tt(a * 2, w),\n      J(t, d),\n      tt(t * 2, p),\n      r,\n      n + a,\n      c,\n      o + t\n    );\n  else if (A) {\n    const x = It.getPrimitive();\n    R(t, y, x), x.applyMatrix4(s);\n    const C = st(a), v = et(a, _);\n    R(C, u, jt), R(v, u, $t);\n    const M = x.intersectsBox(jt), V = x.intersectsBox($t);\n    F = M && it(\n      t,\n      C,\n      e,\n      s,\n      i,\n      o,\n      n,\n      c,\n      r + 1,\n      x,\n      !l\n    ) || V && it(\n      t,\n      v,\n      e,\n      s,\n      i,\n      o,\n      n,\n      c,\n      r + 1,\n      x,\n      !l\n    ), It.releasePrimitive(x);\n  } else {\n    const x = st(t), C = et(t, d);\n    R(x, y, Gs), R(C, y, Rs);\n    const v = f.intersectsBox(Gs), M = f.intersectsBox(Rs);\n    if (v && M)\n      F = it(\n        a,\n        x,\n        s,\n        e,\n        i,\n        n,\n        o,\n        r,\n        c + 1,\n        f,\n        l\n      ) || it(\n        a,\n        C,\n        s,\n        e,\n        i,\n        n,\n        o,\n        r,\n        c + 1,\n        f,\n        l\n      );\n    else if (v)\n      if (g)\n        F = it(\n          a,\n          x,\n          s,\n          e,\n          i,\n          n,\n          o,\n          r,\n          c + 1,\n          f,\n          l\n        );\n      else {\n        const V = It.getPrimitive();\n        V.copy(Gs).applyMatrix4(s);\n        const P = st(a), B = et(a, _);\n        R(P, u, jt), R(B, u, $t);\n        const O = V.intersectsBox(jt), D = V.intersectsBox($t);\n        F = O && it(\n          x,\n          P,\n          e,\n          s,\n          i,\n          o,\n          n,\n          c,\n          r + 1,\n          V,\n          !l\n        ) || D && it(\n          x,\n          B,\n          e,\n          s,\n          i,\n          o,\n          n,\n          c,\n          r + 1,\n          V,\n          !l\n        ), It.releasePrimitive(V);\n      }\n    else if (M)\n      if (g)\n        F = it(\n          a,\n          C,\n          s,\n          e,\n          i,\n          n,\n          o,\n          r,\n          c + 1,\n          f,\n          l\n        );\n      else {\n        const V = It.getPrimitive();\n        V.copy(Rs).applyMatrix4(s);\n        const P = st(a), B = et(a, _);\n        R(P, u, jt), R(B, u, $t);\n        const O = V.intersectsBox(jt), D = V.intersectsBox($t);\n        F = O && it(\n          C,\n          P,\n          e,\n          s,\n          i,\n          o,\n          n,\n          c,\n          r + 1,\n          V,\n          !l\n        ) || D && it(\n          C,\n          B,\n          e,\n          s,\n          i,\n          o,\n          n,\n          c,\n          r + 1,\n          V,\n          !l\n        ), It.releasePrimitive(V);\n      }\n  }\n  return F;\n}\nconst xs = /* @__PURE__ */ new H(), ve = /* @__PURE__ */ new rt();\nclass oe {\n  static serialize(t, s = {}) {\n    s = {\n      cloneBuffers: !0,\n      ...s\n    };\n    const e = t.geometry, i = t._roots, n = t._indirectBuffer, o = e.getIndex();\n    let r;\n    return s.cloneBuffers ? r = {\n      roots: i.map((c) => c.slice()),\n      index: o.array.slice(),\n      indirectBuffer: n ? n.slice() : null\n    } : r = {\n      roots: i,\n      index: o.array,\n      indirectBuffer: n\n    }, r;\n  }\n  static deserialize(t, s, e = {}) {\n    e = {\n      setIndex: !0,\n      indirect: !!t.indirectBuffer,\n      ...e\n    };\n    const { index: i, roots: n, indirectBuffer: o } = t, r = new oe(s, { ...e, [Os]: !0 });\n    if (r._roots = n, r._indirectBuffer = o || null, e.setIndex) {\n      const c = s.getIndex();\n      if (c === null) {\n        const f = new Me(t.index, 1, !1);\n        s.setIndex(f);\n      } else\n        c.array !== i && (c.array.set(i), c.needsUpdate = !0);\n    }\n    return r;\n  }\n  get indirect() {\n    return !!this._indirectBuffer;\n  }\n  constructor(t, s = {}) {\n    if (t.isBufferGeometry) {\n      if (t.index && t.index.isInterleavedBufferAttribute)\n        throw new Error(\"MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.\");\n    } else\n      throw new Error(\"MeshBVH: Only BufferGeometries are supported.\");\n    if (s = Object.assign({\n      strategy: Te,\n      maxDepth: 40,\n      maxLeafTris: 10,\n      verbose: !0,\n      useSharedArrayBuffer: !1,\n      setBoundingBox: !0,\n      onProgress: null,\n      indirect: !1,\n      // undocumented options\n      // Whether to skip generating the tree. Used for deserialization.\n      [Os]: !1\n    }, s), s.useSharedArrayBuffer && !Yi())\n      throw new Error(\"MeshBVH: SharedArrayBuffer is not available.\");\n    this.geometry = t, this._roots = null, this._indirectBuffer = null, s[Os] || (ui(this, s), !t.boundingBox && s.setBoundingBox && (t.boundingBox = this.getBoundingBox(new rt())));\n    const { _indirectBuffer: e } = this;\n    this.resolveTriangleIndex = s.indirect ? (i) => e[i] : (i) => i;\n  }\n  refit(t = null) {\n    return (this.indirect ? Gi : Fi)(this, t);\n  }\n  traverse(t, s = 0) {\n    const e = this._roots[s], i = new Uint32Array(e), n = new Uint16Array(e);\n    o(0);\n    function o(r, c = 0) {\n      const f = r * 2, l = n[f + 15] === Ms;\n      if (l) {\n        const b = i[r + 6], h = n[f + 14];\n        t(c, l, new Float32Array(e, r * 4, 6), b, h);\n      } else {\n        const b = r + vs / 4, h = i[r + 6], u = i[r + 7];\n        t(c, l, new Float32Array(e, r * 4, 6), u) || (o(b, c + 1), o(h, c + 1));\n      }\n    }\n  }\n  /* Core Cast Functions */\n  raycast(t, s = re) {\n    const e = this._roots, i = this.geometry, n = [], o = s.isMaterial, r = Array.isArray(s), c = i.groups, f = o ? s.side : s, l = this.indirect ? Ri : Si;\n    for (let b = 0, h = e.length; b < h; b++) {\n      const u = r ? s[c[b].materialIndex].side : f, _ = n.length;\n      if (l(this, b, u, t, n), r) {\n        const w = c[b].materialIndex;\n        for (let y = _, d = n.length; y < d; y++)\n          n[y].face.materialIndex = w;\n      }\n    }\n    return n;\n  }\n  raycastFirst(t, s = re) {\n    const e = this._roots, i = this.geometry, n = s.isMaterial, o = Array.isArray(s);\n    let r = null;\n    const c = i.groups, f = n ? s.side : s, l = this.indirect ? ki : Ti;\n    for (let b = 0, h = e.length; b < h; b++) {\n      const u = o ? s[c[b].materialIndex].side : f, _ = l(this, b, u, t);\n      _ != null && (r == null || _.distance < r.distance) && (r = _, o && (_.face.materialIndex = c[b].materialIndex));\n    }\n    return r;\n  }\n  intersectsGeometry(t, s) {\n    let e = !1;\n    const i = this._roots, n = this.indirect ? qi : Oi;\n    for (let o = 0, r = i.length; o < r && (e = n(this, o, t, s), !e); o++)\n      ;\n    return e;\n  }\n  shapecast(t) {\n    const s = Q.getPrimitive(), e = this.indirect ? Mi : Vi;\n    let {\n      boundsTraverseOrder: i,\n      intersectsBounds: n,\n      intersectsRange: o,\n      intersectsTriangle: r\n    } = t;\n    if (o && r) {\n      const b = o;\n      o = (h, u, _, w, y) => b(h, u, _, w, y) ? !0 : e(h, u, this, r, _, w, s);\n    } else\n      o || (r ? o = (b, h, u, _) => e(b, h, this, r, u, _, s) : o = (b, h, u) => u);\n    let c = !1, f = 0;\n    const l = this._roots;\n    for (let b = 0, h = l.length; b < h; b++) {\n      const u = l[b];\n      if (c = gi(this, b, n, o, i, f), c)\n        break;\n      f += u.byteLength;\n    }\n    return Q.releasePrimitive(s), c;\n  }\n  bvhcast(t, s, e) {\n    let {\n      intersectsRanges: i,\n      intersectsTriangles: n\n    } = e;\n    const o = Q.getPrimitive(), r = this.geometry.index, c = this.geometry.attributes.position, f = this.indirect ? (_) => {\n      const w = this.resolveTriangleIndex(_);\n      k(o, w * 3, r, c);\n    } : (_) => {\n      k(o, _ * 3, r, c);\n    }, l = Q.getPrimitive(), b = t.geometry.index, h = t.geometry.attributes.position, u = t.indirect ? (_) => {\n      const w = t.resolveTriangleIndex(_);\n      k(l, w * 3, b, h);\n    } : (_) => {\n      k(l, _ * 3, b, h);\n    };\n    if (n) {\n      const _ = (w, y, d, p, I, m, g, A) => {\n        for (let F = d, x = d + p; F < x; F++) {\n          u(F), l.a.applyMatrix4(s), l.b.applyMatrix4(s), l.c.applyMatrix4(s), l.needsUpdate = !0;\n          for (let C = w, v = w + y; C < v; C++)\n            if (f(C), o.needsUpdate = !0, n(o, l, C, F, I, m, g, A))\n              return !0;\n        }\n        return !1;\n      };\n      if (i) {\n        const w = i;\n        i = function(y, d, p, I, m, g, A, F) {\n          return w(y, d, p, I, m, g, A, F) ? !0 : _(y, d, p, I, m, g, A, F);\n        };\n      } else\n        i = _;\n    }\n    return Zi(this, t, s, i);\n  }\n  /* Derived Cast Functions */\n  intersectsBox(t, s) {\n    return xs.set(t.min, t.max, s), xs.needsUpdate = !0, this.shapecast(\n      {\n        intersectsBounds: (e) => xs.intersectsBox(e),\n        intersectsTriangle: (e) => xs.intersectsTriangle(e)\n      }\n    );\n  }\n  intersectsSphere(t) {\n    return this.shapecast(\n      {\n        intersectsBounds: (s) => t.intersectsBox(s),\n        intersectsTriangle: (s) => s.intersectsSphere(t)\n      }\n    );\n  }\n  closestPointToGeometry(t, s, e = {}, i = {}, n = 0, o = 1 / 0) {\n    return (this.indirect ? Xi : Ei)(\n      this,\n      t,\n      s,\n      e,\n      i,\n      n,\n      o\n    );\n  }\n  closestPointToPoint(t, s = {}, e = 0, i = 1 / 0) {\n    return Ii(\n      this,\n      t,\n      s,\n      e,\n      i\n    );\n  }\n  getBoundingBox(t) {\n    return t.makeEmpty(), this._roots.forEach((e) => {\n      R(0, new Float32Array(e), ve), t.union(ve);\n    }), t;\n  }\n}\nfunction Ve(a, t, s) {\n  return a === null || (a.point.applyMatrix4(t.matrixWorld), a.distance = a.point.distanceTo(s.ray.origin), a.object = t, a.distance < s.near || a.distance > s.far) ? null : a;\n}\nconst ks = /* @__PURE__ */ new Ye(), Fe = /* @__PURE__ */ new vt(), Ji = Be.prototype.raycast;\nfunction Wi(a, t) {\n  if (this.geometry.boundsTree) {\n    if (this.material === void 0)\n      return;\n    Fe.copy(this.matrixWorld).invert(), ks.copy(a.ray).applyMatrix4(Fe);\n    const s = this.geometry.boundsTree;\n    if (a.firstHitOnly === !0) {\n      const e = Ve(s.raycastFirst(ks, this.material), this, a);\n      e && t.push(e);\n    } else {\n      const e = s.raycast(ks, this.material);\n      for (let i = 0, n = e.length; i < n; i++) {\n        const o = Ve(e[i], this, a);\n        o && t.push(o);\n      }\n    }\n  } else\n    Ji.call(this, a, t);\n}\nfunction Qi(a) {\n  return this.boundsTree = new oe(this, a), this.boundsTree;\n}\nfunction tn() {\n  this.boundsTree = null;\n}\nconst os = class os {\n  /**\n   * Applies the Bounding Volume Hierarchy (BVH) to a given BufferGeometry.\n   * If the BVH is not already initialized, it adds the necessary methods to the BufferGeometry and Mesh prototypes.\n   * If the geometry does not have a boundsTree, it computes one.\n   *\n   * @param geometry - The BufferGeometry to apply the BVH to.\n   */\n  static apply(t) {\n    os.initialized || (ce.prototype.computeBoundsTree = Qi, ce.prototype.disposeBoundsTree = tn, Be.prototype.raycast = Wi, os.initialized = !0), t.boundsTree || t.computeBoundsTree();\n  }\n  /**\n   * Disposes of the BVH associated with the given BufferGeometry.\n   * If the geometry has a boundsTree, it disposes of it.\n   *\n   * @param geometry - The BufferGeometry to dispose of the BVH from.\n   */\n  static dispose(t) {\n    t && t.disposeBoundsTree && t.disposeBoundsTree();\n  }\n};\n/**\n * A flag indicating whether the BVH has been initialized.\n * Initialized means the necessary methods have been added to BufferGeometry and Mesh prototypes.\n */\nS(os, \"initialized\", !1);\nlet Ps = os, Ue = class {\n  /**\n   * Constructs a new Fragment.\n   * @param geometry - The geometry of the fragment.\n   * @param material - The material(s) of the fragment.\n   * @param count - The initial number of instances in the fragment.\n   */\n  constructor(t, s, e) {\n    /**\n     * A set of unique item IDs associated with this fragment.\n     */\n    S(this, \"ids\", /* @__PURE__ */ new Set());\n    /**\n     * A map of item IDs to sets of instance IDs.\n     */\n    S(this, \"itemToInstances\", /* @__PURE__ */ new Map());\n    /**\n     * A map of instance IDs to item IDs.\n     */\n    S(this, \"instanceToItem\", /* @__PURE__ */ new Map());\n    /**\n     * A set of item IDs of instances that are currently hidden.\n     */\n    S(this, \"hiddenItems\", /* @__PURE__ */ new Set());\n    /**\n     * The unique identifier of this fragment.\n     */\n    S(this, \"id\");\n    /**\n     * The mesh associated with this fragment.\n     */\n    S(this, \"mesh\");\n    /**\n     * The amount of instances that this fragment can contain.\n     */\n    S(this, \"capacity\", 0);\n    /**\n     * The amount by which to increase the capacity when necessary.\n     */\n    S(this, \"capacityOffset\", 10);\n    /**\n     * The group of fragments to which this fragment belongs.\n     */\n    S(this, \"group\");\n    S(this, \"_originalColors\", /* @__PURE__ */ new Map());\n    S(this, \"_settingVisibility\", !1);\n    this.mesh = new ae(t, s, e, this), this.id = this.mesh.uuid, this.capacity = e, this.mesh.count = 0, this.mesh.geometry.index.count && Ps.apply(this.mesh.geometry);\n  }\n  /**\n   * A getter property that returns the unique vertices of the fragment's geometry.\n   * The unique vertices are determined by comparing the vertex positions.\n   *\n   * @returns An array of unique vertices.\n   */\n  get uniqueVertices() {\n    const t = [], s = this.mesh.geometry.getAttribute(\n      \"position\"\n    );\n    if (!s)\n      return t;\n    const e = /* @__PURE__ */ new Set();\n    for (let i = 0; i < s.count; i++) {\n      const n = s.getX(i), o = s.getY(i), r = s.getZ(i), c = `${n},${o},${r}`;\n      e.has(c) || (e.add(c), t.push(new L.Vector3(n, o, r)));\n    }\n    return t;\n  }\n  /**\n   * Disposes of the fragment and its associated resources.\n   *\n   * @param disposeResources - If true, disposes geometries and materials associated with the fragment. If false, only disposes of the fragment itself.\n   */\n  dispose(t = !0) {\n    if (this.clear(), this.group = void 0, this._originalColors.clear(), this.mesh) {\n      if (t) {\n        for (const s of this.mesh.material)\n          s.dispose();\n        this.mesh.material = [], Ps.dispose(this.mesh.geometry), this.mesh.geometry && this.mesh.geometry.dispose(), this.mesh.geometry = null;\n      }\n      this.mesh.removeFromParent(), this.mesh.userData = {}, this.mesh.dispose(), this.mesh.fragment = null, this.mesh = null;\n    }\n  }\n  /**\n   * Retrieves the transform matrices and colors of instances associated with a given item ID.\n   *\n   * @param itemID - The unique identifier of the item.\n   * @throws Will throw an error if the item is not found.\n   * @returns An object containing the item ID, an array of transform matrices, and an optional array of colors.\n   * If no colors are found, the colors array will be undefined.\n   */\n  get(t) {\n    const s = this.getInstancesIDs(t);\n    if (!s)\n      throw new Error(\"Item not found!\");\n    const e = [], i = [];\n    for (const o of s) {\n      const r = new L.Matrix4();\n      if (this.mesh.getMatrixAt(o, r), e.push(r), this.mesh.instanceColor) {\n        const c = new L.Color();\n        this.mesh.getColorAt(o, c), i.push(c);\n      }\n    }\n    const n = i.length ? i : void 0;\n    return { id: t, transforms: e, colors: n };\n  }\n  /**\n   * Retrieves the item ID associated with a given instance ID.\n   *\n   * @param instanceID - The unique identifier of the instance.\n   * @returns The item ID associated with the instance, or null if no association exists.\n   */\n  getItemID(t) {\n    return this.instanceToItem.get(t) || null;\n  }\n  /**\n   * Retrieves the instance IDs associated with a given item ID.\n   *\n   * @param itemID - The unique identifier of the item.\n   * @returns The set of instance IDs associated with the item, or null if no association exists.\n   */\n  getInstancesIDs(t) {\n    return this.itemToInstances.get(t) || null;\n  }\n  /**\n   * Updates the instance color and matrix attributes of the fragment's mesh.\n   * This method should be called whenever the instance color or matrix attributes\n   * need to be updated.\n   */\n  update() {\n    this.mesh.instanceColor && (this.mesh.instanceColor.needsUpdate = !0), this.mesh.instanceMatrix.needsUpdate = !0;\n  }\n  /**\n   * Adds items to the fragment.\n   *\n   * @param items - An array of items to be added. Each item contains an ID, an array of transform matrices, and an optional array of colors.\n   *\n   * If the necessary capacity to accommodate the new items exceeds the current capacity,\n   * a new mesh with a larger capacity is created, and the old mesh is disposed.\n   *\n   * The transform matrices and colors of the items are added to the respective attributes of the mesh.\n   *\n   * The instance IDs, item IDs, and associations between instance IDs and item IDs are updated accordingly.\n   *\n   * The instance color and matrix attributes of the mesh are updated.\n   */\n  add(t) {\n    var i;\n    let s = 0;\n    for (const n of t)\n      s += n.transforms.length;\n    const e = this.mesh.count + s;\n    if (e > this.capacity) {\n      const n = e + this.capacityOffset, o = new ae(\n        this.mesh.geometry,\n        this.mesh.material,\n        n,\n        this\n      );\n      o.count = this.mesh.count, this.capacity = n;\n      const r = this.mesh;\n      (i = r.parent) == null || i.add(o), r.removeFromParent(), this.mesh = o;\n      const c = new L.Matrix4();\n      for (let f = 0; f < r.instanceMatrix.count; f++)\n        r.getMatrixAt(f, c), o.setMatrixAt(f, c);\n      if (r.instanceColor) {\n        const f = new L.Color();\n        for (let l = 0; l < r.instanceColor.count; l++)\n          r.getColorAt(l, f), o.setColorAt(l, f);\n      }\n      r.dispose();\n    }\n    for (let n = 0; n < t.length; n++) {\n      const { transforms: o, colors: r, id: c } = t[n];\n      this.itemToInstances.has(c) || this.itemToInstances.set(c, /* @__PURE__ */ new Set());\n      const f = this.itemToInstances.get(c);\n      this.ids.add(c);\n      for (let l = 0; l < o.length; l++) {\n        const b = o[l], h = this.mesh.count;\n        if (this.mesh.setMatrixAt(h, b), r) {\n          const u = r[l];\n          this.mesh.setColorAt(h, u);\n        }\n        f.add(h), this.instanceToItem.set(h, c), this.mesh.count++;\n      }\n    }\n    this.update();\n  }\n  /**\n   * Removes items from the fragment.\n   *\n   * @param itemsIDs - An iterable of item IDs to be removed.\n   *\n   * The instance IDs, item IDs, and associations between instance IDs and item IDs are updated accordingly.\n   *\n   * The instance color and matrix attributes of the mesh are updated.\n   *\n   * @throws Will throw an error if the instances are not found.\n   */\n  remove(t) {\n    if (this.mesh.count !== 0) {\n      for (const s of t) {\n        const e = this.itemToInstances.get(s);\n        if (e === void 0)\n          throw new Error(\"Instances not found!\");\n        for (const i of e) {\n          if (this.mesh.count === 0)\n            throw new Error(\"Error with mesh count!\");\n          this.putLast(i), this.instanceToItem.delete(i), this.mesh.count--;\n        }\n        this.itemToInstances.delete(s), this.ids.delete(s);\n      }\n      this.update();\n    }\n  }\n  /**\n   * Clears the fragment by resetting the hidden items, item IDs, instance-to-item associations,\n   * instance-to-item map, and the count of instances in the fragment's mesh.\n   *\n   * @remarks\n   * This method is used to reset the fragment to its initial state.\n   *\n   * @example\n   * ```typescript\n   * fragment.clear();\n   * ```\n   */\n  clear() {\n    this.hiddenItems.clear(), this.ids.clear(), this.instanceToItem.clear(), this.itemToInstances.clear(), this.mesh.count = 0;\n  }\n  /**\n   * Sets the visibility of items in the fragment.\n   *\n   * @param visible - A boolean indicating whether the items should be visible or hidden.\n   * @param itemIDs - An iterable of item IDs to be affected. If not provided, all items in the fragment will be affected.\n   *\n   * @remarks\n   * This method updates the visibility of items in the fragment based on the provided visibility flag.\n   *\n   * @throws Will throw an error if the instances are not found or if the item IDs are not found in the fragment.\n   *\n   * @example\n   * ```typescript\n   * fragment.setVisibility(true, [1, 2, 3]); // Makes items with IDs 1, 2, and 3 visible.\n   * fragment.setVisibility(false); // Makes all items in the fragment hidden.\n   * ```\n   */\n  setVisibility(t, s = this.ids) {\n    if (!this._settingVisibility) {\n      if (this._settingVisibility = !0, t)\n        for (const e of s) {\n          if (!this.ids.has(e))\n            throw new Error(`This item doesn't exist here: ${e}`);\n          if (!this.hiddenItems.has(e))\n            continue;\n          const i = this.itemToInstances.get(e);\n          if (!i)\n            throw new Error(\"Instances not found!\");\n          for (const n of new Set(i))\n            this.mesh.count++, this.putLast(n);\n          this.hiddenItems.delete(e);\n        }\n      else\n        for (const e of s) {\n          if (!this.ids.has(e))\n            throw new Error(`This item doesn't exist here: ${e}`);\n          if (this.hiddenItems.has(e))\n            continue;\n          const i = this.itemToInstances.get(e);\n          if (!i)\n            throw new Error(\"Instances not found!\");\n          for (const n of new Set(i))\n            this.putLast(n), this.mesh.count--;\n          this.hiddenItems.add(e);\n        }\n      this.update(), this._settingVisibility = !1;\n    }\n  }\n  /**\n   * Sets the color of items in the fragment.\n   *\n   * @param color - The color to be set for the items.\n   * @param itemIDs - An iterable of item IDs to be affected. If not provided, all items in the fragment will be affected.\n   * @param override - A boolean indicating whether the original color should be overridden. If true, the original color will be replaced with the new color.\n   *\n   * @throws Will throw an error if the fragment doesn't have color per instance or if the item IDs are not found in the fragment.\n   *\n   * @example\n   * ```typescript\n   * fragment.setColor(new THREE.Color(0xff0000), [1, 2, 3], true); // Sets the color of items with IDs 1, 2, and 3 to red, overriding their original colors.\n   * fragment.setColor(new THREE.Color(0x00ff00)); // Sets the color of all items in the fragment to green.\n   * ```\n   */\n  setColor(t, s = this.ids, e = !1) {\n    if (!this.mesh.instanceColor)\n      throw new Error(\"This fragment doesn't have color per instance!\");\n    for (const i of s) {\n      if (!this.ids.has(i))\n        throw new Error(`This item doesn't exist here: ${i}`);\n      const n = this.itemToInstances.get(i);\n      if (!n)\n        throw new Error(\"Instances not found!\");\n      const o = this._originalColors.has(i);\n      o || this._originalColors.set(i, /* @__PURE__ */ new Map());\n      const r = this._originalColors.get(i);\n      for (const c of new Set(n)) {\n        if (!o) {\n          const f = new L.Color();\n          this.mesh.getColorAt(c, f), r.set(c, f);\n        }\n        this.mesh.setColorAt(c, t), e && r.set(c, t);\n      }\n    }\n    this.mesh.instanceColor.needsUpdate = !0;\n  }\n  /**\n   * Resets the color of items in the fragment to their original colors.\n   *\n   * @param itemIDs - An iterable of item IDs to be affected. If not provided, all items in the fragment will be affected.\n   *\n   * @throws Will throw an error if the fragment doesn't have color per instance or if the item IDs are not found in the fragment.\n   *\n   * @example\n   * ```typescript\n   * fragment.resetColor([1, 2, 3]); // Resets the color of items with IDs 1, 2, and 3 to their original colors.\n   * fragment.resetColor(); // Resets the color of all items in the fragment to their original colors.\n   * ```\n   */\n  resetColor(t = this.ids) {\n    if (!this.mesh.instanceColor)\n      throw new Error(\"This fragment doesn't have color per instance!\");\n    for (const s of t) {\n      if (!this.ids.has(s))\n        throw new Error(`This item doesn't exist here: ${s}`);\n      const e = this.itemToInstances.get(s);\n      if (!e)\n        throw new Error(\"Instances not found!\");\n      const i = this._originalColors.get(s);\n      if (i)\n        for (const n of new Set(e)) {\n          const o = i.get(n);\n          if (!o)\n            throw new Error(\"Original color not found!\");\n          this.mesh.setColorAt(n, o);\n        }\n    }\n    this.mesh.instanceColor.needsUpdate = !0;\n  }\n  /**\n   * Applies a transformation matrix to instances associated with given item IDs.\n   *\n   * @param itemIDs - An iterable of item IDs to be affected.\n   * @param transform - The transformation matrix to be applied.\n   *\n   * @remarks\n   * This method applies the provided transformation matrix to the instances associated with the given item IDs.\n   *\n   * @example\n   * ```typescript\n   * fragment.applyTransform([1, 2, 3], new THREE.Matrix4().makeTranslation(1, 0, 0)); // Applies a translation of (1, 0, 0) to instances with IDs 1, 2, and 3.\n   * ```\n   */\n  applyTransform(t, s) {\n    const e = new L.Matrix4();\n    for (const i of t) {\n      const n = this.getInstancesIDs(i);\n      if (n !== null)\n        for (const o of n)\n          this.mesh.getMatrixAt(o, e), e.premultiply(s), this.mesh.setMatrixAt(o, e);\n    }\n    this.update();\n  }\n  /**\n   * Exports the fragment's geometry and associated data.\n   *\n   * @returns An object containing the exported geometry, an array of IDs associated with the fragment, and the fragment's ID.\n   *\n   * @remarks\n   * This method is used to export the fragment's geometry and associated data for further processing or storage.\n   *\n   * @example\n   * ```typescript\n   * const exportedData = fragment.exportData();\n   * // Use the exportedData object for further processing or storage\n   * ```\n   */\n  exportData() {\n    const t = this.mesh.exportData(), s = Array.from(this.ids), e = this.id;\n    return { ...t, ids: s, id: e };\n  }\n  putLast(t) {\n    if (this.mesh.count === 0)\n      return;\n    const s = this.instanceToItem.get(t), e = this.mesh.count - 1;\n    if (e === t)\n      return;\n    const i = this.instanceToItem.get(e);\n    if (s === void 0 || i === void 0)\n      throw new Error(\"Keys not found\");\n    if (s !== i) {\n      const r = this.itemToInstances.get(s), c = this.itemToInstances.get(i);\n      if (!r || !c)\n        throw new Error(\"Instances not found\");\n      if (!r.has(t) || !c.has(e))\n        throw new Error(\"Malformed fragment structure\");\n      r.delete(t), c.delete(e), r.add(e), c.add(t), this.instanceToItem.set(t, i), this.instanceToItem.set(e, s);\n    }\n    const n = new L.Matrix4(), o = new L.Matrix4();\n    if (this.mesh.getMatrixAt(t, n), this.mesh.getMatrixAt(e, o), this.mesh.setMatrixAt(t, o), this.mesh.setMatrixAt(e, n), this.mesh.instanceColor !== null) {\n      const r = new L.Color(), c = new L.Color();\n      this.mesh.getColorAt(t, r), this.mesh.getColorAt(e, c), this.mesh.setColorAt(t, c), this.mesh.setColorAt(e, r);\n      const f = this._originalColors.get(s);\n      if (f) {\n        const b = f.get(t);\n        b && (f.delete(t), f.set(e, b));\n      }\n      const l = this._originalColors.get(i);\n      if (l) {\n        const b = l.get(e);\n        b && (l.delete(e), l.set(t, b));\n      }\n    }\n  }\n};\nconst qs = 2, at = 4, ut = 4, W = 4, wt = new Int32Array(2), Ce = new Float32Array(wt.buffer), Pe = new Float64Array(wt.buffer), As = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\nvar Qs;\n(function(a) {\n  a[a.UTF8_BYTES = 1] = \"UTF8_BYTES\", a[a.UTF16_STRING = 2] = \"UTF16_STRING\";\n})(Qs || (Qs = {}));\nclass Dt {\n  /**\n   * Create a new ByteBuffer with a given array of bytes (`Uint8Array`)\n   */\n  constructor(t) {\n    this.bytes_ = t, this.position_ = 0, this.text_decoder_ = new TextDecoder();\n  }\n  /**\n   * Create and allocate a new ByteBuffer with a given size.\n   */\n  static allocate(t) {\n    return new Dt(new Uint8Array(t));\n  }\n  clear() {\n    this.position_ = 0;\n  }\n  /**\n   * Get the underlying `Uint8Array`.\n   */\n  bytes() {\n    return this.bytes_;\n  }\n  /**\n   * Get the buffer's position.\n   */\n  position() {\n    return this.position_;\n  }\n  /**\n   * Set the buffer's position.\n   */\n  setPosition(t) {\n    this.position_ = t;\n  }\n  /**\n   * Get the buffer's capacity.\n   */\n  capacity() {\n    return this.bytes_.length;\n  }\n  readInt8(t) {\n    return this.readUint8(t) << 24 >> 24;\n  }\n  readUint8(t) {\n    return this.bytes_[t];\n  }\n  readInt16(t) {\n    return this.readUint16(t) << 16 >> 16;\n  }\n  readUint16(t) {\n    return this.bytes_[t] | this.bytes_[t + 1] << 8;\n  }\n  readInt32(t) {\n    return this.bytes_[t] | this.bytes_[t + 1] << 8 | this.bytes_[t + 2] << 16 | this.bytes_[t + 3] << 24;\n  }\n  readUint32(t) {\n    return this.readInt32(t) >>> 0;\n  }\n  readInt64(t) {\n    return BigInt.asIntN(64, BigInt(this.readUint32(t)) + (BigInt(this.readUint32(t + 4)) << BigInt(32)));\n  }\n  readUint64(t) {\n    return BigInt.asUintN(64, BigInt(this.readUint32(t)) + (BigInt(this.readUint32(t + 4)) << BigInt(32)));\n  }\n  readFloat32(t) {\n    return wt[0] = this.readInt32(t), Ce[0];\n  }\n  readFloat64(t) {\n    return wt[As ? 0 : 1] = this.readInt32(t), wt[As ? 1 : 0] = this.readInt32(t + 4), Pe[0];\n  }\n  writeInt8(t, s) {\n    this.bytes_[t] = s;\n  }\n  writeUint8(t, s) {\n    this.bytes_[t] = s;\n  }\n  writeInt16(t, s) {\n    this.bytes_[t] = s, this.bytes_[t + 1] = s >> 8;\n  }\n  writeUint16(t, s) {\n    this.bytes_[t] = s, this.bytes_[t + 1] = s >> 8;\n  }\n  writeInt32(t, s) {\n    this.bytes_[t] = s, this.bytes_[t + 1] = s >> 8, this.bytes_[t + 2] = s >> 16, this.bytes_[t + 3] = s >> 24;\n  }\n  writeUint32(t, s) {\n    this.bytes_[t] = s, this.bytes_[t + 1] = s >> 8, this.bytes_[t + 2] = s >> 16, this.bytes_[t + 3] = s >> 24;\n  }\n  writeInt64(t, s) {\n    this.writeInt32(t, Number(BigInt.asIntN(32, s))), this.writeInt32(t + 4, Number(BigInt.asIntN(32, s >> BigInt(32))));\n  }\n  writeUint64(t, s) {\n    this.writeUint32(t, Number(BigInt.asUintN(32, s))), this.writeUint32(t + 4, Number(BigInt.asUintN(32, s >> BigInt(32))));\n  }\n  writeFloat32(t, s) {\n    Ce[0] = s, this.writeInt32(t, wt[0]);\n  }\n  writeFloat64(t, s) {\n    Pe[0] = s, this.writeInt32(t, wt[As ? 0 : 1]), this.writeInt32(t + 4, wt[As ? 1 : 0]);\n  }\n  /**\n   * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n   * schema does not include a file_identifier (likely points at padding or the\n   * start of a the root vtable).\n   */\n  getBufferIdentifier() {\n    if (this.bytes_.length < this.position_ + at + ut)\n      throw new Error(\"FlatBuffers: ByteBuffer is too short to contain an identifier.\");\n    let t = \"\";\n    for (let s = 0; s < ut; s++)\n      t += String.fromCharCode(this.readInt8(this.position_ + at + s));\n    return t;\n  }\n  /**\n   * Look up a field in the vtable, return an offset into the object, or 0 if the\n   * field is not present.\n   */\n  __offset(t, s) {\n    const e = t - this.readInt32(t);\n    return s < this.readInt16(e) ? this.readInt16(e + s) : 0;\n  }\n  /**\n   * Initialize any Table-derived type to point to the union at the given offset.\n   */\n  __union(t, s) {\n    return t.bb_pos = s + this.readInt32(s), t.bb = this, t;\n  }\n  /**\n   * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n   * This allocates a new string and converts to wide chars upon each access.\n   *\n   * To avoid the conversion to string, pass Encoding.UTF8_BYTES as the\n   * \"optionalEncoding\" argument. This is useful for avoiding conversion when\n   * the data will just be packaged back up in another FlatBuffer later on.\n   *\n   * @param offset\n   * @param opt_encoding Defaults to UTF16_STRING\n   */\n  __string(t, s) {\n    t += this.readInt32(t);\n    const e = this.readInt32(t);\n    t += at;\n    const i = this.bytes_.subarray(t, t + e);\n    return s === Qs.UTF8_BYTES ? i : this.text_decoder_.decode(i);\n  }\n  /**\n   * Handle unions that can contain string as its member, if a Table-derived type then initialize it,\n   * if a string then return a new one\n   *\n   * WARNING: strings are immutable in JS so we can't change the string that the user gave us, this\n   * makes the behaviour of __union_with_string different compared to __union\n   */\n  __union_with_string(t, s) {\n    return typeof t == \"string\" ? this.__string(s) : this.__union(t, s);\n  }\n  /**\n   * Retrieve the relative offset stored at \"offset\"\n   */\n  __indirect(t) {\n    return t + this.readInt32(t);\n  }\n  /**\n   * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n   */\n  __vector(t) {\n    return t + this.readInt32(t) + at;\n  }\n  /**\n   * Get the length of a vector whose offset is stored at \"offset\" in this object.\n   */\n  __vector_len(t) {\n    return this.readInt32(t + this.readInt32(t));\n  }\n  __has_identifier(t) {\n    if (t.length != ut)\n      throw new Error(\"FlatBuffers: file identifier must be length \" + ut);\n    for (let s = 0; s < ut; s++)\n      if (t.charCodeAt(s) != this.readInt8(this.position() + at + s))\n        return !1;\n    return !0;\n  }\n  /**\n   * A helper function for generating list for obj api\n   */\n  createScalarList(t, s) {\n    const e = [];\n    for (let i = 0; i < s; ++i) {\n      const n = t(i);\n      n !== null && e.push(n);\n    }\n    return e;\n  }\n  /**\n   * A helper function for generating list for obj api\n   * @param listAccessor function that accepts an index and return data at that index\n   * @param listLength listLength\n   * @param res result list\n   */\n  createObjList(t, s) {\n    const e = [];\n    for (let i = 0; i < s; ++i) {\n      const n = t(i);\n      n !== null && e.push(n.unpack());\n    }\n    return e;\n  }\n}\nclass rs {\n  /**\n   * Create a FlatBufferBuilder.\n   */\n  constructor(t) {\n    this.minalign = 1, this.vtable = null, this.vtable_in_use = 0, this.isNested = !1, this.object_start = 0, this.vtables = [], this.vector_num_elems = 0, this.force_defaults = !1, this.string_maps = null, this.text_encoder = new TextEncoder();\n    let s;\n    t ? s = t : s = 1024, this.bb = Dt.allocate(s), this.space = s;\n  }\n  clear() {\n    this.bb.clear(), this.space = this.bb.capacity(), this.minalign = 1, this.vtable = null, this.vtable_in_use = 0, this.isNested = !1, this.object_start = 0, this.vtables = [], this.vector_num_elems = 0, this.force_defaults = !1, this.string_maps = null;\n  }\n  /**\n   * In order to save space, fields that are set to their default value\n   * don't get serialized into the buffer. Forcing defaults provides a\n   * way to manually disable this optimization.\n   *\n   * @param forceDefaults true always serializes default values\n   */\n  forceDefaults(t) {\n    this.force_defaults = t;\n  }\n  /**\n   * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n   * called finish(). The actual data starts at the ByteBuffer's current position,\n   * not necessarily at 0.\n   */\n  dataBuffer() {\n    return this.bb;\n  }\n  /**\n   * Get the bytes representing the FlatBuffer. Only call this after you've\n   * called finish().\n   */\n  asUint8Array() {\n    return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n  }\n  /**\n   * Prepare to write an element of `size` after `additional_bytes` have been\n   * written, e.g. if you write a string, you need to align such the int length\n   * field is aligned to 4 bytes, and the string data follows it directly. If all\n   * you need to do is alignment, `additional_bytes` will be 0.\n   *\n   * @param size This is the of the new element to write\n   * @param additional_bytes The padding size\n   */\n  prep(t, s) {\n    t > this.minalign && (this.minalign = t);\n    const e = ~(this.bb.capacity() - this.space + s) + 1 & t - 1;\n    for (; this.space < e + t + s; ) {\n      const i = this.bb.capacity();\n      this.bb = rs.growByteBuffer(this.bb), this.space += this.bb.capacity() - i;\n    }\n    this.pad(e);\n  }\n  pad(t) {\n    for (let s = 0; s < t; s++)\n      this.bb.writeInt8(--this.space, 0);\n  }\n  writeInt8(t) {\n    this.bb.writeInt8(this.space -= 1, t);\n  }\n  writeInt16(t) {\n    this.bb.writeInt16(this.space -= 2, t);\n  }\n  writeInt32(t) {\n    this.bb.writeInt32(this.space -= 4, t);\n  }\n  writeInt64(t) {\n    this.bb.writeInt64(this.space -= 8, t);\n  }\n  writeFloat32(t) {\n    this.bb.writeFloat32(this.space -= 4, t);\n  }\n  writeFloat64(t) {\n    this.bb.writeFloat64(this.space -= 8, t);\n  }\n  /**\n   * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n   * @param value The `int8` to add the buffer.\n   */\n  addInt8(t) {\n    this.prep(1, 0), this.writeInt8(t);\n  }\n  /**\n   * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n   * @param value The `int16` to add the buffer.\n   */\n  addInt16(t) {\n    this.prep(2, 0), this.writeInt16(t);\n  }\n  /**\n   * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n   * @param value The `int32` to add the buffer.\n   */\n  addInt32(t) {\n    this.prep(4, 0), this.writeInt32(t);\n  }\n  /**\n   * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n   * @param value The `int64` to add the buffer.\n   */\n  addInt64(t) {\n    this.prep(8, 0), this.writeInt64(t);\n  }\n  /**\n   * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n   * @param value The `float32` to add the buffer.\n   */\n  addFloat32(t) {\n    this.prep(4, 0), this.writeFloat32(t);\n  }\n  /**\n   * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n   * @param value The `float64` to add the buffer.\n   */\n  addFloat64(t) {\n    this.prep(8, 0), this.writeFloat64(t);\n  }\n  addFieldInt8(t, s, e) {\n    (this.force_defaults || s != e) && (this.addInt8(s), this.slot(t));\n  }\n  addFieldInt16(t, s, e) {\n    (this.force_defaults || s != e) && (this.addInt16(s), this.slot(t));\n  }\n  addFieldInt32(t, s, e) {\n    (this.force_defaults || s != e) && (this.addInt32(s), this.slot(t));\n  }\n  addFieldInt64(t, s, e) {\n    (this.force_defaults || s !== e) && (this.addInt64(s), this.slot(t));\n  }\n  addFieldFloat32(t, s, e) {\n    (this.force_defaults || s != e) && (this.addFloat32(s), this.slot(t));\n  }\n  addFieldFloat64(t, s, e) {\n    (this.force_defaults || s != e) && (this.addFloat64(s), this.slot(t));\n  }\n  addFieldOffset(t, s, e) {\n    (this.force_defaults || s != e) && (this.addOffset(s), this.slot(t));\n  }\n  /**\n   * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n   */\n  addFieldStruct(t, s, e) {\n    s != e && (this.nested(s), this.slot(t));\n  }\n  /**\n   * Structures are always stored inline, they need to be created right\n   * where they're used.  You'll get this assertion failure if you\n   * created it elsewhere.\n   */\n  nested(t) {\n    if (t != this.offset())\n      throw new Error(\"FlatBuffers: struct must be serialized inline.\");\n  }\n  /**\n   * Should not be creating any other object, string or vector\n   * while an object is being constructed\n   */\n  notNested() {\n    if (this.isNested)\n      throw new Error(\"FlatBuffers: object serialization must not be nested.\");\n  }\n  /**\n   * Set the current vtable at `voffset` to the current location in the buffer.\n   */\n  slot(t) {\n    this.vtable !== null && (this.vtable[t] = this.offset());\n  }\n  /**\n   * @returns Offset relative to the end of the buffer.\n   */\n  offset() {\n    return this.bb.capacity() - this.space;\n  }\n  /**\n   * Doubles the size of the backing ByteBuffer and copies the old data towards\n   * the end of the new buffer (since we build the buffer backwards).\n   *\n   * @param bb The current buffer with the existing data\n   * @returns A new byte buffer with the old data copied\n   * to it. The data is located at the end of the buffer.\n   *\n   * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n   * it a uint8Array we need to suppress the type check:\n   * @suppress {checkTypes}\n   */\n  static growByteBuffer(t) {\n    const s = t.capacity();\n    if (s & 3221225472)\n      throw new Error(\"FlatBuffers: cannot grow buffer beyond 2 gigabytes.\");\n    const e = s << 1, i = Dt.allocate(e);\n    return i.setPosition(e - s), i.bytes().set(t.bytes(), e - s), i;\n  }\n  /**\n   * Adds on offset, relative to where it will be written.\n   *\n   * @param offset The offset to add.\n   */\n  addOffset(t) {\n    this.prep(at, 0), this.writeInt32(this.offset() - t + at);\n  }\n  /**\n   * Start encoding a new object in the buffer.  Users will not usually need to\n   * call this directly. The FlatBuffers compiler will generate helper methods\n   * that call this method internally.\n   */\n  startObject(t) {\n    this.notNested(), this.vtable == null && (this.vtable = []), this.vtable_in_use = t;\n    for (let s = 0; s < t; s++)\n      this.vtable[s] = 0;\n    this.isNested = !0, this.object_start = this.offset();\n  }\n  /**\n   * Finish off writing the object that is under construction.\n   *\n   * @returns The offset to the object inside `dataBuffer`\n   */\n  endObject() {\n    if (this.vtable == null || !this.isNested)\n      throw new Error(\"FlatBuffers: endObject called without startObject\");\n    this.addInt32(0);\n    const t = this.offset();\n    let s = this.vtable_in_use - 1;\n    for (; s >= 0 && this.vtable[s] == 0; s--)\n      ;\n    const e = s + 1;\n    for (; s >= 0; s--)\n      this.addInt16(this.vtable[s] != 0 ? t - this.vtable[s] : 0);\n    const i = 2;\n    this.addInt16(t - this.object_start);\n    const n = (e + i) * qs;\n    this.addInt16(n);\n    let o = 0;\n    const r = this.space;\n    t:\n      for (s = 0; s < this.vtables.length; s++) {\n        const c = this.bb.capacity() - this.vtables[s];\n        if (n == this.bb.readInt16(c)) {\n          for (let f = qs; f < n; f += qs)\n            if (this.bb.readInt16(r + f) != this.bb.readInt16(c + f))\n              continue t;\n          o = this.vtables[s];\n          break;\n        }\n      }\n    return o ? (this.space = this.bb.capacity() - t, this.bb.writeInt32(this.space, o - t)) : (this.vtables.push(this.offset()), this.bb.writeInt32(this.bb.capacity() - t, this.offset() - t)), this.isNested = !1, t;\n  }\n  /**\n   * Finalize a buffer, poiting to the given `root_table`.\n   */\n  finish(t, s, e) {\n    const i = e ? W : 0;\n    if (s) {\n      const n = s;\n      if (this.prep(this.minalign, at + ut + i), n.length != ut)\n        throw new Error(\"FlatBuffers: file identifier must be length \" + ut);\n      for (let o = ut - 1; o >= 0; o--)\n        this.writeInt8(n.charCodeAt(o));\n    }\n    this.prep(this.minalign, at + i), this.addOffset(t), i && this.addInt32(this.bb.capacity() - this.space), this.bb.setPosition(this.space);\n  }\n  /**\n   * Finalize a size prefixed buffer, pointing to the given `root_table`.\n   */\n  finishSizePrefixed(t, s) {\n    this.finish(t, s, !0);\n  }\n  /**\n   * This checks a required field has been set in a given table that has\n   * just been constructed.\n   */\n  requiredField(t, s) {\n    const e = this.bb.capacity() - t, i = e - this.bb.readInt32(e);\n    if (!(s < this.bb.readInt16(i) && this.bb.readInt16(i + s) != 0))\n      throw new Error(\"FlatBuffers: field \" + s + \" must be set\");\n  }\n  /**\n   * Start a new array/vector of objects.  Users usually will not call\n   * this directly. The FlatBuffers compiler will create a start/end\n   * method for vector types in generated code.\n   *\n   * @param elem_size The size of each element in the array\n   * @param num_elems The number of elements in the array\n   * @param alignment The alignment of the array\n   */\n  startVector(t, s, e) {\n    this.notNested(), this.vector_num_elems = s, this.prep(at, t * s), this.prep(e, t * s);\n  }\n  /**\n   * Finish off the creation of an array and all its elements. The array must be\n   * created with `startVector`.\n   *\n   * @returns The offset at which the newly created array\n   * starts.\n   */\n  endVector() {\n    return this.writeInt32(this.vector_num_elems), this.offset();\n  }\n  /**\n   * Encode the string `s` in the buffer using UTF-8. If the string passed has\n   * already been seen, we return the offset of the already written string\n   *\n   * @param s The string to encode\n   * @return The offset in the buffer where the encoded string starts\n   */\n  createSharedString(t) {\n    if (!t)\n      return 0;\n    if (this.string_maps || (this.string_maps = /* @__PURE__ */ new Map()), this.string_maps.has(t))\n      return this.string_maps.get(t);\n    const s = this.createString(t);\n    return this.string_maps.set(t, s), s;\n  }\n  /**\n   * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n   * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n   *\n   * @param s The string to encode\n   * @return The offset in the buffer where the encoded string starts\n   */\n  createString(t) {\n    if (t == null)\n      return 0;\n    let s;\n    t instanceof Uint8Array ? s = t : s = this.text_encoder.encode(t), this.addInt8(0), this.startVector(1, s.length, 1), this.bb.setPosition(this.space -= s.length);\n    for (let e = 0, i = this.space, n = this.bb.bytes(); e < s.length; e++)\n      n[i++] = s[e];\n    return this.endVector();\n  }\n  /**\n   * A helper function to pack an object\n   *\n   * @returns offset of obj\n   */\n  createObjectOffset(t) {\n    return t === null ? 0 : typeof t == \"string\" ? this.createString(t) : t.pack(this);\n  }\n  /**\n   * A helper function to pack a list of object\n   *\n   * @returns list of offsets of each non null object\n   */\n  createObjectOffsetList(t) {\n    const s = [];\n    for (let e = 0; e < t.length; ++e) {\n      const i = t[e];\n      if (i !== null)\n        s.push(this.createObjectOffset(i));\n      else\n        throw new Error(\"FlatBuffers: Argument for createObjectOffsetList cannot contain null.\");\n    }\n    return s;\n  }\n  createStructOffsetList(t, s) {\n    return s(this, t.length), this.createObjectOffsetList(t.slice().reverse()), this.endVector();\n  }\n}\nlet Vs = class Tt {\n  constructor() {\n    S(this, \"bb\", null);\n    S(this, \"bb_pos\", 0);\n  }\n  __init(t, s) {\n    return this.bb_pos = t, this.bb = s, this;\n  }\n  static getRootAsCivilCurve(t, s) {\n    return (s || new Tt()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  static getSizePrefixedRootAsCivilCurve(t, s) {\n    return t.setPosition(t.position() + W), (s || new Tt()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  points(t) {\n    const s = this.bb.__offset(this.bb_pos, 4);\n    return s ? this.bb.readFloat32(\n      this.bb.__vector(this.bb_pos + s) + t * 4\n    ) : 0;\n  }\n  pointsLength() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  pointsArray() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? new Float32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  data(t) {\n    const s = this.bb.__offset(this.bb_pos, 6);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  static startCivilCurve(t) {\n    t.startObject(2);\n  }\n  static addPoints(t, s) {\n    t.addFieldOffset(0, s, 0);\n  }\n  static createPointsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startPointsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addData(t, s) {\n    t.addFieldOffset(1, s, 0);\n  }\n  static endCivilCurve(t) {\n    return t.endObject();\n  }\n  static createCivilCurve(t, s, e) {\n    return Tt.startCivilCurve(t), Tt.addPoints(t, s), Tt.addData(t, e), Tt.endCivilCurve(t);\n  }\n}, ze = class lt {\n  constructor() {\n    S(this, \"bb\", null);\n    S(this, \"bb_pos\", 0);\n  }\n  __init(t, s) {\n    return this.bb_pos = t, this.bb = s, this;\n  }\n  static getRootAsAlignment(t, s) {\n    return (s || new lt()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  static getSizePrefixedRootAsAlignment(t, s) {\n    return t.setPosition(t.position() + W), (s || new lt()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  vertical(t, s) {\n    const e = this.bb.__offset(this.bb_pos, 4);\n    return e ? (s || new Vs()).__init(\n      this.bb.__indirect(\n        this.bb.__vector(this.bb_pos + e) + t * 4\n      ),\n      this.bb\n    ) : null;\n  }\n  verticalLength() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  horizontal(t, s) {\n    const e = this.bb.__offset(this.bb_pos, 6);\n    return e ? (s || new Vs()).__init(\n      this.bb.__indirect(\n        this.bb.__vector(this.bb_pos + e) + t * 4\n      ),\n      this.bb\n    ) : null;\n  }\n  horizontalLength() {\n    const t = this.bb.__offset(this.bb_pos, 6);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  absolute(t, s) {\n    const e = this.bb.__offset(this.bb_pos, 8);\n    return e ? (s || new Vs()).__init(\n      this.bb.__indirect(\n        this.bb.__vector(this.bb_pos + e) + t * 4\n      ),\n      this.bb\n    ) : null;\n  }\n  absoluteLength() {\n    const t = this.bb.__offset(this.bb_pos, 8);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  initialPk() {\n    const t = this.bb.__offset(this.bb_pos, 10);\n    return t ? this.bb.readFloat32(this.bb_pos + t) : 0;\n  }\n  static startAlignment(t) {\n    t.startObject(4);\n  }\n  static addVertical(t, s) {\n    t.addFieldOffset(0, s, 0);\n  }\n  static createVerticalVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addOffset(s[e]);\n    return t.endVector();\n  }\n  static startVerticalVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addHorizontal(t, s) {\n    t.addFieldOffset(1, s, 0);\n  }\n  static createHorizontalVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addOffset(s[e]);\n    return t.endVector();\n  }\n  static startHorizontalVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addAbsolute(t, s) {\n    t.addFieldOffset(2, s, 0);\n  }\n  static createAbsoluteVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addOffset(s[e]);\n    return t.endVector();\n  }\n  static startAbsoluteVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addInitialPk(t, s) {\n    t.addFieldFloat32(3, s, 0);\n  }\n  static endAlignment(t) {\n    return t.endObject();\n  }\n  static createAlignment(t, s, e, i, n) {\n    return lt.startAlignment(t), lt.addVertical(t, s), lt.addHorizontal(t, e), lt.addAbsolute(t, i), lt.addInitialPk(t, n), lt.endAlignment(t);\n  }\n}, Ee = class Ot {\n  constructor() {\n    S(this, \"bb\", null);\n    S(this, \"bb_pos\", 0);\n  }\n  __init(t, s) {\n    return this.bb_pos = t, this.bb = s, this;\n  }\n  static getRootAsCivilData(t, s) {\n    return (s || new Ot()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  static getSizePrefixedRootAsCivilData(t, s) {\n    return t.setPosition(t.position() + W), (s || new Ot()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  alignments(t, s) {\n    const e = this.bb.__offset(this.bb_pos, 4);\n    return e ? (s || new ze()).__init(\n      this.bb.__indirect(\n        this.bb.__vector(this.bb_pos + e) + t * 4\n      ),\n      this.bb\n    ) : null;\n  }\n  alignmentsLength() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  coordinationMatrix(t) {\n    const s = this.bb.__offset(this.bb_pos, 6);\n    return s ? this.bb.readFloat32(\n      this.bb.__vector(this.bb_pos + s) + t * 4\n    ) : 0;\n  }\n  coordinationMatrixLength() {\n    const t = this.bb.__offset(this.bb_pos, 6);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  coordinationMatrixArray() {\n    const t = this.bb.__offset(this.bb_pos, 6);\n    return t ? new Float32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  static startCivilData(t) {\n    t.startObject(2);\n  }\n  static addAlignments(t, s) {\n    t.addFieldOffset(0, s, 0);\n  }\n  static createAlignmentsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addOffset(s[e]);\n    return t.endVector();\n  }\n  static startAlignmentsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addCoordinationMatrix(t, s) {\n    t.addFieldOffset(1, s, 0);\n  }\n  static createCoordinationMatrixVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startCoordinationMatrixVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static endCivilData(t) {\n    return t.endObject();\n  }\n  static createCivilData(t, s, e) {\n    return Ot.startCivilData(t), Ot.addAlignments(t, s), Ot.addCoordinationMatrix(t, e), Ot.endCivilData(t);\n  }\n}, te = class K {\n  constructor() {\n    S(this, \"bb\", null);\n    S(this, \"bb_pos\", 0);\n  }\n  __init(t, s) {\n    return this.bb_pos = t, this.bb = s, this;\n  }\n  static getRootAsFragment(t, s) {\n    return (s || new K()).__init(t.readInt32(t.position()) + t.position(), t);\n  }\n  static getSizePrefixedRootAsFragment(t, s) {\n    return t.setPosition(t.position() + W), (s || new K()).__init(t.readInt32(t.position()) + t.position(), t);\n  }\n  position(t) {\n    const s = this.bb.__offset(this.bb_pos, 4);\n    return s ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  positionLength() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  positionArray() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  normal(t) {\n    const s = this.bb.__offset(this.bb_pos, 6);\n    return s ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  normalLength() {\n    const t = this.bb.__offset(this.bb_pos, 6);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  normalArray() {\n    const t = this.bb.__offset(this.bb_pos, 6);\n    return t ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  index(t) {\n    const s = this.bb.__offset(this.bb_pos, 8);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  indexLength() {\n    const t = this.bb.__offset(this.bb_pos, 8);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  indexArray() {\n    const t = this.bb.__offset(this.bb_pos, 8);\n    return t ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  groups(t) {\n    const s = this.bb.__offset(this.bb_pos, 10);\n    return s ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  groupsLength() {\n    const t = this.bb.__offset(this.bb_pos, 10);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  groupsArray() {\n    const t = this.bb.__offset(this.bb_pos, 10);\n    return t ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  materials(t) {\n    const s = this.bb.__offset(this.bb_pos, 12);\n    return s ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  materialsLength() {\n    const t = this.bb.__offset(this.bb_pos, 12);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  materialsArray() {\n    const t = this.bb.__offset(this.bb_pos, 12);\n    return t ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  matrices(t) {\n    const s = this.bb.__offset(this.bb_pos, 14);\n    return s ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  matricesLength() {\n    const t = this.bb.__offset(this.bb_pos, 14);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  matricesArray() {\n    const t = this.bb.__offset(this.bb_pos, 14);\n    return t ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  colors(t) {\n    const s = this.bb.__offset(this.bb_pos, 16);\n    return s ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  colorsLength() {\n    const t = this.bb.__offset(this.bb_pos, 16);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  colorsArray() {\n    const t = this.bb.__offset(this.bb_pos, 16);\n    return t ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  itemsSize(t) {\n    const s = this.bb.__offset(this.bb_pos, 18);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  itemsSizeLength() {\n    const t = this.bb.__offset(this.bb_pos, 18);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  itemsSizeArray() {\n    const t = this.bb.__offset(this.bb_pos, 18);\n    return t ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  ids(t) {\n    const s = this.bb.__offset(this.bb_pos, 20);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  idsLength() {\n    const t = this.bb.__offset(this.bb_pos, 20);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  idsArray() {\n    const t = this.bb.__offset(this.bb_pos, 20);\n    return t ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  id(t) {\n    const s = this.bb.__offset(this.bb_pos, 22);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  capacity() {\n    const t = this.bb.__offset(this.bb_pos, 24);\n    return t ? this.bb.readUint32(this.bb_pos + t) : 0;\n  }\n  capacityOffset() {\n    const t = this.bb.__offset(this.bb_pos, 26);\n    return t ? this.bb.readUint32(this.bb_pos + t) : 0;\n  }\n  static startFragment(t) {\n    t.startObject(12);\n  }\n  static addPosition(t, s) {\n    t.addFieldOffset(0, s, 0);\n  }\n  static createPositionVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startPositionVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addNormal(t, s) {\n    t.addFieldOffset(1, s, 0);\n  }\n  static createNormalVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startNormalVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addIndex(t, s) {\n    t.addFieldOffset(2, s, 0);\n  }\n  static createIndexVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startIndexVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addGroups(t, s) {\n    t.addFieldOffset(3, s, 0);\n  }\n  static createGroupsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startGroupsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addMaterials(t, s) {\n    t.addFieldOffset(4, s, 0);\n  }\n  static createMaterialsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startMaterialsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addMatrices(t, s) {\n    t.addFieldOffset(5, s, 0);\n  }\n  static createMatricesVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startMatricesVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addColors(t, s) {\n    t.addFieldOffset(6, s, 0);\n  }\n  static createColorsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startColorsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addItemsSize(t, s) {\n    t.addFieldOffset(7, s, 0);\n  }\n  static createItemsSizeVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startItemsSizeVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addIds(t, s) {\n    t.addFieldOffset(8, s, 0);\n  }\n  static createIdsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startIdsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addId(t, s) {\n    t.addFieldOffset(9, s, 0);\n  }\n  static addCapacity(t, s) {\n    t.addFieldInt32(10, s, 0);\n  }\n  static addCapacityOffset(t, s) {\n    t.addFieldInt32(11, s, 0);\n  }\n  static endFragment(t) {\n    return t.endObject();\n  }\n  static createFragment(t, s, e, i, n, o, r, c, f, l, b, h, u) {\n    return K.startFragment(t), K.addPosition(t, s), K.addNormal(t, e), K.addIndex(t, i), K.addGroups(t, n), K.addMaterials(t, o), K.addMatrices(t, r), K.addColors(t, c), K.addItemsSize(t, f), K.addIds(t, l), K.addId(t, b), K.addCapacity(t, h), K.addCapacityOffset(t, u), K.endFragment(t);\n  }\n}, Ks = class se {\n  constructor() {\n    S(this, \"bb\", null);\n    S(this, \"bb_pos\", 0);\n  }\n  __init(t, s) {\n    return this.bb_pos = t, this.bb = s, this;\n  }\n  static getRootAsFragmentsGroup(t, s) {\n    return (s || new se()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  static getSizePrefixedRootAsFragmentsGroup(t, s) {\n    return t.setPosition(t.position() + W), (s || new se()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  items(t, s) {\n    const e = this.bb.__offset(this.bb_pos, 4);\n    return e ? (s || new te()).__init(\n      this.bb.__indirect(\n        this.bb.__vector(this.bb_pos + e) + t * 4\n      ),\n      this.bb\n    ) : null;\n  }\n  itemsLength() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  civil(t) {\n    const s = this.bb.__offset(this.bb_pos, 6);\n    return s ? (t || new Ee()).__init(\n      this.bb.__indirect(this.bb_pos + s),\n      this.bb\n    ) : null;\n  }\n  coordinationMatrix(t) {\n    const s = this.bb.__offset(this.bb_pos, 8);\n    return s ? this.bb.readFloat32(\n      this.bb.__vector(this.bb_pos + s) + t * 4\n    ) : 0;\n  }\n  coordinationMatrixLength() {\n    const t = this.bb.__offset(this.bb_pos, 8);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  coordinationMatrixArray() {\n    const t = this.bb.__offset(this.bb_pos, 8);\n    return t ? new Float32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  ids(t) {\n    const s = this.bb.__offset(this.bb_pos, 10);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  idsLength() {\n    const t = this.bb.__offset(this.bb_pos, 10);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  idsArray() {\n    const t = this.bb.__offset(this.bb_pos, 10);\n    return t ? new Uint32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  itemsKeys(t) {\n    const s = this.bb.__offset(this.bb_pos, 12);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  itemsKeysLength() {\n    const t = this.bb.__offset(this.bb_pos, 12);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  itemsKeysArray() {\n    const t = this.bb.__offset(this.bb_pos, 12);\n    return t ? new Uint32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  itemsKeysIndices(t) {\n    const s = this.bb.__offset(this.bb_pos, 14);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  itemsKeysIndicesLength() {\n    const t = this.bb.__offset(this.bb_pos, 14);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  itemsKeysIndicesArray() {\n    const t = this.bb.__offset(this.bb_pos, 14);\n    return t ? new Uint32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  itemsRels(t) {\n    const s = this.bb.__offset(this.bb_pos, 16);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  itemsRelsLength() {\n    const t = this.bb.__offset(this.bb_pos, 16);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  itemsRelsArray() {\n    const t = this.bb.__offset(this.bb_pos, 16);\n    return t ? new Uint32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  itemsRelsIndices(t) {\n    const s = this.bb.__offset(this.bb_pos, 18);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  itemsRelsIndicesLength() {\n    const t = this.bb.__offset(this.bb_pos, 18);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  itemsRelsIndicesArray() {\n    const t = this.bb.__offset(this.bb_pos, 18);\n    return t ? new Uint32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  fragmentKeys(t) {\n    const s = this.bb.__offset(this.bb_pos, 20);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  id(t) {\n    const s = this.bb.__offset(this.bb_pos, 22);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  name(t) {\n    const s = this.bb.__offset(this.bb_pos, 24);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  ifcName(t) {\n    const s = this.bb.__offset(this.bb_pos, 26);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  ifcDescription(t) {\n    const s = this.bb.__offset(this.bb_pos, 28);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  ifcSchema(t) {\n    const s = this.bb.__offset(this.bb_pos, 30);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  maxExpressId() {\n    const t = this.bb.__offset(this.bb_pos, 32);\n    return t ? this.bb.readUint32(this.bb_pos + t) : 0;\n  }\n  boundingBox(t) {\n    const s = this.bb.__offset(this.bb_pos, 34);\n    return s ? this.bb.readFloat32(\n      this.bb.__vector(this.bb_pos + s) + t * 4\n    ) : 0;\n  }\n  boundingBoxLength() {\n    const t = this.bb.__offset(this.bb_pos, 34);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  boundingBoxArray() {\n    const t = this.bb.__offset(this.bb_pos, 34);\n    return t ? new Float32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  opaqueGeometriesIds(t) {\n    const s = this.bb.__offset(this.bb_pos, 36);\n    return s ? this.bb.readInt32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  opaqueGeometriesIdsLength() {\n    const t = this.bb.__offset(this.bb_pos, 36);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  opaqueGeometriesIdsArray() {\n    const t = this.bb.__offset(this.bb_pos, 36);\n    return t ? new Int32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  transparentGeometriesIds(t) {\n    const s = this.bb.__offset(this.bb_pos, 38);\n    return s ? this.bb.readInt32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  transparentGeometriesIdsLength() {\n    const t = this.bb.__offset(this.bb_pos, 38);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  transparentGeometriesIdsArray() {\n    const t = this.bb.__offset(this.bb_pos, 38);\n    return t ? new Int32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  static startFragmentsGroup(t) {\n    t.startObject(18);\n  }\n  static addItems(t, s) {\n    t.addFieldOffset(0, s, 0);\n  }\n  static createItemsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addOffset(s[e]);\n    return t.endVector();\n  }\n  static startItemsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addCivil(t, s) {\n    t.addFieldOffset(1, s, 0);\n  }\n  static addCoordinationMatrix(t, s) {\n    t.addFieldOffset(2, s, 0);\n  }\n  static createCoordinationMatrixVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startCoordinationMatrixVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addIds(t, s) {\n    t.addFieldOffset(3, s, 0);\n  }\n  static createIdsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startIdsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addItemsKeys(t, s) {\n    t.addFieldOffset(4, s, 0);\n  }\n  static createItemsKeysVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startItemsKeysVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addItemsKeysIndices(t, s) {\n    t.addFieldOffset(5, s, 0);\n  }\n  static createItemsKeysIndicesVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startItemsKeysIndicesVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addItemsRels(t, s) {\n    t.addFieldOffset(6, s, 0);\n  }\n  static createItemsRelsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startItemsRelsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addItemsRelsIndices(t, s) {\n    t.addFieldOffset(7, s, 0);\n  }\n  static createItemsRelsIndicesVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startItemsRelsIndicesVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addFragmentKeys(t, s) {\n    t.addFieldOffset(8, s, 0);\n  }\n  static addId(t, s) {\n    t.addFieldOffset(9, s, 0);\n  }\n  static addName(t, s) {\n    t.addFieldOffset(10, s, 0);\n  }\n  static addIfcName(t, s) {\n    t.addFieldOffset(11, s, 0);\n  }\n  static addIfcDescription(t, s) {\n    t.addFieldOffset(12, s, 0);\n  }\n  static addIfcSchema(t, s) {\n    t.addFieldOffset(13, s, 0);\n  }\n  static addMaxExpressId(t, s) {\n    t.addFieldInt32(14, s, 0);\n  }\n  static addBoundingBox(t, s) {\n    t.addFieldOffset(15, s, 0);\n  }\n  static createBoundingBoxVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startBoundingBoxVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addOpaqueGeometriesIds(t, s) {\n    t.addFieldOffset(16, s, 0);\n  }\n  static createOpaqueGeometriesIdsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startOpaqueGeometriesIdsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addTransparentGeometriesIds(t, s) {\n    t.addFieldOffset(17, s, 0);\n  }\n  static createTransparentGeometriesIdsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startTransparentGeometriesIdsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static endFragmentsGroup(t) {\n    return t.endObject();\n  }\n  static finishFragmentsGroupBuffer(t, s) {\n    t.finish(s);\n  }\n  static finishSizePrefixedFragmentsGroupBuffer(t, s) {\n    t.finish(s, void 0, !0);\n  }\n};\nclass sn {\n  constructor() {\n    S(this, \"version\", 1);\n    S(this, \"fragmentIDSeparator\", \"|\");\n  }\n  /** {@link FragmentParser.import} */\n  import(t) {\n    const s = new Dt(t), e = Ks.getRootAsFragmentsGroup(s), i = this.constructFragmentGroup(e), n = e.itemsLength();\n    for (let o = 0; o < n; o++) {\n      const r = e.items(o);\n      if (!r)\n        continue;\n      const c = this.constructGeometry(r), f = this.constructMaterials(r), l = r.capacity(), b = new Ue(c, f, l);\n      b.capacityOffset = r.capacityOffset(), this.setInstances(r, b), this.setID(r, b), i.items.push(b), i.add(b.mesh);\n    }\n    return i;\n  }\n  /**\n   * Exports the FragmentsGroup to a flatbuffer binary file.\n   *\n   * @param group - The FragmentsGroup to be exported.\n   * @returns The flatbuffer binary file as a Uint8Array.\n   */\n  export(t) {\n    const s = new rs(1024), e = [], i = Ks, n = te;\n    let o = null;\n    if (t.civilData) {\n      const q = [], E = ze, z = Ee;\n      for (const [ct, pt] of t.civilData.alignments) {\n        const { absolute: Ut, horizontal: mt, vertical: Ft } = pt, Ct = this.saveCivilCurves(mt, s), Pt = this.saveCivilCurves(Ft, s), Mt = this.saveCivilCurves(Ut, s), St = E.createHorizontalVector(s, Ct), Bt = E.createVerticalVector(s, Pt), yt = E.createAbsoluteVector(s, Mt);\n        E.startAlignment(s), E.addHorizontal(s, St), E.addVertical(s, Bt), E.addAbsolute(s, yt), E.addInitialPk(s, pt.initialKP);\n        const Zt = E.endAlignment(s);\n        q.push(Zt);\n      }\n      const U = z.createAlignmentsVector(s, q), j = z.createCoordinationMatrixVector(\n        s,\n        t.coordinationMatrix.elements\n      );\n      z.startCivilData(s), z.addAlignments(s, U), z.addCoordinationMatrix(s, j), o = z.endCivilData(s);\n    }\n    for (const q of t.items) {\n      const E = q.exportData(), z = [];\n      for (const Bt of q.ids) {\n        const yt = q.getInstancesIDs(Bt);\n        if (!yt)\n          throw new Error(\"Instances not found!\");\n        z.push(yt.size);\n      }\n      const U = n.createPositionVector(s, E.position), j = n.createNormalVector(s, E.normal), ct = n.createIndexVector(s, E.index), pt = n.createGroupsVector(s, E.groups), Ut = n.createMaterialsVector(s, E.materials), mt = n.createMatricesVector(s, E.matrices), Ft = n.createColorsVector(s, E.colors), Ct = n.createIdsVector(s, E.ids), Pt = n.createItemsSizeVector(s, z), Mt = s.createString(E.id);\n      n.startFragment(s), n.addPosition(s, U), n.addNormal(s, j), n.addIndex(s, ct), n.addGroups(s, pt), n.addMaterials(s, Ut), n.addMatrices(s, mt), n.addColors(s, Ft), n.addIds(s, Ct), n.addItemsSize(s, Pt), n.addId(s, Mt), n.addCapacity(s, q.capacity), n.addCapacityOffset(s, q.capacityOffset);\n      const St = te.endFragment(s);\n      e.push(St);\n    }\n    const r = i.createItemsVector(s, e), c = i.createCoordinationMatrixVector(\n      s,\n      t.coordinationMatrix.elements\n    );\n    let f = \"\";\n    for (const q of t.keyFragments.values())\n      f.length && (f += this.fragmentIDSeparator), f += q;\n    const l = s.createString(f), b = [], h = [], u = [], _ = [], w = [];\n    let y = 0, d = 0;\n    for (const [q, [E, z]] of t.data) {\n      b.push(y), u.push(d), w.push(q);\n      for (const U of E)\n        h.push(U);\n      for (const U of z)\n        _.push(U);\n      y += E.length, d += z.length;\n    }\n    const p = [], I = [];\n    for (const [q, E] of t.geometryIDs.opaque)\n      p.push(q, E);\n    for (const [q, E] of t.geometryIDs.transparent)\n      I.push(q, E);\n    const m = s.createString(t.uuid), g = s.createString(t.name), A = s.createString(t.ifcMetadata.name), F = s.createString(t.ifcMetadata.description), x = s.createString(t.ifcMetadata.schema), C = i.createItemsKeysIndicesVector(s, b), v = i.createItemsKeysVector(s, h), M = i.createItemsRelsIndicesVector(s, u), V = i.createItemsRelsVector(s, _), P = i.createIdsVector(s, w), B = i.createOpaqueGeometriesIdsVector(s, p), O = i.createTransparentGeometriesIdsVector(\n      s,\n      I\n    ), { min: D, max: $ } = t.boundingBox, X = [D.x, D.y, D.z, $.x, $.y, $.z], Y = i.createBoundingBoxVector(s, X);\n    i.startFragmentsGroup(s), i.addId(s, m), i.addName(s, g), i.addIfcName(s, A), i.addIfcDescription(s, F), i.addIfcSchema(s, x), i.addMaxExpressId(s, t.ifcMetadata.maxExpressID), i.addItems(s, r), i.addFragmentKeys(s, l), i.addIds(s, P), i.addItemsKeysIndices(s, C), i.addItemsKeys(s, v), i.addItemsRelsIndices(s, M), i.addItemsRels(s, V), i.addCoordinationMatrix(s, c), i.addBoundingBox(s, Y), i.addOpaqueGeometriesIds(s, B), i.addTransparentGeometriesIds(s, O), o !== null && i.addCivil(s, o);\n    const Bs = Ks.endFragmentsGroup(s);\n    return s.finish(Bs), s.asUint8Array();\n  }\n  setID(t, s) {\n    const e = t.id();\n    e && (s.id = e, s.mesh.uuid = e);\n  }\n  setInstances(t, s) {\n    const e = t.matricesArray(), i = t.colorsArray(), n = t.idsArray(), o = t.itemsSizeArray();\n    if (!e || !n || !o)\n      throw new Error(\"Error: Can't load empty fragment!\");\n    const r = [];\n    let c = 0;\n    for (let f = 0; f < o.length; f++) {\n      const l = n[f], b = o[f], h = [], u = [];\n      for (let w = 0; w < b; w++) {\n        const y = c * 16, d = e.subarray(y, y + 17), p = new L.Matrix4().fromArray(d);\n        if (h.push(p), i) {\n          const I = c * 3, [m, g, A] = i.subarray(I, I + 4), F = new L.Color(m, g, A);\n          u.push(F);\n        }\n        c++;\n      }\n      const _ = u.length ? u : void 0;\n      r.push({ id: l, transforms: h, colors: _ });\n    }\n    s.add(r);\n  }\n  constructMaterials(t) {\n    const s = t.materialsArray(), e = [];\n    if (!s)\n      return e;\n    for (let i = 0; i < s.length; i += 5) {\n      const n = s[i], o = !!s[i + 1], r = s[i + 2], c = s[i + 3], f = s[i + 4], l = new L.Color(r, c, f), b = new L.MeshLambertMaterial({\n        color: l,\n        opacity: n,\n        transparent: o\n      });\n      e.push(b);\n    }\n    return e;\n  }\n  constructFragmentGroup(t) {\n    const s = new Re(), e = t.civil();\n    if (e) {\n      const x = e.coordinationMatrixArray(), C = new L.Matrix4();\n      x && C.fromArray(x), s.civilData = { alignments: /* @__PURE__ */ new Map(), coordinationMatrix: C };\n      const v = e.alignmentsLength();\n      for (let M = 0; M < v; M++) {\n        const V = new L.LineBasicMaterial({ color: 16777215 }), P = new Ne(), B = e.alignments(M);\n        if (!B)\n          throw new Error(\"Alignment not found!\");\n        const O = B.horizontalLength();\n        P.horizontal = this.constructCivilCurves(\n          B,\n          P,\n          \"horizontal\",\n          O,\n          V\n        );\n        const D = B.verticalLength();\n        P.vertical = this.constructCivilCurves(\n          B,\n          P,\n          \"vertical\",\n          D,\n          V\n        );\n        const $ = B.horizontalLength();\n        P.absolute = this.constructCivilCurves(\n          B,\n          P,\n          \"absolute\",\n          $,\n          V\n        ), P.initialKP = B.initialPk(), s.civilData.alignments.set(M, P);\n      }\n    }\n    s.uuid = t.id() || s.uuid, s.name = t.name() || \"\", s.ifcMetadata = {\n      name: t.ifcName() || \"\",\n      description: t.ifcDescription() || \"\",\n      schema: t.ifcSchema() || \"IFC2X3\",\n      maxExpressID: t.maxExpressId() || 0\n    };\n    const i = new L.Matrix4().elements, n = t.coordinationMatrixArray() || i, o = t.idsArray() || new Uint32Array(), r = t.itemsKeysIndicesArray() || new Uint32Array(), c = t.itemsKeysArray() || new Uint32Array(), f = t.itemsRelsArray() || new Uint32Array(), l = t.itemsRelsIndicesArray() || new Uint32Array(), h = (t.fragmentKeys() || \"\").split(this.fragmentIDSeparator);\n    this.setGroupData(s, o, r, c, 0), this.setGroupData(s, o, l, f, 1);\n    const u = t.opaqueGeometriesIdsArray() || new Uint32Array(), _ = t.transparentGeometriesIdsArray() || new Uint32Array(), w = /* @__PURE__ */ new Map();\n    for (let x = 0; x < u.length - 1; x += 2) {\n      const C = u[x], v = u[x + 1];\n      w.set(C, v);\n    }\n    const y = /* @__PURE__ */ new Map();\n    for (let x = 0; x < _.length - 1; x += 2) {\n      const C = _[x], v = _[x + 1];\n      y.set(C, v);\n    }\n    s.geometryIDs = { opaque: w, transparent: y };\n    const d = t.boundingBoxArray() || [0, 0, 0, 0, 0, 0], [p, I, m, g, A, F] = d;\n    s.boundingBox.min.set(p, I, m), s.boundingBox.max.set(g, A, F);\n    for (let x = 0; x < h.length; x++)\n      s.keyFragments.set(x, h[x]);\n    return n.length === 16 && s.coordinationMatrix.fromArray(n), s;\n  }\n  setGroupData(t, s, e, i, n) {\n    for (let o = 0; o < e.length; o++) {\n      const r = s[o], c = e[o], f = e[o + 1] || i.length, l = [];\n      for (let h = c; h < f; h++)\n        l.push(i[h]);\n      t.data.has(r) || t.data.set(r, [[], []]);\n      const b = t.data.get(r);\n      b && (b[n] = l);\n    }\n  }\n  constructGeometry(t) {\n    const s = t.positionArray() || new Float32Array(), e = t.normalArray() || new Float32Array(), i = t.indexArray(), n = t.groupsArray();\n    if (!i)\n      throw new Error(\"Index not found!\");\n    const o = new L.BufferGeometry();\n    if (o.setIndex(Array.from(i)), o.setAttribute(\"position\", new L.BufferAttribute(s, 3)), o.setAttribute(\"normal\", new L.BufferAttribute(e, 3)), n)\n      for (let r = 0; r < n.length; r += 3) {\n        const c = n[r], f = n[r + 1], l = n[r + 2];\n        o.addGroup(c, f, l);\n      }\n    return o;\n  }\n  constructCivilCurves(t, s, e, i, n) {\n    const o = [];\n    for (let r = 0; r < i; r++) {\n      const c = t[e](r);\n      if (!c)\n        throw new Error(\"Curve not found!\");\n      const f = c.pointsArray();\n      if (f === null)\n        throw new Error(\"Curve points not found!\");\n      let l = {};\n      const b = c.data();\n      b && (l = JSON.parse(b));\n      const h = new L.EdgesGeometry(), u = new L.BufferAttribute(f, 3);\n      h.setAttribute(\"position\", u);\n      const _ = [];\n      for (let y = 0; y < f.length / 3 - 1; y++)\n        _.push(y, y + 1);\n      h.setIndex(_);\n      const w = new ke(r, l, s, h, n);\n      o.push(w.curve);\n    }\n    return o;\n  }\n  saveCivilCurves(t, s) {\n    const e = Vs, i = [];\n    for (const n of t) {\n      const r = n.mesh.geometry.attributes.position.array, c = e.createPointsVector(s, r), f = s.createString(JSON.stringify(n.data));\n      e.startCivilCurve(s), e.addPoints(s, c), e.addData(s, f);\n      const l = e.endCivilCurve(s);\n      i.push(l);\n    }\n    return i;\n  }\n}\nlet Fs = class Lt {\n  constructor() {\n    S(this, \"bb\", null);\n    S(this, \"bb_pos\", 0);\n  }\n  __init(t, s) {\n    return this.bb_pos = t, this.bb = s, this;\n  }\n  static getRootAsCivilCurve(t, s) {\n    return (s || new Lt()).__init(t.readInt32(t.position()) + t.position(), t);\n  }\n  static getSizePrefixedRootAsCivilCurve(t, s) {\n    return t.setPosition(t.position() + W), (s || new Lt()).__init(t.readInt32(t.position()) + t.position(), t);\n  }\n  points(t) {\n    const s = this.bb.__offset(this.bb_pos, 4);\n    return s ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  pointsLength() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  pointsArray() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  data(t) {\n    const s = this.bb.__offset(this.bb_pos, 6);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  static startCivilCurve(t) {\n    t.startObject(2);\n  }\n  static addPoints(t, s) {\n    t.addFieldOffset(0, s, 0);\n  }\n  static createPointsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startPointsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addData(t, s) {\n    t.addFieldOffset(1, s, 0);\n  }\n  static endCivilCurve(t) {\n    return t.endObject();\n  }\n  static createCivilCurve(t, s, e) {\n    return Lt.startCivilCurve(t), Lt.addPoints(t, s), Lt.addData(t, e), Lt.endCivilCurve(t);\n  }\n}, Ge = class ht {\n  constructor() {\n    S(this, \"bb\", null);\n    S(this, \"bb_pos\", 0);\n  }\n  __init(t, s) {\n    return this.bb_pos = t, this.bb = s, this;\n  }\n  static getRootAsAlignment(t, s) {\n    return (s || new ht()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  static getSizePrefixedRootAsAlignment(t, s) {\n    return t.setPosition(t.position() + W), (s || new ht()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  vertical(t, s) {\n    const e = this.bb.__offset(this.bb_pos, 4);\n    return e ? (s || new Fs()).__init(\n      this.bb.__indirect(\n        this.bb.__vector(this.bb_pos + e) + t * 4\n      ),\n      this.bb\n    ) : null;\n  }\n  verticalLength() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  horizontal(t, s) {\n    const e = this.bb.__offset(this.bb_pos, 6);\n    return e ? (s || new Fs()).__init(\n      this.bb.__indirect(\n        this.bb.__vector(this.bb_pos + e) + t * 4\n      ),\n      this.bb\n    ) : null;\n  }\n  horizontalLength() {\n    const t = this.bb.__offset(this.bb_pos, 6);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  absolute(t, s) {\n    const e = this.bb.__offset(this.bb_pos, 8);\n    return e ? (s || new Fs()).__init(\n      this.bb.__indirect(\n        this.bb.__vector(this.bb_pos + e) + t * 4\n      ),\n      this.bb\n    ) : null;\n  }\n  absoluteLength() {\n    const t = this.bb.__offset(this.bb_pos, 8);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  initialPk() {\n    const t = this.bb.__offset(this.bb_pos, 10);\n    return t ? this.bb.readFloat32(this.bb_pos + t) : 0;\n  }\n  static startAlignment(t) {\n    t.startObject(4);\n  }\n  static addVertical(t, s) {\n    t.addFieldOffset(0, s, 0);\n  }\n  static createVerticalVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addOffset(s[e]);\n    return t.endVector();\n  }\n  static startVerticalVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addHorizontal(t, s) {\n    t.addFieldOffset(1, s, 0);\n  }\n  static createHorizontalVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addOffset(s[e]);\n    return t.endVector();\n  }\n  static startHorizontalVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addAbsolute(t, s) {\n    t.addFieldOffset(2, s, 0);\n  }\n  static createAbsoluteVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addOffset(s[e]);\n    return t.endVector();\n  }\n  static startAbsoluteVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addInitialPk(t, s) {\n    t.addFieldFloat32(3, s, 0);\n  }\n  static endAlignment(t) {\n    return t.endObject();\n  }\n  static createAlignment(t, s, e, i, n) {\n    return ht.startAlignment(t), ht.addVertical(t, s), ht.addHorizontal(t, e), ht.addAbsolute(t, i), ht.addInitialPk(t, n), ht.endAlignment(t);\n  }\n};\nclass bt {\n  constructor() {\n    S(this, \"bb\", null);\n    S(this, \"bb_pos\", 0);\n  }\n  __init(t, s) {\n    return this.bb_pos = t, this.bb = s, this;\n  }\n  static getRootAsCivilData(t, s) {\n    return (s || new bt()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  static getSizePrefixedRootAsCivilData(t, s) {\n    return t.setPosition(t.position() + W), (s || new bt()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  alignments(t, s) {\n    const e = this.bb.__offset(this.bb_pos, 4);\n    return e ? (s || new Ge()).__init(\n      this.bb.__indirect(\n        this.bb.__vector(this.bb_pos + e) + t * 4\n      ),\n      this.bb\n    ) : null;\n  }\n  alignmentsLength() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  coordinationMatrix(t) {\n    const s = this.bb.__offset(this.bb_pos, 6);\n    return s ? this.bb.readFloat32(\n      this.bb.__vector(this.bb_pos + s) + t * 4\n    ) : 0;\n  }\n  coordinationMatrixLength() {\n    const t = this.bb.__offset(this.bb_pos, 6);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  coordinationMatrixArray() {\n    const t = this.bb.__offset(this.bb_pos, 6);\n    return t ? new Float32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  static startCivilData(t) {\n    t.startObject(2);\n  }\n  static addAlignments(t, s) {\n    t.addFieldOffset(0, s, 0);\n  }\n  static createAlignmentsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addOffset(s[e]);\n    return t.endVector();\n  }\n  static startAlignmentsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addCoordinationMatrix(t, s) {\n    t.addFieldOffset(1, s, 0);\n  }\n  static createCoordinationMatrixVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startCoordinationMatrixVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static endCivilData(t) {\n    return t.endObject();\n  }\n  static createCivilData(t, s, e) {\n    return bt.startCivilData(t), bt.addAlignments(t, s), bt.addCoordinationMatrix(t, e), bt.endCivilData(t);\n  }\n}\nclass N {\n  constructor() {\n    S(this, \"bb\", null);\n    S(this, \"bb_pos\", 0);\n  }\n  __init(t, s) {\n    return this.bb_pos = t, this.bb = s, this;\n  }\n  static getRootAsFragment(t, s) {\n    return (s || new N()).__init(t.readInt32(t.position()) + t.position(), t);\n  }\n  static getSizePrefixedRootAsFragment(t, s) {\n    return t.setPosition(t.position() + W), (s || new N()).__init(t.readInt32(t.position()) + t.position(), t);\n  }\n  position(t) {\n    const s = this.bb.__offset(this.bb_pos, 4);\n    return s ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  positionLength() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  positionArray() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  normal(t) {\n    const s = this.bb.__offset(this.bb_pos, 6);\n    return s ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  normalLength() {\n    const t = this.bb.__offset(this.bb_pos, 6);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  normalArray() {\n    const t = this.bb.__offset(this.bb_pos, 6);\n    return t ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  index(t) {\n    const s = this.bb.__offset(this.bb_pos, 8);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  indexLength() {\n    const t = this.bb.__offset(this.bb_pos, 8);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  indexArray() {\n    const t = this.bb.__offset(this.bb_pos, 8);\n    return t ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  groups(t) {\n    const s = this.bb.__offset(this.bb_pos, 10);\n    return s ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  groupsLength() {\n    const t = this.bb.__offset(this.bb_pos, 10);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  groupsArray() {\n    const t = this.bb.__offset(this.bb_pos, 10);\n    return t ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  materials(t) {\n    const s = this.bb.__offset(this.bb_pos, 12);\n    return s ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  materialsLength() {\n    const t = this.bb.__offset(this.bb_pos, 12);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  materialsArray() {\n    const t = this.bb.__offset(this.bb_pos, 12);\n    return t ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  matrices(t) {\n    const s = this.bb.__offset(this.bb_pos, 14);\n    return s ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  matricesLength() {\n    const t = this.bb.__offset(this.bb_pos, 14);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  matricesArray() {\n    const t = this.bb.__offset(this.bb_pos, 14);\n    return t ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  colors(t) {\n    const s = this.bb.__offset(this.bb_pos, 16);\n    return s ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  colorsLength() {\n    const t = this.bb.__offset(this.bb_pos, 16);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  colorsArray() {\n    const t = this.bb.__offset(this.bb_pos, 16);\n    return t ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  itemsSize(t) {\n    const s = this.bb.__offset(this.bb_pos, 18);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  itemsSizeLength() {\n    const t = this.bb.__offset(this.bb_pos, 18);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  itemsSizeArray() {\n    const t = this.bb.__offset(this.bb_pos, 18);\n    return t ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  ids(t) {\n    const s = this.bb.__offset(this.bb_pos, 20);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  idsLength() {\n    const t = this.bb.__offset(this.bb_pos, 20);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  idsArray() {\n    const t = this.bb.__offset(this.bb_pos, 20);\n    return t ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t), this.bb.__vector_len(this.bb_pos + t)) : null;\n  }\n  id(t) {\n    const s = this.bb.__offset(this.bb_pos, 22);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  capacity() {\n    const t = this.bb.__offset(this.bb_pos, 24);\n    return t ? this.bb.readUint32(this.bb_pos + t) : 0;\n  }\n  capacityOffset() {\n    const t = this.bb.__offset(this.bb_pos, 26);\n    return t ? this.bb.readUint32(this.bb_pos + t) : 0;\n  }\n  static startFragment(t) {\n    t.startObject(12);\n  }\n  static addPosition(t, s) {\n    t.addFieldOffset(0, s, 0);\n  }\n  static createPositionVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startPositionVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addNormal(t, s) {\n    t.addFieldOffset(1, s, 0);\n  }\n  static createNormalVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startNormalVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addIndex(t, s) {\n    t.addFieldOffset(2, s, 0);\n  }\n  static createIndexVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startIndexVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addGroups(t, s) {\n    t.addFieldOffset(3, s, 0);\n  }\n  static createGroupsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startGroupsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addMaterials(t, s) {\n    t.addFieldOffset(4, s, 0);\n  }\n  static createMaterialsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startMaterialsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addMatrices(t, s) {\n    t.addFieldOffset(5, s, 0);\n  }\n  static createMatricesVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startMatricesVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addColors(t, s) {\n    t.addFieldOffset(6, s, 0);\n  }\n  static createColorsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startColorsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addItemsSize(t, s) {\n    t.addFieldOffset(7, s, 0);\n  }\n  static createItemsSizeVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startItemsSizeVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addIds(t, s) {\n    t.addFieldOffset(8, s, 0);\n  }\n  static createIdsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startIdsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addId(t, s) {\n    t.addFieldOffset(9, s, 0);\n  }\n  static addCapacity(t, s) {\n    t.addFieldInt32(10, s, 0);\n  }\n  static addCapacityOffset(t, s) {\n    t.addFieldInt32(11, s, 0);\n  }\n  static endFragment(t) {\n    return t.endObject();\n  }\n  static createFragment(t, s, e, i, n, o, r, c, f, l, b, h, u) {\n    return N.startFragment(t), N.addPosition(t, s), N.addNormal(t, e), N.addIndex(t, i), N.addGroups(t, n), N.addMaterials(t, o), N.addMatrices(t, r), N.addColors(t, c), N.addItemsSize(t, f), N.addIds(t, l), N.addId(t, b), N.addCapacity(t, h), N.addCapacityOffset(t, u), N.endFragment(t);\n  }\n}\nlet js = class ee {\n  constructor() {\n    S(this, \"bb\", null);\n    S(this, \"bb_pos\", 0);\n  }\n  __init(t, s) {\n    return this.bb_pos = t, this.bb = s, this;\n  }\n  static getRootAsFragmentsGroup(t, s) {\n    return (s || new ee()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  static getSizePrefixedRootAsFragmentsGroup(t, s) {\n    return t.setPosition(t.position() + W), (s || new ee()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  items(t, s) {\n    const e = this.bb.__offset(this.bb_pos, 4);\n    return e ? (s || new N()).__init(\n      this.bb.__indirect(\n        this.bb.__vector(this.bb_pos + e) + t * 4\n      ),\n      this.bb\n    ) : null;\n  }\n  itemsLength() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  civil(t) {\n    const s = this.bb.__offset(this.bb_pos, 6);\n    return s ? (t || new bt()).__init(\n      this.bb.__indirect(this.bb_pos + s),\n      this.bb\n    ) : null;\n  }\n  coordinationMatrix(t) {\n    const s = this.bb.__offset(this.bb_pos, 8);\n    return s ? this.bb.readFloat32(\n      this.bb.__vector(this.bb_pos + s) + t * 4\n    ) : 0;\n  }\n  coordinationMatrixLength() {\n    const t = this.bb.__offset(this.bb_pos, 8);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  coordinationMatrixArray() {\n    const t = this.bb.__offset(this.bb_pos, 8);\n    return t ? new Float32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  ids(t) {\n    const s = this.bb.__offset(this.bb_pos, 10);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  idsLength() {\n    const t = this.bb.__offset(this.bb_pos, 10);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  idsArray() {\n    const t = this.bb.__offset(this.bb_pos, 10);\n    return t ? new Uint32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  itemsKeys(t) {\n    const s = this.bb.__offset(this.bb_pos, 12);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  itemsKeysLength() {\n    const t = this.bb.__offset(this.bb_pos, 12);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  itemsKeysArray() {\n    const t = this.bb.__offset(this.bb_pos, 12);\n    return t ? new Uint32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  itemsKeysIndices(t) {\n    const s = this.bb.__offset(this.bb_pos, 14);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  itemsKeysIndicesLength() {\n    const t = this.bb.__offset(this.bb_pos, 14);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  itemsKeysIndicesArray() {\n    const t = this.bb.__offset(this.bb_pos, 14);\n    return t ? new Uint32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  itemsRels(t) {\n    const s = this.bb.__offset(this.bb_pos, 16);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  itemsRelsLength() {\n    const t = this.bb.__offset(this.bb_pos, 16);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  itemsRelsArray() {\n    const t = this.bb.__offset(this.bb_pos, 16);\n    return t ? new Uint32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  itemsRelsIndices(t) {\n    const s = this.bb.__offset(this.bb_pos, 18);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  itemsRelsIndicesLength() {\n    const t = this.bb.__offset(this.bb_pos, 18);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  itemsRelsIndicesArray() {\n    const t = this.bb.__offset(this.bb_pos, 18);\n    return t ? new Uint32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  fragmentKeys(t) {\n    const s = this.bb.__offset(this.bb_pos, 20);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  globalIds(t) {\n    const s = this.bb.__offset(this.bb_pos, 22);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  id(t) {\n    const s = this.bb.__offset(this.bb_pos, 24);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  name(t) {\n    const s = this.bb.__offset(this.bb_pos, 26);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  ifcName(t) {\n    const s = this.bb.__offset(this.bb_pos, 28);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  ifcDescription(t) {\n    const s = this.bb.__offset(this.bb_pos, 30);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  ifcSchema(t) {\n    const s = this.bb.__offset(this.bb_pos, 32);\n    return s ? this.bb.__string(this.bb_pos + s, t) : null;\n  }\n  maxExpressId() {\n    const t = this.bb.__offset(this.bb_pos, 34);\n    return t ? this.bb.readUint32(this.bb_pos + t) : 0;\n  }\n  boundingBox(t) {\n    const s = this.bb.__offset(this.bb_pos, 36);\n    return s ? this.bb.readFloat32(\n      this.bb.__vector(this.bb_pos + s) + t * 4\n    ) : 0;\n  }\n  boundingBoxLength() {\n    const t = this.bb.__offset(this.bb_pos, 36);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  boundingBoxArray() {\n    const t = this.bb.__offset(this.bb_pos, 36);\n    return t ? new Float32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  opaqueGeometriesIds(t) {\n    const s = this.bb.__offset(this.bb_pos, 38);\n    return s ? this.bb.readInt32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  opaqueGeometriesIdsLength() {\n    const t = this.bb.__offset(this.bb_pos, 38);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  opaqueGeometriesIdsArray() {\n    const t = this.bb.__offset(this.bb_pos, 38);\n    return t ? new Int32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  transparentGeometriesIds(t) {\n    const s = this.bb.__offset(this.bb_pos, 40);\n    return s ? this.bb.readInt32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  transparentGeometriesIdsLength() {\n    const t = this.bb.__offset(this.bb_pos, 40);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  transparentGeometriesIdsArray() {\n    const t = this.bb.__offset(this.bb_pos, 40);\n    return t ? new Int32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  static startFragmentsGroup(t) {\n    t.startObject(19);\n  }\n  static addItems(t, s) {\n    t.addFieldOffset(0, s, 0);\n  }\n  static createItemsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addOffset(s[e]);\n    return t.endVector();\n  }\n  static startItemsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addCivil(t, s) {\n    t.addFieldOffset(1, s, 0);\n  }\n  static addCoordinationMatrix(t, s) {\n    t.addFieldOffset(2, s, 0);\n  }\n  static createCoordinationMatrixVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startCoordinationMatrixVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addIds(t, s) {\n    t.addFieldOffset(3, s, 0);\n  }\n  static createIdsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startIdsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addItemsKeys(t, s) {\n    t.addFieldOffset(4, s, 0);\n  }\n  static createItemsKeysVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startItemsKeysVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addItemsKeysIndices(t, s) {\n    t.addFieldOffset(5, s, 0);\n  }\n  static createItemsKeysIndicesVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startItemsKeysIndicesVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addItemsRels(t, s) {\n    t.addFieldOffset(6, s, 0);\n  }\n  static createItemsRelsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startItemsRelsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addItemsRelsIndices(t, s) {\n    t.addFieldOffset(7, s, 0);\n  }\n  static createItemsRelsIndicesVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startItemsRelsIndicesVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addFragmentKeys(t, s) {\n    t.addFieldOffset(8, s, 0);\n  }\n  static addGlobalIds(t, s) {\n    t.addFieldOffset(9, s, 0);\n  }\n  static addId(t, s) {\n    t.addFieldOffset(10, s, 0);\n  }\n  static addName(t, s) {\n    t.addFieldOffset(11, s, 0);\n  }\n  static addIfcName(t, s) {\n    t.addFieldOffset(12, s, 0);\n  }\n  static addIfcDescription(t, s) {\n    t.addFieldOffset(13, s, 0);\n  }\n  static addIfcSchema(t, s) {\n    t.addFieldOffset(14, s, 0);\n  }\n  static addMaxExpressId(t, s) {\n    t.addFieldInt32(15, s, 0);\n  }\n  static addBoundingBox(t, s) {\n    t.addFieldOffset(16, s, 0);\n  }\n  static createBoundingBoxVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startBoundingBoxVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addOpaqueGeometriesIds(t, s) {\n    t.addFieldOffset(17, s, 0);\n  }\n  static createOpaqueGeometriesIdsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startOpaqueGeometriesIdsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addTransparentGeometriesIds(t, s) {\n    t.addFieldOffset(18, s, 0);\n  }\n  static createTransparentGeometriesIdsVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startTransparentGeometriesIdsVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static endFragmentsGroup(t) {\n    return t.endObject();\n  }\n  static finishFragmentsGroupBuffer(t, s) {\n    t.finish(s);\n  }\n  static finishSizePrefixedFragmentsGroupBuffer(t, s) {\n    t.finish(s, void 0, !0);\n  }\n};\nclass en {\n  constructor() {\n    S(this, \"version\", 2);\n    S(this, \"separator\", \"|\");\n  }\n  /** {@link FragmentParser.import} */\n  import(t) {\n    const s = new Dt(t), e = js.getRootAsFragmentsGroup(s), i = this.constructFragmentGroup(e), n = e.itemsLength();\n    for (let o = 0; o < n; o++) {\n      const r = e.items(o);\n      if (!r)\n        continue;\n      const c = this.constructGeometry(r), f = this.constructMaterials(r), l = r.capacity(), b = new Ue(c, f, l);\n      b.capacityOffset = r.capacityOffset(), this.setInstances(r, b), this.setID(r, b), i.items.push(b), i.add(b.mesh);\n    }\n    return i;\n  }\n  /**\n   * Exports the FragmentsGroup to a flatbuffer binary file.\n   *\n   * @param group - The FragmentsGroup to be exported.\n   * @returns The flatbuffer binary file as a Uint8Array.\n   */\n  export(t) {\n    const s = new rs(1024), e = [], i = js, n = N;\n    let o = null;\n    if (t.civilData) {\n      const z = [], U = Ge, j = bt;\n      for (const [Ut, mt] of t.civilData.alignments) {\n        const { absolute: Ft, horizontal: Ct, vertical: Pt } = mt, Mt = this.saveCivilCurves(Ct, s), St = this.saveCivilCurves(Pt, s), Bt = this.saveCivilCurves(Ft, s), yt = U.createHorizontalVector(s, Mt), Zt = U.createVerticalVector(s, St), cs = U.createAbsoluteVector(s, Bt);\n        U.startAlignment(s), U.addHorizontal(s, yt), U.addVertical(s, Zt), U.addAbsolute(s, cs), U.addInitialPk(s, mt.initialKP);\n        const qe = U.endAlignment(s);\n        z.push(qe);\n      }\n      const ct = j.createAlignmentsVector(s, z), pt = j.createCoordinationMatrixVector(\n        s,\n        t.coordinationMatrix.elements\n      );\n      j.startCivilData(s), j.addAlignments(s, ct), j.addCoordinationMatrix(s, pt), o = j.endCivilData(s);\n    }\n    for (const z of t.items) {\n      const U = z.exportData(), j = [];\n      for (const Zt of z.ids) {\n        const cs = z.getInstancesIDs(Zt);\n        if (!cs)\n          throw new Error(\"Instances not found!\");\n        j.push(cs.size);\n      }\n      const ct = n.createPositionVector(s, U.position), pt = n.createNormalVector(s, U.normal), Ut = n.createIndexVector(s, U.index), mt = n.createGroupsVector(s, U.groups), Ft = n.createMaterialsVector(s, U.materials), Ct = n.createMatricesVector(s, U.matrices), Pt = n.createColorsVector(s, U.colors), Mt = n.createIdsVector(s, U.ids), St = n.createItemsSizeVector(s, j), Bt = s.createString(U.id);\n      n.startFragment(s), n.addPosition(s, ct), n.addNormal(s, pt), n.addIndex(s, Ut), n.addGroups(s, mt), n.addMaterials(s, Ft), n.addMatrices(s, Ct), n.addColors(s, Pt), n.addIds(s, Mt), n.addItemsSize(s, St), n.addId(s, Bt), n.addCapacity(s, z.capacity), n.addCapacityOffset(s, z.capacityOffset);\n      const yt = N.endFragment(s);\n      e.push(yt);\n    }\n    const r = i.createItemsVector(s, e), c = i.createCoordinationMatrixVector(\n      s,\n      t.coordinationMatrix.elements\n    );\n    let f = \"\";\n    for (const z of t.keyFragments.values())\n      f.length && (f += this.separator), f += z;\n    let l = \"\";\n    for (const [z] of t.globalToExpressIDs)\n      l.length && (l += this.separator), l += z;\n    const b = s.createString(f), h = s.createString(l), u = [], _ = [], w = [], y = [], d = [];\n    let p = 0, I = 0;\n    for (const [z, [U, j]] of t.data) {\n      u.push(p), w.push(I), d.push(z);\n      for (const ct of U)\n        _.push(ct);\n      for (const ct of j)\n        y.push(ct);\n      p += U.length, I += j.length;\n    }\n    const m = [], g = [];\n    for (const [z, U] of t.geometryIDs.opaque)\n      m.push(z, U);\n    for (const [z, U] of t.geometryIDs.transparent)\n      g.push(z, U);\n    const A = s.createString(t.uuid), F = s.createString(t.name), x = s.createString(t.ifcMetadata.name), C = s.createString(t.ifcMetadata.description), v = s.createString(t.ifcMetadata.schema), M = i.createItemsKeysIndicesVector(s, u), V = i.createItemsKeysVector(s, _), P = i.createItemsRelsIndicesVector(s, w), B = i.createItemsRelsVector(s, y), O = i.createIdsVector(s, d), D = i.createOpaqueGeometriesIdsVector(s, m), $ = i.createTransparentGeometriesIdsVector(\n      s,\n      g\n    ), { min: X, max: Y } = t.boundingBox, Bs = [X.x, X.y, X.z, Y.x, Y.y, Y.z], q = i.createBoundingBoxVector(s, Bs);\n    i.startFragmentsGroup(s), i.addId(s, A), i.addName(s, F), i.addIfcName(s, x), i.addIfcDescription(s, C), i.addIfcSchema(s, v), i.addMaxExpressId(s, t.ifcMetadata.maxExpressID), i.addItems(s, r), i.addFragmentKeys(s, b), i.addGlobalIds(s, h), i.addIds(s, O), i.addItemsKeysIndices(s, M), i.addItemsKeys(s, V), i.addItemsRelsIndices(s, P), i.addItemsRels(s, B), i.addCoordinationMatrix(s, c), i.addBoundingBox(s, q), i.addOpaqueGeometriesIds(s, D), i.addTransparentGeometriesIds(s, $), o !== null && i.addCivil(s, o);\n    const E = js.endFragmentsGroup(s);\n    return s.finish(E), s.asUint8Array();\n  }\n  setID(t, s) {\n    const e = t.id();\n    e && (s.id = e, s.mesh.uuid = e);\n  }\n  setInstances(t, s) {\n    const e = t.matricesArray(), i = t.colorsArray(), n = t.idsArray(), o = t.itemsSizeArray();\n    if (!e || !n || !o)\n      throw new Error(\"Error: Can't load empty fragment!\");\n    const r = [];\n    let c = 0;\n    for (let f = 0; f < o.length; f++) {\n      const l = n[f], b = o[f], h = [], u = [];\n      for (let w = 0; w < b; w++) {\n        const y = c * 16, d = e.subarray(y, y + 17), p = new L.Matrix4().fromArray(d);\n        if (h.push(p), i) {\n          const I = c * 3, [m, g, A] = i.subarray(I, I + 4), F = new L.Color(m, g, A);\n          u.push(F);\n        }\n        c++;\n      }\n      const _ = u.length ? u : void 0;\n      r.push({ id: l, transforms: h, colors: _ });\n    }\n    s.add(r);\n  }\n  constructMaterials(t) {\n    const s = t.materialsArray(), e = [];\n    if (!s)\n      return e;\n    for (let i = 0; i < s.length; i += 5) {\n      const n = s[i], o = !!s[i + 1], r = s[i + 2], c = s[i + 3], f = s[i + 4], l = new L.Color(r, c, f), b = new L.MeshLambertMaterial({\n        color: l,\n        opacity: n,\n        transparent: o\n      });\n      e.push(b);\n    }\n    return e;\n  }\n  constructFragmentGroup(t) {\n    const s = new Re(), e = t.civil();\n    if (e) {\n      const v = e.coordinationMatrixArray(), M = new L.Matrix4();\n      v && M.fromArray(v), s.civilData = { alignments: /* @__PURE__ */ new Map(), coordinationMatrix: M };\n      const V = e.alignmentsLength();\n      for (let P = 0; P < V; P++) {\n        const B = new L.LineBasicMaterial({ color: 16777215 }), O = new Ne(), D = e.alignments(P);\n        if (!D)\n          throw new Error(\"Alignment not found!\");\n        const $ = D.horizontalLength();\n        O.horizontal = this.constructCivilCurves(\n          D,\n          O,\n          \"horizontal\",\n          $,\n          B\n        );\n        const X = D.verticalLength();\n        O.vertical = this.constructCivilCurves(\n          D,\n          O,\n          \"vertical\",\n          X,\n          B\n        );\n        const Y = D.horizontalLength();\n        O.absolute = this.constructCivilCurves(\n          D,\n          O,\n          \"absolute\",\n          Y,\n          B\n        ), O.initialKP = D.initialPk(), s.civilData.alignments.set(P, O);\n      }\n    }\n    s.uuid = t.id() || s.uuid, s.name = t.name() || \"\", s.ifcMetadata = {\n      name: t.ifcName() || \"\",\n      description: t.ifcDescription() || \"\",\n      schema: t.ifcSchema() || \"IFC2X3\",\n      maxExpressID: t.maxExpressId() || 0\n    };\n    const i = new L.Matrix4().elements, n = t.coordinationMatrixArray() || i, o = t.idsArray() || new Uint32Array(), r = t.itemsKeysIndicesArray() || new Uint32Array(), c = t.itemsKeysArray() || new Uint32Array(), f = t.itemsRelsArray() || new Uint32Array(), l = t.itemsRelsIndicesArray() || new Uint32Array(), h = (t.fragmentKeys() || \"\").split(this.separator), _ = (t.globalIds() || \"\").split(this.separator);\n    this.setGroupData(s, o, r, c, 0), this.setGroupData(s, o, l, f, 1);\n    const w = t.opaqueGeometriesIdsArray() || new Uint32Array(), y = t.transparentGeometriesIdsArray() || new Uint32Array(), d = /* @__PURE__ */ new Map();\n    for (let v = 0; v < w.length - 1; v += 2) {\n      const M = w[v], V = w[v + 1];\n      d.set(M, V);\n    }\n    const p = /* @__PURE__ */ new Map();\n    for (let v = 0; v < y.length - 1; v += 2) {\n      const M = y[v], V = y[v + 1];\n      p.set(M, V);\n    }\n    s.geometryIDs = { opaque: d, transparent: p };\n    const I = t.boundingBoxArray() || [0, 0, 0, 0, 0, 0], [m, g, A, F, x, C] = I;\n    s.boundingBox.min.set(m, g, A), s.boundingBox.max.set(F, x, C);\n    for (let v = 0; v < h.length; v++)\n      s.keyFragments.set(v, h[v]);\n    n.length === 16 && s.coordinationMatrix.fromArray(n);\n    for (let v = 0; v < o.length; v++)\n      s.globalToExpressIDs.set(_[v], o[v]);\n    return s;\n  }\n  setGroupData(t, s, e, i, n) {\n    for (let o = 0; o < e.length; o++) {\n      const r = s[o], c = e[o], f = e[o + 1] || i.length, l = [];\n      for (let h = c; h < f; h++)\n        l.push(i[h]);\n      t.data.has(r) || t.data.set(r, [[], []]);\n      const b = t.data.get(r);\n      b && (b[n] = l);\n    }\n  }\n  constructGeometry(t) {\n    const s = t.positionArray() || new Float32Array(), e = t.normalArray() || new Float32Array(), i = t.indexArray(), n = t.groupsArray();\n    if (!i)\n      throw new Error(\"Index not found!\");\n    const o = new L.BufferGeometry();\n    if (o.setIndex(Array.from(i)), o.setAttribute(\"position\", new L.BufferAttribute(s, 3)), o.setAttribute(\"normal\", new L.BufferAttribute(e, 3)), n)\n      for (let r = 0; r < n.length; r += 3) {\n        const c = n[r], f = n[r + 1], l = n[r + 2];\n        o.addGroup(c, f, l);\n      }\n    return o;\n  }\n  constructCivilCurves(t, s, e, i, n) {\n    const o = [];\n    for (let r = 0; r < i; r++) {\n      const c = t[e](r);\n      if (!c)\n        throw new Error(\"Curve not found!\");\n      const f = c.pointsArray();\n      if (f === null)\n        throw new Error(\"Curve points not found!\");\n      let l = {};\n      const b = c.data();\n      b && (l = JSON.parse(b));\n      const h = new L.EdgesGeometry(), u = new L.BufferAttribute(f, 3);\n      h.setAttribute(\"position\", u);\n      const _ = [];\n      for (let y = 0; y < f.length / 3 - 1; y++)\n        _.push(y, y + 1);\n      h.setIndex(_);\n      const w = new ke(r, l, s, h, n);\n      o.push(w.curve);\n    }\n    return o;\n  }\n  saveCivilCurves(t, s) {\n    const e = Fs, i = [];\n    for (const n of t) {\n      const r = n.mesh.geometry.attributes.position.array, c = e.createPointsVector(s, r), f = s.createString(JSON.stringify(n.data));\n      e.startCivilCurve(s), e.addPoints(s, c), e.addData(s, f);\n      const l = e.endCivilCurve(s);\n      i.push(l);\n    }\n    return i;\n  }\n}\nclass an {\n  constructor() {\n    // prettier-ignore\n    S(this, \"parsers\", [\n      new en(),\n      new sn()\n    ]);\n    /** {@link FragmentParser.version} */\n    S(this, \"version\", \"auto\");\n  }\n  /** {@link FragmentParser.import} */\n  import(t) {\n    const s = this.parsers.length - 1;\n    if (this.version === \"auto\") {\n      for (let o = 0; o < this.parsers.length; o++) {\n        const c = this.parsers[o].import(t);\n        if (Object.keys(c).length !== 0) {\n          if (o !== 0) {\n            const f = this.parsers.length - o;\n            this.warnVersion(f, s);\n          }\n          return c;\n        }\n      }\n      throw new Error(\"No valid parser found for this file\");\n    }\n    this.checkCurrentVersionValid(s);\n    const e = this.parsers.length - this.version, n = this.parsers[e].import(t);\n    if (Object.keys(n).length === 0)\n      throw new Error(\n        `The given version ${this.version} doesn't match to the given file. Try using \"auto\" in the version property to handle versions automatically.`\n      );\n    return n;\n  }\n  /** {@link FragmentParser.export} */\n  export(t) {\n    const s = this.parsers.length - 1;\n    if (this.version === \"auto\")\n      return this.parsers[this.parsers.length - 1].export(t);\n    this.checkCurrentVersionValid(s);\n    const e = this.parsers.length - this.version;\n    return this.parsers[e].export(t);\n  }\n  checkCurrentVersionValid(t) {\n    if (this.version !== \"auto\") {\n      if (this.version !== t && this.warnVersion(this.version, t), Number.isInteger(this.version))\n        throw new Error(\n          \"Invalid version. Non-automatic versions must an integer.\"\n        );\n      if (this.version < 1 || this.version > t)\n        throw new Error(\n          `Invalid version. Versions range from 1 to ${t}.`\n        );\n    }\n  }\n  warnVersion(t, s) {\n    console.warn(\n      `This fragment file version is ${t}. The latest version is ${s}. To avoid issues, please consider updating your fragments. You can do so by regenerating your fragments from the original IFC file.`\n    );\n  }\n}\nclass Re extends L.Group {\n  constructor() {\n    super(...arguments);\n    /**\n     * An array of Fragment objects that are part of this group.\n     */\n    S(this, \"items\", []);\n    /**\n     * A THREE.Box3 object representing the bounding box of all fragments in this group.\n     */\n    S(this, \"boundingBox\", new L.Box3());\n    /**\n     * A THREE.Matrix4 object representing the coordination matrix of this group.\n     */\n    S(this, \"coordinationMatrix\", new L.Matrix4());\n    /**\n     * A Map object where the keys are uints and the values are strings representing fragment IDs.\n     * This is used to save memory by mapping keys to fragment IDs.\n     */\n    S(this, \"keyFragments\", /* @__PURE__ */ new Map());\n    /**\n     * A Map object where the keys are global IDs and the values are expressIDs.\n     */\n    S(this, \"globalToExpressIDs\", /* @__PURE__ */ new Map());\n    /**\n     * A Map object where the keys are express IDs and the values are arrays of two arrays.\n     * The first array contains fragment keys to which this asset belongs, and the second array contains floor and category IDs.\n     */\n    S(this, \"data\", /* @__PURE__ */ new Map());\n    /**\n     * An object with two Map properties, 'opaque' and 'transparent', representing the geometry IDs and keys of opaque and transparent fragments. They must be distinguished because THREE.js doesn't support transparency per instance in InstancedMesh.\n     */\n    S(this, \"geometryIDs\", {\n      opaque: /* @__PURE__ */ new Map(),\n      transparent: /* @__PURE__ */ new Map()\n    });\n    /**\n     * An object representing metadata about the IFC model defined by the IFC schema.\n     */\n    S(this, \"ifcMetadata\", {\n      name: \"\",\n      description: \"\",\n      schema: \"IFC2X3\",\n      maxExpressID: 0\n    });\n    /**\n     * An optional object containing civil engineering data.\n     */\n    S(this, \"civilData\");\n    /**\n     * An object containing settings for streaming data, including base URL, base file name, IDs, and types.\n     */\n    S(this, \"streamSettings\", {\n      baseUrl: \"\",\n      baseFileName: \"\",\n      ids: /* @__PURE__ */ new Map(),\n      types: /* @__PURE__ */ new Map()\n    });\n    /**\n     * A protected property representing local properties of the fragments in this group.\n     */\n    S(this, \"_properties\");\n  }\n  /**\n   * A getter that checks if this group has properties, either locally defined or streamed from a data source.\n   */\n  get hasProperties() {\n    const s = this._properties !== void 0, e = this.streamSettings.ids.size !== 0;\n    return s || e;\n  }\n  /**\n   * A method to create a map of fragment IDs and express IDs contained within them. This is useful because if you want to get \"a chair\", it might be made of 4 different geometries, and thus the subsets of 4 different fragments. Using this method, you would get exactly the fragments of where that chair is.\n   * @param expressIDs - An iterable of express IDs to create the map for.\n   * @returns A map where the keys are fragment IDs and the values are sets of express IDs.\n   */\n  getFragmentMap(s) {\n    const e = {};\n    for (const i of s) {\n      const n = this.data.get(i);\n      if (n)\n        for (const o of n[0]) {\n          const r = this.keyFragments.get(o);\n          r !== void 0 && (e[r] || (e[r] = /* @__PURE__ */ new Set()), e[r].add(i));\n        }\n    }\n    return e;\n  }\n  /**\n   * Method to retrieve the vertices of a specific item within the fragments.\n   * This method finds the fragments that contain the specified item,\n   * then retrieves the vertices of those fragments.\n   *\n   * @param itemID - The ID of the item for which to retrieve vertices. Usually, an IFC expressID.\n   * @returns An array of THREE.Vector3 objects representing the vertices of the specified item.\n   *\n   * @example\n   * ```typescript\n   * const itemVertices = fragmentsGroup.getItemVertices(12345);\n   * for (const vertex of itemVertices) {\n   *   console.log(`Vertex: ${vertex.x}, ${vertex.y}, ${vertex.z}`);\n   * }\n   * ```\n   */\n  getItemVertices(s) {\n    const e = [], i = this.getFragmentMap([s]);\n    for (const n in i) {\n      const o = this.items.find(\n        (c) => c.id === n\n      );\n      if (!o)\n        continue;\n      const r = o.getInstancesIDs(s);\n      if (r)\n        for (const c of r) {\n          const f = new L.Matrix4();\n          o.mesh.getMatrixAt(c, f);\n          for (const l of o.uniqueVertices) {\n            const b = l.clone().applyMatrix4(f);\n            e.push(b);\n          }\n        }\n    }\n    return e;\n  }\n  /**\n   * Method to dispose of the resources used by the FragmentsGroup.\n   *\n   * @param disposeResources - If true, also dispose of the resources used by the fragments (geometries and materials). Default is true.\n   */\n  dispose(s = !0) {\n    for (const e of this.items)\n      e.dispose(s);\n    if (this.coordinationMatrix = new L.Matrix4(), this.keyFragments.clear(), this.data.clear(), this._properties = {}, this.removeFromParent(), this.items = [], this.civilData) {\n      const { alignments: e } = this.civilData;\n      for (const [i, n] of e)\n        this.disposeAlignment(n.vertical), this.disposeAlignment(n.horizontal), this.disposeAlignment(n.absolute);\n    }\n    this.civilData = void 0;\n  }\n  /**\n   * Method to set local properties of the fragments in this group.\n   *\n   * @param properties - An object containing properties of type IfcProperties.\n   * The keys of the object are express IDs as strings, and the values are objects representing the properties of the corresponding express ID.\n   *\n   * @example\n   * ```typescript\n   * const properties: IfcProperties = {\n   *   \"12345\": {\n   *     name: \"Chair\",\n   *     type: 1001,\n   *     color: [0.5, 0.5, 0.5],\n   *     //... other properties\n   *   },\n   *   \"67890\": {\n   *     name: \"Table\",\n   *     type: 1002,\n   *     color: [0.8, 0.8, 0.8],\n   *     //... other properties\n   *   },\n   *   //... more properties\n   * };\n   *\n   * fragmentsGroup.setLocalProperties(properties);\n   * ```\n   */\n  setLocalProperties(s) {\n    this._properties = s;\n  }\n  /**\n   * Method to retrieve the local properties of the fragments in this group.\n   *\n   * @returns {IfcProperties | undefined} - An object containing properties of type IfcProperties.\n   * The keys of the object are express IDs as strings, and the values are objects representing the properties of the corresponding express ID.\n   * If no local properties are set, it returns `undefined`.\n   *\n   * @example\n   * ```typescript\n   * const properties = fragmentsGroup.getLocalProperties();\n   * if (properties) {\n   *   for (const id in properties) {\n   *     const property = properties[id];\n   *     console.log(`ID: ${id}, Name: ${property.name}, Type: ${property.type}`);\n   *   }\n   * }\n   * ```\n   */\n  getLocalProperties() {\n    return this._properties;\n  }\n  /**\n   * Method to retrieve all property IDs from either local properties or streamed properties.\n   *\n   * @returns {number[]} - An array of property IDs.\n   *\n   * @example\n   * ```typescript\n   * const propertyIDs = fragmentsGroup.getAllPropertiesIDs();\n   * console.log(propertyIDs); // Output: [12345, 67890,...]\n   * ```\n   */\n  getAllPropertiesIDs() {\n    return this._properties ? Object.keys(this._properties).map((s) => parseInt(s, 10)) : Array.from(this.streamSettings.ids.keys());\n  }\n  /**\n   * Method to retrieve all property types from either local properties or streamed properties.\n   *\n   * @returns {number[]} - An array of unique property types.\n   *\n   * @example\n   * ```typescript\n   * const propertyTypes = fragmentsGroup.getAllPropertiesTypes();\n   * console.log(propertyTypes); // Output: [1001, 1002,...]\n   * ```\n   */\n  getAllPropertiesTypes() {\n    if (this._properties) {\n      const s = /* @__PURE__ */ new Set();\n      for (const e in this._properties) {\n        const i = this._properties[e];\n        i.type !== void 0 && s.add(i.type);\n      }\n      return Array.from(s);\n    }\n    return Array.from(this.streamSettings.types.keys());\n  }\n  async getProperties(s) {\n    if (this._properties)\n      return this._properties[s] || null;\n    const e = this.getPropsURL(s), i = await this.getPropertiesData(e);\n    return i ? i[s] : null;\n  }\n  /**\n   * Method to set properties of a specific fragment in this group.\n   *\n   * @param id - The ID of the fragment for which to set properties.\n   * @param value - The new properties to set for the fragment. If null, it deletes the properties for the fragment.\n   * @throws Will throw an error if writing streamed properties, as it is not supported yet.\n   *\n   * @example\n   * ```typescript\n   * const properties: IfcProperties = {\n   *   \"12345\": {\n   *     name: \"Chair\",\n   *     type: 1001,\n   *     color: [0.5, 0.5, 0.5],\n   *     //... other properties\n   *   },\n   * };\n   *\n   * fragmentsGroup.setProperties(12345, properties[12345]);\n   * ```\n   */\n  async setProperties(s, e) {\n    if (this._properties) {\n      e !== null ? this._properties[s] = e : delete this._properties[s];\n      return;\n    }\n    throw new Error(\"Writing streamed properties not supported yet!\");\n  }\n  /**\n   * Method to retrieve all properties of a specific type from either local properties or streamed properties.\n   *\n   * @param type - The type of properties to retrieve.\n   * @returns A Promise that resolves to an object containing properties of type IfcProperties, or null if no properties of the specified type are found.\n   *\n   * @example\n   * ```typescript\n   * const type = 1001; // Example type\n   * fragmentsGroup.getAllPropertiesOfType(type).then((properties) => {\n   *   if (properties) {\n   *     for (const id in properties) {\n   *       const property = properties[id];\n   *       console.log(`ID: ${id}, Name: ${property.name}, Type: ${property.type}`);\n   *     }\n   *   } else {\n   *     console.log(`No properties of type ${type} found.`);\n   *   }\n   * });\n   * ```\n   */\n  async getAllPropertiesOfType(s) {\n    if (this._properties) {\n      const o = {};\n      let r = !1;\n      for (const c in this._properties) {\n        const f = this._properties[c];\n        f.type === s && (o[f.expressID] = f, r = !0);\n      }\n      return r ? o : null;\n    }\n    const { types: e } = this.streamSettings, i = e.get(s);\n    if (i === void 0)\n      return null;\n    const n = {};\n    for (const o of i) {\n      const r = this.constructFileName(o), c = this.constructURL(r), f = await this.getPropertiesData(c);\n      for (const l in f)\n        n[parseInt(l, 10)] = f[l];\n    }\n    return n;\n  }\n  getPropsURL(s) {\n    const { ids: e } = this.streamSettings, i = e.get(s);\n    if (i === void 0)\n      throw new Error(\"ID not found\");\n    const n = this.constructFileName(i);\n    return this.constructURL(n);\n  }\n  async getPropertiesData(s) {\n    return (await fetch(s)).json();\n  }\n  constructFileName(s) {\n    const { baseFileName: e } = this.streamSettings;\n    return `${e}-${s}`;\n  }\n  constructURL(s) {\n    const { baseUrl: e } = this.streamSettings;\n    return `${e}${s}`;\n  }\n  disposeAlignment(s) {\n    for (const e of s)\n      if (e.mesh.geometry.dispose(), Array.isArray(e.mesh.material))\n        for (const i of e.mesh.material)\n          i.dispose();\n      else\n        e.mesh.material.dispose();\n    s.length = 0;\n  }\n}\nclass Ne {\n  constructor() {\n    /**\n     * Vertical civil curves in the alignment.\n     */\n    S(this, \"vertical\", []);\n    /**\n     * Horizontal civil curves in the alignment.\n     */\n    S(this, \"horizontal\", []);\n    /**\n     * Absolute civil curves in the alignment.\n     */\n    S(this, \"absolute\", []);\n    /**\n     * Initial KP (Kilometer Point) of the alignment.\n     */\n    S(this, \"initialKP\", 0);\n  }\n  /**\n   * Returns the total length of the specified alignment type.\n   * @param type - The type of alignment (vertical, horizontal, or absolute).\n   * @returns The total length of the specified alignment type.\n   */\n  getLength(t) {\n    let s = 0;\n    for (const e of this[t])\n      s += e.getLength();\n    return s;\n  }\n  /**\n   * Returns the point at the specified percentage along the specified alignment type.\n   * @param percentage - The percentage along the alignment type (between zero and one).\n   * @param type - The type of alignment (vertical, horizontal, or absolute).\n   * @returns The point at the specified percentage along the specified alignment type.\n   * @throws Will throw an error if the percentage is out of range or if the point cannot be computed.\n   */\n  getPointAt(t, s) {\n    const e = this.getCurveAt(t, s);\n    return e.curve.getPointAt(e.percentage);\n  }\n  // Returns the percentage or null if the point is not contained in this alignment\n  getPercentageAt(t, s, e = 0.01) {\n    const i = this[s];\n    let n = 0;\n    for (const o of i) {\n      const r = o.getPercentageAt(t, e), c = o.getLength();\n      if (r !== null) {\n        const f = n + r * c, l = this.getLength(s);\n        return f / l;\n      }\n      n += c;\n    }\n    return null;\n  }\n  /**\n   * Returns the curve and the percentage at the specified percentage along the specified alignment type.\n   * If the percentage is out of range, it will be clamped to the nearest valid value (0 or 1).\n   * If the point cannot be computed, an error will be thrown.\n   *\n   * @param percentage - The percentage along the alignment type (between zero and one).\n   * @param type - The type of alignment (vertical, horizontal, or absolute).\n   * @returns An object containing the curve and the percentage along the curve.\n   * @throws Will throw an error if the percentage is out of range or if the point cannot be computed.\n   */\n  getCurveAt(t, s) {\n    t < 0 ? t = 0 : t > 1 && (t = 1);\n    const e = this[s], n = this.getLength(s) * t;\n    let o = 0;\n    for (const r of e) {\n      const c = r.getLength();\n      if (o + c >= n) {\n        const l = (n - o) / c;\n        return { curve: r, percentage: l };\n      }\n      o += c;\n    }\n    throw new Error(\"Could not compute point!\");\n  }\n}\nclass nn {\n  /**\n   * Constructs a new instance of CivilCurve.\n   * @param index - The index of the curve.\n   * @param mesh - The mesh associated with the curve.\n   * @param data - Additional data associated with the curve.\n   * @param alignment - The alignment of the curve.\n   */\n  constructor(t, s, e, i) {\n    /**\n     * The index of the curve. An alignment is a sequence of ordered curves, and this is the index of this curve in that sequence.\n     */\n    S(this, \"index\");\n    /**\n     * The THREE.js mesh containing the vertices of the curve.\n     */\n    S(this, \"mesh\");\n    /**\n     * Additional data associated with the curve.\n     */\n    S(this, \"data\");\n    /**\n     * The alignment to which this curve belongs.\n     */\n    S(this, \"alignment\");\n    this.index = t, this.mesh = s, this.data = e, this.alignment = i;\n  }\n  get _index() {\n    return this.mesh.geometry.index;\n  }\n  get _pos() {\n    return this.mesh.geometry.attributes.position.array;\n  }\n  /**\n   * Calculates the total length of the curve by summing up the lengths of all segments.\n   * @returns The total length of the curve.\n   */\n  getLength() {\n    let t = 0;\n    for (let s = 0; s < this._index.array.length - 1; s += 2) {\n      const { startPoint: e, endPoint: i } = this.getSegment(s);\n      t += e.distanceTo(i);\n    }\n    return t;\n  }\n  /**\n   * Calculates a point on the curve based on the given percentage.\n   *\n   * @param percentage - The percentage along the curve (between zero and one).\n   * @returns A new THREE.Vector3 representing the point on the curve.\n   *\n   * @remarks\n   * The method works by first finding the segment that corresponds to the given percentage.\n   * It then normalizes the direction of the segment, multiplies it by the distance to the start of the segment,\n   * and adds it to the start point of the segment.\n   *\n   * @throws Will throw an error if the percentage is outside the range [0, 1].\n   */\n  getPointAt(t) {\n    const { startPoint: s, endPoint: e, distanceToStart: i } = this.getSegmentAt(t), n = e.clone();\n    return n.sub(s), n.normalize(), n.multiplyScalar(i), n.add(s), n;\n  }\n  /**\n   * Calculates a segment of the curve based on the given percentage.\n   *\n   * @param percentage - The percentage along the curve (between zero and one).\n   * @returns An object containing the distance to the start of the segment, the index of the segment, and the start and end points of the segment.\n   *\n   * @remarks\n   * The method works by first finding the segment that corresponds to the given percentage.\n   * It then returns an object containing the distance to the start of the segment, the index of the segment, and the start and end points of the segment.\n   *\n   * @throws Will throw an error if the percentage is outside the range [0, 1].\n   */\n  getSegmentAt(t) {\n    t < 0 ? t = 0 : t > 1 && (t = 1);\n    const e = this.getLength() * t;\n    let i = 0;\n    for (let n = 0; n < this._index.array.length - 1; n += 2) {\n      const { startPoint: o, endPoint: r } = this.getSegment(n), c = o.distanceTo(r);\n      if (i + c >= e)\n        return { distanceToStart: e - i, index: n, startPoint: o, endPoint: r };\n      i += c;\n    }\n    throw new Error(\"Could not compute point\");\n  }\n  /**\n   * Calculates the percentage of the curve that corresponds to the given point.\n   *\n   * @param point - The point for which to calculate the percentage.\n   * @param tolerance - The tolerance for determining if a point is on the curve. Default is 0.01.\n   * @returns The percentage of the curve that corresponds to the given point, or null if the point is not contained in this curve.\n   *\n   * @remarks\n   * The method works by iterating over each segment of the curve and checking if the given point is within the tolerance of the segment.\n   * If a point is found, it calculates the percentage of the curve that corresponds to the point.\n   * If no point is found, it returns null.\n   */\n  getPercentageAt(t, s = 0.01) {\n    let e = 0;\n    for (let i = 0; i < this._index.array.length - 1; i += 2) {\n      const { startPoint: n, endPoint: o } = this.getSegment(i), r = n.distanceTo(o), c = t.distanceTo(n), f = t.distanceTo(o);\n      if (c + f - r <= s) {\n        const h = e + c, u = this.getLength();\n        return h / u;\n      }\n      e += r;\n    }\n    return null;\n  }\n  /**\n   * Retrieves a segment of the curve based on the given index.\n   *\n   * @param index - The index of the segment.\n   * @returns An object containing the start and end points of the segment.\n   *\n   * @remarks\n   * The method calculates the start and end points of the segment based on the given index.\n   * It uses the index array and position attribute of the curve's geometry to determine the start and end points.\n   *\n   * @throws Will throw an error if the index is out of range.\n   */\n  getSegment(t) {\n    const s = this._index.array[t] * 3, e = this._index.array[t + 1] * 3, i = new L.Vector3(\n      this._pos[s],\n      this._pos[s + 1],\n      this._pos[s + 2]\n    ), n = new L.Vector3(\n      this._pos[e],\n      this._pos[e + 1],\n      this._pos[e + 2]\n    );\n    return { startPoint: i, endPoint: n };\n  }\n}\nclass ke extends L.LineSegments {\n  /**\n   * Constructs a new instance of CurveMesh.\n   *\n   * @param index - The index of the curve mesh.\n   * @param data - The data associated with the curve mesh.\n   * @param alignment - The alignment of the curve mesh.\n   * @param geometry - The geometry for the curve mesh. Optional.\n   * @param material - The material(s) for the curve mesh. Optional.\n   */\n  constructor(s, e, i, n, o) {\n    super(n, o);\n    /**\n     * The civil curve associated with this curve mesh.\n     */\n    S(this, \"curve\");\n    this.curve = new nn(s, this, e, i);\n  }\n}\nclass nt {\n  constructor() {\n    S(this, \"bb\", null);\n    S(this, \"bb_pos\", 0);\n  }\n  __init(t, s) {\n    return this.bb_pos = t, this.bb = s, this;\n  }\n  static getRootAsStreamedGeometry(t, s) {\n    return (s || new nt()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  static getSizePrefixedRootAsStreamedGeometry(t, s) {\n    return t.setPosition(t.position() + W), (s || new nt()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  geometryId() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? this.bb.readUint32(this.bb_pos + t) : 0;\n  }\n  position(t) {\n    const s = this.bb.__offset(this.bb_pos, 6);\n    return s ? this.bb.readFloat32(\n      this.bb.__vector(this.bb_pos + s) + t * 4\n    ) : 0;\n  }\n  positionLength() {\n    const t = this.bb.__offset(this.bb_pos, 6);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  positionArray() {\n    const t = this.bb.__offset(this.bb_pos, 6);\n    return t ? new Float32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  normal(t) {\n    const s = this.bb.__offset(this.bb_pos, 8);\n    return s ? this.bb.readFloat32(\n      this.bb.__vector(this.bb_pos + s) + t * 4\n    ) : 0;\n  }\n  normalLength() {\n    const t = this.bb.__offset(this.bb_pos, 8);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  normalArray() {\n    const t = this.bb.__offset(this.bb_pos, 8);\n    return t ? new Float32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  index(t) {\n    const s = this.bb.__offset(this.bb_pos, 10);\n    return s ? this.bb.readUint32(this.bb.__vector(this.bb_pos + s) + t * 4) : 0;\n  }\n  indexLength() {\n    const t = this.bb.__offset(this.bb_pos, 10);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  indexArray() {\n    const t = this.bb.__offset(this.bb_pos, 10);\n    return t ? new Uint32Array(\n      this.bb.bytes().buffer,\n      this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + t),\n      this.bb.__vector_len(this.bb_pos + t)\n    ) : null;\n  }\n  static startStreamedGeometry(t) {\n    t.startObject(4);\n  }\n  static addGeometryId(t, s) {\n    t.addFieldInt32(0, s, 0);\n  }\n  static addPosition(t, s) {\n    t.addFieldOffset(1, s, 0);\n  }\n  static createPositionVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startPositionVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addNormal(t, s) {\n    t.addFieldOffset(2, s, 0);\n  }\n  static createNormalVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addFloat32(s[e]);\n    return t.endVector();\n  }\n  static startNormalVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static addIndex(t, s) {\n    t.addFieldOffset(3, s, 0);\n  }\n  static createIndexVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addInt32(s[e]);\n    return t.endVector();\n  }\n  static startIndexVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static endStreamedGeometry(t) {\n    return t.endObject();\n  }\n  static createStreamedGeometry(t, s, e, i, n) {\n    return nt.startStreamedGeometry(t), nt.addGeometryId(t, s), nt.addPosition(t, e), nt.addNormal(t, i), nt.addIndex(t, n), nt.endStreamedGeometry(t);\n  }\n}\nclass xt {\n  constructor() {\n    S(this, \"bb\", null);\n    S(this, \"bb_pos\", 0);\n  }\n  __init(t, s) {\n    return this.bb_pos = t, this.bb = s, this;\n  }\n  static getRootAsStreamedGeometries(t, s) {\n    return (s || new xt()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  static getSizePrefixedRootAsStreamedGeometries(t, s) {\n    return t.setPosition(t.position() + W), (s || new xt()).__init(\n      t.readInt32(t.position()) + t.position(),\n      t\n    );\n  }\n  geometries(t, s) {\n    const e = this.bb.__offset(this.bb_pos, 4);\n    return e ? (s || new nt()).__init(\n      this.bb.__indirect(\n        this.bb.__vector(this.bb_pos + e) + t * 4\n      ),\n      this.bb\n    ) : null;\n  }\n  geometriesLength() {\n    const t = this.bb.__offset(this.bb_pos, 4);\n    return t ? this.bb.__vector_len(this.bb_pos + t) : 0;\n  }\n  static startStreamedGeometries(t) {\n    t.startObject(1);\n  }\n  static addGeometries(t, s) {\n    t.addFieldOffset(0, s, 0);\n  }\n  static createGeometriesVector(t, s) {\n    t.startVector(4, s.length, 4);\n    for (let e = s.length - 1; e >= 0; e--)\n      t.addOffset(s[e]);\n    return t.endVector();\n  }\n  static startGeometriesVector(t, s) {\n    t.startVector(4, s, 4);\n  }\n  static endStreamedGeometries(t) {\n    return t.endObject();\n  }\n  static finishStreamedGeometriesBuffer(t, s) {\n    t.finish(s);\n  }\n  static finishSizePrefixedStreamedGeometriesBuffer(t, s) {\n    t.finish(s, void 0, !0);\n  }\n  static createStreamedGeometries(t, s) {\n    return xt.startStreamedGeometries(t), xt.addGeometries(t, s), xt.endStreamedGeometries(t);\n  }\n}\nclass fn {\n  /**\n   * Imports geometry data from a byte array in a streamed format.\n   *\n   * @param bytes - The byte array containing the serialized geometry data.\n   * @returns A Map of geometry IDs to their respective position, normal, and index arrays.\n   * @throws Will throw an error if the geometry ID is not found.\n   */\n  import(t) {\n    const s = new Dt(t), e = xt.getRootAsStreamedGeometries(s), i = /* @__PURE__ */ new Map(), n = e.geometriesLength();\n    for (let o = 0; o < n; o++) {\n      const r = e.geometries(o);\n      if (!r)\n        continue;\n      const c = r.geometryId();\n      if (c === null)\n        throw new Error(\"Error finding ID!\");\n      const f = r.positionArray(), l = r.normalArray(), b = r.indexArray();\n      !f || !l || !b || i.set(c, { position: f, normal: l, index: b });\n    }\n    return i;\n  }\n  /**\n   * Exports geometry data to a byte array in a streamed format.\n   *\n   * @param geometries - A Map of geometry IDs to their respective position, normal, and index arrays.\n   * @returns A Uint8Array containing the serialized geometry data.\n   */\n  export(t) {\n    const s = new rs(1024), e = [], i = xt, n = nt;\n    for (const [c, { index: f, position: l, normal: b }] of t) {\n      const h = n.createIndexVector(s, f), u = n.createPositionVector(s, l), _ = n.createNormalVector(s, b);\n      n.startStreamedGeometry(s), n.addGeometryId(s, c), n.addIndex(s, h), n.addPosition(s, u), n.addNormal(s, _);\n      const w = n.endStreamedGeometry(s);\n      e.push(w);\n    }\n    const o = i.createGeometriesVector(s, e);\n    i.startStreamedGeometries(s), i.addGeometries(s, o);\n    const r = i.endStreamedGeometries(s);\n    return s.finish(r), s.asUint8Array();\n  }\n}\nexport {\n  Ne as Alignment,\n  nn as CivilCurve,\n  ke as CurveMesh,\n  Ue as Fragment,\n  ae as FragmentMesh,\n  Re as FragmentsGroup,\n  an as Serializer,\n  fn as StreamSerializer\n};\n"],
  "mappings": "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",
  "names": ["os"]
}
